name: publish
on:
  push:
    branches:
      - 'chore/**'
      - 'feat/**'
      - 'fix/**'
      - '1.x'
      - '2.x'
      - '3.x'
      - '4.x'
  # When Release Pull Request is merged
  pull_request:
    branches:
      - main
    types: [closed]

env:
  CI: true
permissions: {}
jobs:
  publish:
    permissions:
      contents: write # to create tags and refs
      actions: write # to cancel running workflow (andymckay/cancel-action)
      issues: write # to create comment
      pull-requests: write # to create comment and so on
    name: Publish
    runs-on: ubuntu-latest
    env:
      CURRENT_VERSION: ''
      PUBLISH_PARAMS: ''
    steps:
      # Setup
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 10
      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org' # Don't touch!
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Log meta
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      # Get commit message
      - name: Get commit message
        run: |
          COMMIT_MESSAGE=$(git log --format=%s -n 1)
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV

      # ------------------ If event is push -------------

      # Get & check npm publish
      - name: Get publish params
        if: github.event_name == 'push'
        run: |
          PUBLISH_PARAMS=`echo $COMMIT_MESSAGE | grep -oE "^chore\(release\): publish \S*\s(.*)" | cut -d " " -f 4-`
          echo "PUBLISH_PARAMS=${PUBLISH_PARAMS}" >> $GITHUB_ENV

      - name: Show publish params
        if: github.event_name == 'push'
        run: echo "Publish pushing provide parameter [$PUBLISH_PARAMS]."

      # Bootstrap project
      - name: Install dependencies
        run: pnpm -r install --frozen-lockfile
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: crates/native_binding/artifacts
      - name: Move artifacts
        run: pnpm artifacts
      - name: build
        run: pnpm build


      # ------------------ publish -------------

      - name: Setup open-harmony configuration
        run: |
          mkdir -p ./.ssh
          echo "${{ secrets.OHPM_PRIVATE_KEY }}" > ./.ssh/id_taro_harmony
          # ohpm config set key_path ./.ssh/id_taro_harmony
          # ohpm config set publish_id ${{ secrets.OHPM_PUBLISH_CODE }}

       # Git stash
      - name: Drop current changes
        run: |
          git add .
          git stash

      - name: Publish
        run: |
          pkgs=("@tarojs/create-app" "@tarojs/cli-convertor" "@tarojs/cli" "@tarojs/plugin-platform-h5" "@tarojs/plugin-platform-harmony-cpp" "@tarojs/plugin-platform-harmony-hybrid" "@tarojs/plugin-platform-harmony-ets" "@tarojs/plugin-platform-jd" "@tarojs/plugin-platform-qq" "@tarojs/plugin-platform-swan" "@tarojs/plugin-platform-tt" "@tarojs/plugin-platform-weapp" "@tarojs/plugin-html" "@tarojs/plugin-http" "@tarojs/plugin-inject" "@tarojs/plugin-mini-ci" "@tarojs/plugin-react-devtools" "@tarojs/plugin-vue-devtools" "@tarojs/rn-runner" "@tarojs/rn-supporter" "@tarojs/plugin-platform-ascf")
          for pkg in "${pkgs[@]}";do
            pnpm publish --registry=https://registry.npmjs.org/ --publish-branch=${{ github.ref_name }} --no-git-checks
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # ------------------ After publish -------------

      # Create release when event is PR
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v4.1.2
          # Copy Pull Request's tile and body to Release Note
          release_name: "chore(release): publish 4.1.2"
          body: |
            # ÁâπÊÄß\r\n\r\n## ascf\r\n- #17748 @userW1021\r\n\r\n# ‰øÆÂ§ç\r\n\r\n## Â∞èÁ®ãÂ∫è\r\n- #17752 @Single-Dancer\r\n- #17697 @ttlive12 \r\n- #17755 @Single-Dancer \r\n- #17274 @voidman2017\r\n- #17583 @zhang0ZGC\r\n\r\n## h5\r\n- #17794 @zhengyanan1\n\n
          draft: false
          prerelease: false

      # Create PR page comment when event is PR
      - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: 17801,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/NervJS/taro/releases/tag/v4.1.2 is released üéâ'
            })
