name: publish
on:
  # When Release Pull Request is merged
  push:
    branches:
      - 'chore/**'
      - 'feat/**'
  pull_request:
    branches:
      - next
    types: [closed]

env:
  CI: true
permissions: {}
jobs:
  publish:
    permissions:
      contents: write # to create tags and refs
      actions: write # to cancel running workflow (andymckay/cancel-action)
      issues: write # to create comment
      pull-requests: write # to create comment and so on

    name: Publish
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Log meta
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      # Get commit message
      - name: Get commit message
        run: |
          COMMIT_MESSAGE=$(git log --format=%s -n 1)
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV
      - name: Show commit message
        run : echo "$COMMIT_MESSAGE"

      - name: Commit message compliance verification
        if: startsWith( env.COMMIT_MESSAGE , 'chore(release):' ) != true
        uses: andymckay/cancel-action@0.3

      - name: Publish push tag verification
        if: github.event_name == 'push' && contains( env.COMMIT_MESSAGE , '--tag=' ) != true
        uses: andymckay/cancel-action@0.3

      # ------------------ If event is push -------------

      # Get & check npm publish
      - name: Get publish params
        if: github.event_name == 'push'
        run: |
          PUBLISH_PARAMS=`echo $COMMIT_MESSAGE | grep -oE "^chore\(release\): publish \S*\s(.*)" | cut -d " " -f 4-`
          echo "PUBLISH_PARAMS=${PUBLISH_PARAMS}" >> $GITHUB_ENV

      - name: Show publish params
        if: github.event_name == 'push'
        run: echo "Publish pushing provide parameter [$PUBLISH_PARAMS]."

      # Define ${CURRENT_VERSION}
      - name: Set Current Version
        shell: bash -ex {0}
        run: |
          CURRENT_VERSION=$(node -p 'require("./package.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      # Check git tag
      - name: Tag Check
        id: tag_check
        shell: bash -ex {0}
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "::set-output name=exists_tag::true"
          else
            echo "::set-output name=exists_tag::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ------------------ If git tag already exists, skip -------------

      - name: Git tag verification
        if: steps.tag_check.outputs.exists_tag == false
        uses: andymckay/cancel-action@0.3

      # Bootstrap project
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: install
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: build
        run: pnpm build

      # Git stash
      - name: Drop current changes
        run: |
          git add .
          git stash

      # Create git tag
      - name: Create Git Tag
        uses: azu/action-package-version-to-git-tag@v2
        with:
          version: ${{ env.CURRENT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      # ------------------ publish -------------

      - name: Publish
        run: |
          if [ '${{ github.event_name }}' == 'pull_request' ] ; then
            pnpm publish --registry=https://registry.npmjs.org/ --publish-branch=${{ github.ref_name }} -r
          elif [ '${{ github.event_name }}' == 'push' ] ; then
            pnpm publish --registry=https://registry.npmjs.org/ --publish-branch=${{ github.ref_name }} -r ${{ env.PUBLISH_PARAMS }}
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # ------------------ After publish -------------

      # Create release when event is PR
      - name: Create Release
        id: create_release
        if: github.event.pull_request.merged == true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.CURRENT_VERSION }}
          # Copy Pull Request's tile and body to Release Note
          release_name: ${{ github.event.pull_request.title }}
          body: |
            ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      # Create PR page comment when event is PR
      - uses: actions/github-script@v6
        if: github.event.pull_request.merged == true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ env.CURRENT_VERSION }} is released ðŸŽ‰'
            })
