name: Build Rust Binaries

on:
  workflow_call:
    inputs:
      name:
        description: 'The name of the binary to build'
        required: false
        default: 'taro'
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              pnpm build:binding:release
              strip -x crates/native_binding/*.node
          - host: windows-latest
            build: pnpm build:binding:release
            target: x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |-
              set -e &&
              pnpm build:binding:release --target x86_64-unknown-linux-gnu &&
              strip crates/native_binding/*.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              pnpm build:binding:release --target aarch64-apple-darwin
              strip -x crates/native_binding/*.node
    name: stable - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref || github.head_ref || github.ref_name }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 16
          check-latest: true
      - name: Rust Install
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.settings.docker }}
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      # Bootstrap project
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Pnpm Install
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: crates/native_binding/${{ inputs.name }}.*.node
          if-no-files-found: error
  test-macOS-windows-binding:
    name: Test bindings on ${{ matrix.settings.target }} - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: windows-latest
            target: x86_64-pc-windows-msvc
        node:
          - '16'
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref || github.head_ref || github.ref_name }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Pnpm install
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: crates/native_binding
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        run: pnpm test:binding
  test-linux-x64-gnu-binding:
    name: Test bindings on Linux-x64-gnu - node@16
    needs:
      - build
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref || github.head_ref || github.ref_name }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Pnpm install
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-x86_64-unknown-linux-gnu
          path: crates/native_binding
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        # 暂时使用了一个第三方的 docker 镜像
        run: docker run --rm -v $(pwd):/build -w /build chf007/pnpm pnpm test:binding
