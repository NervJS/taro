// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parseAst require引用为空 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
const aa = require();
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return null;
  }
}
export default _C;
`;

exports[`parseAst 为data数据添加可选链操作符 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block, View } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
cacheOptions.setOptionsToCache({
  data: {
    testString: '',
    testArray: [],
    testUnArray: undefined
  }
});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    const {
      testString,
      testArray,
      testUnArray
    } = this.data;
    return <Block><View>{testString?.trim()}</View>{testArray?.[0]?.children?.map((item, index) => {
        return <View>{item}</View>;
      })}{testUnArray?.[1]?.children?.map((item, index) => {
        return <View>{item}</View>;
      })}</Block>;
  }
}
export default _C;
`;

exports[`parseAst 为setData数据添加可选链操作符 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block, View } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
cacheOptions.setOptionsToCache({
  onLoad() {
    let list = [];
    let dcopy = [];
    list.push({
      children: [0, 1, 2, 3, 4, 5]
    });
    list.push({
      children: [0, 1, 2, 3, 4]
    });
    this.setData({
      list,
      dcopy: [0, 1, 2, 3, 4, 5]
    });
  }
});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    const {
      list,
      dcopy
    } = this.data;
    return <Block>{list?.[0]?.children?.map((item, index) => {
        return <View>{item}</View>;
      })}{dcopy?.map((item, index) => {
        return <View>{item}</View>;
      })}</Block>;
  }
}
export default _C;
`;

exports[`parseAst 使用 resolveAlias 配置项用来自定义模块路径的映射规则 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
const {
  formatTime
} = require("../tools/util.js");
import { mesg } from "./utils.js";
const {
  test
} = require("../../components/navigation-bar/test.js");
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return null;
  }
}
export default _C;
`;

exports[`parseAst 处理js文件中以/开头的绝对路径 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
const {
  add
} = require("./add.js");
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return null;
  }
}
export default _C;
`;

exports[`parseAst 处理js文件中非正常路径，比如 a/b 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
const {
  add
} = require("./add.js");
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return null;
  }
}
export default _C;
`;

exports[`parseAst 对图片路径的转换处理 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block, Image } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <Image src={require("../../images/tutu.jpg")} mode="scaleToFill"></Image>;
  }
}
export default _C;
`;

exports[`parseAst 当使用e.target.dataset时引入工具函数 getTarget 1`] = `
import withWeapp, { cacheOptions, getTarget } from "@tarojs/with-weapp";
import { Block, View, Button } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
app.createPage({
  data: {
    tagInfo: {
      id: 123456,
      data: '茅台'
    },
    msg: '',
    tagName: {}
  },
  getMsg(e) {
    const detail = e.currentTarget;
    //变量赋值
    const tagName_ = getTarget(e.currentTarget, Taro).dataset.tagName;
    const tagData_ = getTarget(e.currentTarget, Taro).dataset.tagData;
    //结构赋值
    const {
      tagName
    } = getTarget(e?.target, Taro)?.dataset;
    const {
      tagData
    } = getTarget(e?.target, Taro)?.dataset;
  },
  getMsg02(e) {
    const detail = e.currentTarget;
    const tagname_ = getTarget(e.currentTarget, Taro).dataset.tagname;
    const tagdata_ = getTarget(e.currentTarget, Taro).dataset.tagdata;
    const {
      tagname
    } = getTarget(detail, Taro)?.dataset;
    const {
      tagdata
    } = getTarget(detail, Taro)?.dataset;
  }
});
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    const {
      tagInfo
    } = this.data;
    return <Block><View>测试data-xxx-xxx写法</View><Button data-tag-name="WX1314" data-tag-data={tagInfo} onClick={this.getMsg}>获取</Button><View>测试data-xxxXxxx 驼峰写法</View><Button data-tagname="WX1314" data-tagdata={tagInfo} onClick={this.getMsg02}>获取</Button></Block>;
  }
}
export default _C;
`;

exports[`parseAst 模板中使用function 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block, Button } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
import ItemTmpl from '../../../imports/ItemTmpl.js';
cacheOptions.setOptionsToCache({
  onClick() {
    console.log('click');
  }
});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <ItemTmpl data={{
      text: 'forbar'
    }} onClick={this.onClick}></ItemTmpl>;
  }
}
export default _C;
`;

exports[`parseAst 模板按需导入 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
import TemplateATmpl from 'taroConvert/src/imports/TemplateATmpl.js';
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <TemplateATmpl></TemplateATmpl>;
  }
}
export default _C;
`;

exports[`parseAst 自定义组件按需导入 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
import ComponentB from '../components/b';
import ComponentA from '../components/a';
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <Block><ComponentA name="a"></ComponentA><ComponentB name="b"></ComponentB>{
        /*  <component-c name="c" /> */
      }</Block>;
  }
}
export default _C;
`;

exports[`parseAst 转换后模块名重名时，为导入的组件模块名添加Component后缀，以示区分 1`] = `
import withWeapp, { cacheOptions } from "@tarojs/with-weapp";
import { Block } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
import Jstest from '../../components/test.js';
import { Mymodule, Mymodules } from '../../components/test.js';
import MymodulesComponent from '../../components/my-component';
import MymoduleComponent from '../../components/my-component';
import JstestComponent from '../../components/my-component';
cacheOptions.setOptionsToCache({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <Block><JstestComponent></JstestComponent><MymoduleComponent></MymoduleComponent><MymodulesComponent></MymodulesComponent></Block>;
  }
}
export default _C;
`;
