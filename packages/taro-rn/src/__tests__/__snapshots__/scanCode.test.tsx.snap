// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`scanCode should render scanCode success 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFF",
        "flex": 1,
        "justifyContent": "center",
        "position": "absolute",
        "zIndex": 1000,
      },
    ]
  }
>
  <ViewManagerAdapter_ExponentCamera
    onBarCodeScanned={[Function]}
    onCameraReady={[Function]}
    onFacesDetected={[Function]}
    onMountError={[Function]}
    onPictureSaved={[Function]}
    proxiedProperties={
      Object {
        "autoFocus": undefined,
        "barCodeScannerEnabled": true,
        "barCodeScannerSettings": Object {
          "barCodeTypes": Array [],
        },
        "faceDetectorSettings": Object {},
        "flashMode": undefined,
        "focusDepth": 0,
        "type": undefined,
        "whiteBalance": undefined,
        "zoom": 0,
      }
    }
    style={
      Object {
        "height": 1334,
        "width": 750,
      }
    }
  />
  <View
    accessibilityLabel="Close"
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "left": 20,
        "opacity": 1,
        "position": "absolute",
        "top": 10,
      }
    }
  >
    <View
      style={
        Object {
          "paddingTop": 20,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 25,
            "marginTop": null,
            "width": 25,
          }
        }
      />
    </View>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "bottom": 40,
        "opacity": 1,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      style={
        Object {
          "paddingTop": 20,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
  </View>
</View>
`;
