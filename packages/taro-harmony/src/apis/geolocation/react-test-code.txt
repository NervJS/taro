// index.js
import { Component } from 'react'
import { View, Text } from '@tarojs/components'
import {
  getLocation,
  onLocationChange,
  offLocationChange,
  startLocationUpdate,
  stopLocationUpdate
} from '@tarojs/taro'
import './index.scss'

export default class Index extends Component {
  constructor (props) {
    super(props)
    this.state = {
      url: 'JD'
    }
  }

  getCurrentionLoation() {
    console.log('geolocation getCurrentionLoation start')
    getLocation({
      success: (res) => {
        console.log('geolocation getCurrentionLoation success callback' + JSON.stringify(res))
      },
      fail: (err) => {
        console.log('geolocation getCurrentionLoation err callback' + JSON.stringify(err))
      },
      complete: () => {
        console.log('geolocation getCurrentionLoation complete callback')
      }
    })
    console.log('geolocation getCurrentionLoation end')
  }

  getCurrentionLoationPromise() {
    console.log('geolocation getCurrentionLoationPromise start')
    getLocation().then((location) => {
      console.log('geolocation getCurrentionLoationPromise location: ' + JSON.stringify(location));
    })
    console.log('geolocation getCurrentionLoationPromise end')
  }

  locationChangeOn() {
    console.log('geolocation locationChangeOn start')
    onLocationChange({
      success: (res) => {
        console.log('geolocation locationChangeOn success callback' + JSON.stringify(res))
      },
      fail: (err) => {
        console.log('geolocation locationChangeOn err callback' + JSON.stringify(err))
      },
      complete: () => {
        console.log('geolocation locationChangeOn complete callback')
      }
    })
    console.log('geolocation locationChangeOn end')
  }

  locationChangeOff() {
    console.log('geolocation locationChangeOff start')
    offLocationChange({
      success: (res) => {
        console.log('geolocation locationChangeOff success callback' + JSON.stringify(res))
      },
      fail: (err) => {
        console.log('geolocation locationChangeOff err callback' + JSON.stringify(err))
      },
      complete: () => {
        console.log('geolocation locationChangeOff complete callback')
      }
    })
    console.log('geolocation locationChangeOff end')
  }

  locationServiceStateOn() {
    console.log('geolocation locationServiceStateOn start')
    startLocationUpdate({
      success: (res) => {
        console.log('geolocation locationServiceStateOn success callback' + JSON.stringify(res))
      },
      fail: (err) => {
        console.log('geolocation locationServiceStateOn err callback' + JSON.stringify(err))
      },
      complete: () => {
        console.log('geolocation locationServiceStateOn complete callback')
      }
    })
    console.log('geolocation locationServiceStateOn end')
  }

  locationServiceStateOnPromise() {
    console.log('geolocation locationServiceStateOnPromise start')
    startLocationUpdate({}).then((res) => {
      console.log('geolocation locationServiceStateOnPromise location resolve: ' + JSON.stringify(res));
    }, (err) => {
      console.log('geolocation locationServiceStateOnPromise location reject: ' + JSON.stringify(err));
    })
    console.log('geolocation locationServiceStateOnPromise end')
  }

  locationServiceStateOff() {
    console.log('geolocation locationServiceStateOff start')
    stopLocationUpdate({
      success: (res) => {
        console.log('geolocation locationServiceStateOff success callback' + JSON.stringify(res))
      },
      fail: (err) => {
        console.log('geolocation locationServiceStateOff err callback' + JSON.stringify(err))
      },
      complete: () => {
        console.log('geolocation locationServiceStateOff complete callback')
      }
    })
    console.log('geolocation locationServiceStateOff end')
  }

  locationServiceStateOffPromise() {
    console.log('geolocation locationServiceStateOffPromise start')
    stopLocationUpdate({}).then((res) => {
      console.log('geolocation locationServiceStateOffPromise location resolve: ' + JSON.stringify(res));
    }, (err) => {
      console.log('geolocation locationServiceStateOffPromise location reject: ' + err + JSON.stringify(err));
    })
    console.log('geolocation locationServiceStateOffPromise end')
  }

  render () {
    const { url } = this.state
    // const params = {
    //   url: this.state.url
    // }
    // request(params)

    return (
      <View className='container'>
        <view>
          <Text>Hello : </Text>
          <Text>{ url }</Text>
        </view>

        <view className='button-list'>
          <Text className='button' onClick={this.getCurrentionLoation.bind(this)}>getCurrentionLoation</Text>
          <Text className='button' onClick={this.getCurrentionLoationPromise.bind(this)}>getCurrentionLoationPromise</Text>
          <Text className='button' onClick={this.locationChangeOn.bind(this)}>locationChangeOn</Text>
          <Text className='button' onClick={this.locationChangeOff.bind(this)}>locationChangeOff</Text>
          <Text className='button' onClick={this.locationServiceStateOn.bind(this)}>locationServiceStateOn</Text>
          <Text className='button' onClick={this.locationServiceStateOff.bind(this)}>locationServiceStateOff</Text>
          <Text className='button' onClick={this.locationServiceStateOnPromise.bind(this)}>locationServiceStateOnPromise</Text>
          <Text className='button' onClick={this.locationServiceStateOffPromise.bind(this)}>locationServiceStateOffPromise</Text>
        </view>
      </View>
    )
  }
}


// index.scss
.container {
  display: flex;
  flex-direction: column;

  .button-list {
    display: flex;
    flex-direction: column;
  }
}
