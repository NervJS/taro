// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`slot插槽 当元素设置slot属性且值为空串时，移除slot属性 1`] = `<View><SlotComponent renderAfter={<Block><View>这里是插入到组件slot name="after"中的内容</View></Block>}><View>这里是插入到组件slot name="before"中的内容</View></SlotComponent></View>`;

exports[`wxml语法 wx:key="index"会转换成key="index" 1`] = `
data.map((item, index) => {
  return <View key={index}><Text>{item.name}</Text></View>;
})
`;

exports[`wxml语法 列表渲染 1`] = `
array.map((item, index) => {
  return <View>{index + ": " + item.message}</View>;
})
`;

exports[`wxs wxs 多行注释 1`] = `
module.exports = {
  foo: "'hello world' from tools.wxs"
  /*
    msg:'123',
    name:'xixi'
  */
};
`;

exports[`wxs wxs中 单行注释 1`] = `
module.exports = {
  foo: "'hello world' from tools.wxs"
  // msg:'123'
};
`;

exports[`wxs wxs标签中的getDate()转换为new Date() 1`] = `
module.exports = {
  date1: new Date(),
  //参数为数字
  date2: new Date(1500000000000),
  //参数为字符串
  date3: new Date("2017-7-14")
};
`;

exports[`wxs 在页面中引入外部wxs，转换情况 1`] = `
import { Block, View } from "@tarojs/components";
import React from "react";
import Taro from "@tarojs/taro";
const {
  default: withWeapp
} = require("@tarojs/with-weapp");
import wxs_test from ".././../utils/test.wxs";
Page({});
@withWeapp(cacheOptions.getOptionsFromCache())
class _C extends React.Component {
  render() {
    return <Block><View>{wxs_test.foo}</View><View>{wxs_test.bar('nihao')}</View></Block>;
  }
}
export default _C;
`;

exports[`wxs 页面中使用wxs 1`] = `
module.exports = {
  data: 'wxs demo'
};
`;

exports[`wx作用域属性解析 wx:for & wx:for-xxx 1`] = `
array.map((itemName, idx) => {
  return <View>{idx + ": " + itemName.message}</View>;
})
`;

exports[`wx作用域属性解析 wx:for & wx:if 1`] = `
modalKey.map((item, index) => {
  return <Block>{item.key && <View>{"the value is : " + item.value}</View>}</Block>;
})
`;

exports[`wx作用域属性解析 wx:if & wx:for 1`] = `
modalKey.map((item, index) => {
  return <Block>{item.key && <View>{"the value is : " + item.value}</View>}</Block>;
})
`;

exports[`解析wxs中创建正则表达式方法的转换 定义了正则表达式的修饰符,则使用自定义修饰符 1`] = `
var a = new RegExp("jzy123", "img");
module.exports = {
  reg: a
};
`;

exports[`解析wxs中创建正则表达式方法的转换 没有定义了正则表达式的修饰符,就不添加修饰符使用默认 1`] = `
var a = new RegExp("jzy123");
module.exports = {
  reg: a
};
`;
