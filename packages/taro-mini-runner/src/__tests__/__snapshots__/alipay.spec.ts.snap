// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`alipay should build alipay app 1`] = `14`;

exports[`alipay should build alipay app 2`] = `
"
/** filePath: dist/app.acss **/


/** filePath: dist/app.js **/
require("./runtime");

require("./common");

require("./vendors");

require("./taro");

(my["webpackJsonp"] = my["webpackJsonp"] || []).push([ [ 4 ], {
    0: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, "d", (function() {
            return mergeReconciler;
        }));
        __webpack_require__.d(__webpack_exports__, "c", (function() {
            return mergeInternalComponents;
        }));
        __webpack_require__.d(__webpack_exports__, "e", (function() {
            return processApis;
        }));
        __webpack_require__.d(__webpack_exports__, "a", (function() {
            return createReactApp;
        }));
        var _unused_webpack_default_export = "taro";
        function mergeReconciler() {}
        function mergeInternalComponents() {}
        function isFunction() {}
        function isArray() {}
        function processApis() {}
        var EMPTY_OBJ = {};
        var hooks = {};
        function setReconciler() {}
        function connectReactPage() {}
        function createReactApp() {}
        function createNativeComponentConfig() {}
        function connectVuePage() {}
        function createVueApp() {}
        function createVue3App() {}
        var setGlobalDataPlugin = {};
        function useDidHide() {}
        function useDidShow() {}
        function useError() {}
        function useLaunch() {}
        function usePageNotFound() {}
        function useLoad() {}
        function usePageScroll() {}
        function usePullDownRefresh() {}
        function usePullIntercept() {}
        function useReachBottom() {}
        function useResize() {}
        function useUnload() {}
        function useAddToFavorites() {}
        function useOptionMenuClick() {}
        function useSaveExitState() {}
        function useShareAppMessage() {}
        function useShareTimeline() {}
        function useTitleClick() {}
        function useReady() {}
        function useRouter() {}
        function useTabItemTap() {}
        function useScope() {}
    },
    12: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        (function(navigator) {
            var _tarojs_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
            var needPromiseApis = new Set([ "addCardAuth", "getOpenUserInfo", "chooseAlipayContact", "chooseCity", "chooseContact", "choosePhoneContact", "datePicker", "getAddress", "getAuthCode", "getPhoneNumber", "getRunData", "getRunScene", "getServerTime", "getTitleColor", "rsa", "paySignCenter", "tradePay", "isCollected", "multiLevelSelect", "onLocatedComplete", "optionsSelect", "prompt", "regionPicker", "setLocatedCity", "showAuthGuide", "textRiskIdentification", "vibrate", "watchShake", "connectBLEDevice", "disconnectBLEDevice", "makeBluetoothPair", "writeBLECharacteristicValue", "readBLECharacteristicValue", "notifyBLECharacteristicValueChange", "getBLEDeviceServices", "getBLEDeviceCharacteristics", "openBluetoothAdapter", "closeBluetoothAdapter", "getBluetoothAdapterState", "startBluetoothDevicesDiscovery", "stopBluetoothDevicesDiscovery", "getBluetoothDevices", "getConnectedBluetoothDevices" ]);
            var apiDiff = {
                login: {
                    alias: "getAuthCode",
                    options: {
                        set: [ {
                            key: "scopes",
                            value: "auth_base"
                        } ]
                    }
                },
                showActionSheet: {
                    options: {
                        change: [ {
                            old: "itemList",
                            new: "items"
                        } ]
                    }
                },
                showToast: {
                    options: {
                        change: [ {
                            old: "title",
                            new: "content"
                        }, {
                            old: "icon",
                            new: "type"
                        } ],
                        set: [ {
                            key: "type",
                            value: function value(options) {
                                if (options.type === "error") {
                                    return "fail";
                                }
                                return options.type;
                            }
                        } ]
                    }
                },
                showLoading: {
                    options: {
                        change: [ {
                            old: "title",
                            new: "content"
                        } ],
                        set: [ {
                            key: "content",
                            value: function value(options) {
                                if (options.content === undefined) {
                                    options.content = "";
                                }
                                return options.content;
                            }
                        } ]
                    }
                },
                setNavigationBarTitle: {
                    alias: "setNavigationBar"
                },
                setNavigationBarColor: {
                    alias: "setNavigationBar"
                },
                saveImageToPhotosAlbum: {
                    alias: "saveImage",
                    options: {
                        change: [ {
                            old: "filePath",
                            new: "url"
                        } ]
                    }
                },
                previewImage: {
                    options: {
                        set: [ {
                            key: "current",
                            value: function value(options) {
                                return options.urls.indexOf(options.current || options.urls[0]);
                            }
                        } ]
                    }
                },
                getFileInfo: {
                    options: {
                        change: [ {
                            old: "filePath",
                            new: "apFilePath"
                        } ]
                    }
                },
                getSavedFileInfo: {
                    options: {
                        change: [ {
                            old: "filePath",
                            new: "apFilePath"
                        } ]
                    }
                },
                removeSavedFile: {
                    options: {
                        change: [ {
                            old: "filePath",
                            new: "apFilePath"
                        } ]
                    }
                },
                saveFile: {
                    options: {
                        change: [ {
                            old: "tempFilePath",
                            new: "apFilePath"
                        } ]
                    }
                },
                openLocation: {
                    options: {
                        set: [ {
                            key: "latitude",
                            value: function value(options) {
                                return String(options.latitude);
                            }
                        }, {
                            key: "longitude",
                            value: function value(options) {
                                return String(options.longitude);
                            }
                        } ]
                    }
                },
                uploadFile: {
                    options: {
                        change: [ {
                            old: "name",
                            new: "fileName"
                        } ]
                    }
                },
                getClipboardData: {
                    alias: "getClipboard"
                },
                setClipboardData: {
                    alias: "setClipboard",
                    options: {
                        change: [ {
                            old: "data",
                            new: "text"
                        } ]
                    }
                },
                makePhoneCall: {
                    options: {
                        change: [ {
                            old: "phoneNumber",
                            new: "number"
                        } ]
                    }
                },
                scanCode: {
                    alias: "scan",
                    options: {
                        change: [ {
                            old: "onlyFromCamera",
                            new: "hideAlbum"
                        } ],
                        set: [ {
                            key: "type",
                            value: function value(options) {
                                return options.scanType && options.scanType[0].slice(0, -4) || "qr";
                            }
                        } ]
                    }
                },
                setScreenBrightness: {
                    options: {
                        change: [ {
                            old: "value",
                            new: "brightness"
                        } ]
                    }
                },
                onBLEConnectionStateChange: {
                    alias: "onBLEConnectionStateChanged"
                },
                offBLEConnectionStateChange: {
                    alias: "offBLEConnectionStateChanged"
                },
                createBLEConnection: {
                    alias: "connectBLEDevice"
                },
                closeBLEConnection: {
                    alias: "disconnectBLEDevice"
                }
            };
            var asyncResultApiDiff = {
                alert: {
                    res: {
                        set: [ {
                            key: "confirm",
                            value: function value(res) {
                                return res.success;
                            }
                        } ]
                    }
                },
                getScreenBrightness: {
                    res: {
                        set: [ {
                            key: "value",
                            value: function value(res) {
                                return res.brightness;
                            }
                        } ],
                        remove: [ "brightness" ]
                    }
                },
                scan: {
                    res: {
                        set: [ {
                            key: "result",
                            value: function value(res) {
                                return res.code;
                            }
                        } ]
                    }
                },
                getClipboard: {
                    res: {
                        set: [ {
                            key: "data",
                            value: function value(res) {
                                return res.text;
                            }
                        } ]
                    }
                },
                chooseImage: {
                    res: {
                        set: [ {
                            key: "tempFilePaths",
                            value: function value(res) {
                                return res.apFilePaths;
                            }
                        } ]
                    }
                },
                downloadFile: {
                    res: {
                        set: [ {
                            key: "tempFilePath",
                            value: function value(res) {
                                return res.apFilePath;
                            }
                        } ]
                    }
                },
                getAuthCode: {
                    res: {
                        set: [ {
                            key: "code",
                            value: function value(res) {
                                return res.authCode;
                            }
                        } ]
                    }
                },
                getExtConfig: {
                    res: {
                        set: [ {
                            key: "extConfig",
                            value: function value(res) {
                                return res.data;
                            }
                        } ]
                    }
                },
                saveFile: {
                    res: {
                        set: [ {
                            key: "savedFilePath",
                            value: function value(res) {
                                return res.apFilePath;
                            }
                        } ]
                    }
                },
                getBLEDeviceServices: {
                    res: {
                        set: [ {
                            key: "services",
                            value: function value(res) {
                                return res.services.map((function(item) {
                                    return {
                                        uuid: item.serviceId,
                                        isPrimary: item.isPrimary
                                    };
                                }));
                            }
                        } ]
                    }
                }
            };
            function request(options) {
                options = options || {};
                if (typeof options === "string") {
                    options = {
                        url: options
                    };
                }
                var defaultHeaders = {
                    "content-type": "application/json"
                };
                options.headers = defaultHeaders;
                if (options.header) {
                    for (var k in options.header) {
                        var lowerK = k.toLocaleLowerCase();
                        options.headers[lowerK] = options.header[k];
                    }
                    delete options.header;
                }
                var originSuccess = options.success;
                var originFail = options.fail;
                var originComplete = options.complete;
                var requestTask;
                var p = new Promise((function(resolve, reject) {
                    options.success = function(res) {
                        res.statusCode = res.status;
                        delete res.status;
                        res.header = res.headers;
                        delete res.headers;
                        originSuccess && originSuccess(res);
                        resolve(res);
                    };
                    options.fail = function(res) {
                        originFail && originFail(res);
                        reject(res);
                    };
                    options.complete = function(res) {
                        originComplete && originComplete(res);
                    };
                    var nativeRequest = my.canIUse("request") ? my.request : my.httpRequest;
                    requestTask = nativeRequest(options);
                }));
                p.abort = function(cb) {
                    cb && cb();
                    if (requestTask) {
                        requestTask.abort();
                    }
                    return p;
                };
                return p;
            }
            function handleSyncApis(key, global, args) {
                if (key === "getStorageSync") {
                    var arg1 = args[0];
                    if (arg1 != null) {
                        var res = global[key]({
                            key: arg1
                        });
                        var data = null;
                        if (res.hasOwnProperty("data")) {
                            data = res.data;
                        } else if (res.hasOwnProperty("APDataStorage")) {
                            data = res.APDataStorage;
                        }
                        return data === null ? "" : data;
                    }
                    return console.error("getStorageSync \\u4f20\\u5165\\u53c2\\u6570\\u9519\\u8bef");
                }
                if (key === "setStorageSync") {
                    var _arg = args[0];
                    var arg2 = args[1];
                    if (_arg != null) {
                        return global[key]({
                            key: _arg,
                            data: arg2
                        });
                    }
                    return console.error("setStorageSync \\u4f20\\u5165\\u53c2\\u6570\\u9519\\u8bef");
                }
                if (key === "removeStorageSync") {
                    var _arg2 = args[0];
                    if (_arg2 != null) {
                        return global[key]({
                            key: _arg2
                        });
                    }
                    return console.error("removeStorageSync \\u4f20\\u5165\\u53c2\\u6570\\u9519\\u8bef");
                }
                if (key === "createSelectorQuery") {
                    var query = global[key]();
                    query.in = function() {
                        return query;
                    };
                    return query;
                }
                return global[key].apply(global, args);
            }
            function transformMeta(api, options) {
                var apiAlias = api;
                if (api === "showModal") {
                    options.cancelButtonText = options.cancelText || "\\u53d6\\u6d88";
                    options.confirmButtonText = options.confirmText || "\\u786e\\u5b9a";
                    apiAlias = "confirm";
                    if (options.showCancel === false) {
                        options.buttonText = options.confirmText || "\\u786e\\u5b9a";
                        apiAlias = "alert";
                    }
                } else {
                    Object.keys(apiDiff).forEach((function(item) {
                        var apiItem = apiDiff[item];
                        if (api === item) {
                            if (apiItem.alias) {
                                apiAlias = apiItem.alias;
                            }
                            if (apiItem.options) {
                                var change = apiItem.options.change;
                                var set = apiItem.options.set;
                                if (change) {
                                    change.forEach((function(changeItem) {
                                        options[changeItem.new] = options[changeItem.old];
                                    }));
                                }
                                if (set) {
                                    set.forEach((function(setItem) {
                                        options[setItem.key] = typeof setItem.value === "function" ? setItem.value(options) : setItem.value;
                                    }));
                                }
                            }
                        }
                    }));
                }
                return {
                    key: apiAlias,
                    options: options
                };
            }
            function modifyApis(apis) {
                Object.keys(apiDiff).map((function(key) {
                    apis.add(key);
                    var platformKey = apiDiff[key].alias;
                    platformKey && apis.delete(platformKey);
                }));
                apis.add("showModal");
                apis.delete("confirm");
                apis.delete("alert");
            }
            function modifyAsyncResult(key, res) {
                if (key === "connectSocket") {
                    res.onClose = function(cb) {
                        my.onSocketClose(cb);
                    };
                    res.onError = function(cb) {
                        my.onSocketError(cb);
                    };
                    res.onMessage = function(cb) {
                        my.onSocketMessage(cb);
                    };
                    res.onOpen = function(cb) {
                        my.onSocketOpen(cb);
                    };
                    res.send = function(opt) {
                        my.sendSocketMessage(opt);
                    };
                    res.close = function() {
                        my.closeSocket();
                    };
                }
                Object.keys(asyncResultApiDiff).forEach((function(apiKey) {
                    var apiItem = asyncResultApiDiff[apiKey];
                    if (key !== apiKey) {
                        return;
                    }
                    if (!apiItem.res) {
                        return;
                    }
                    var set = apiItem.res.set;
                    var remove = apiItem.res.remove;
                    if (set) {
                        set.forEach((function(setItem) {
                            res[setItem.key] = typeof setItem.value === "function" ? setItem.value(res) : setItem.value;
                        }));
                    }
                    if (remove) {
                        remove.forEach((function(removeItem) {
                            delete res[removeItem];
                        }));
                    }
                }));
            }
            function initNativeApi(taro) {
                Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["e"])(taro, my, {
                    needPromiseApis: needPromiseApis,
                    handleSyncApis: handleSyncApis,
                    transformMeta: transformMeta,
                    modifyApis: modifyApis,
                    modifyAsyncResult: modifyAsyncResult,
                    request: request
                });
            }
            var components = {
                View: {
                    "disable-scroll": "false",
                    hidden: "false",
                    bindAppear: "",
                    bindDisappear: "",
                    bindFirstAppear: ""
                },
                Text: {
                    "number-of-lines": ""
                },
                Map: {
                    skew: "0",
                    rotate: "0",
                    polygons: "[]",
                    "include-padding": "",
                    "ground-overlays": "[]",
                    "tile-overlay": "",
                    "custom-map-style": "",
                    panels: "[]",
                    setting: "{}",
                    optimize: "false",
                    "show-compass": "false",
                    "show-scale": "false",
                    "enable-overlooking": "false",
                    "enable-zoom": "true",
                    "enable-scroll": "true",
                    "enable-rotate": "false",
                    "enable-traffic": "false",
                    "enable-poi": "true",
                    "enable-building": "true",
                    "enable-satellite": "false",
                    bindRegionChange: "",
                    bindPanelTap: "",
                    bindInitComplete: ""
                },
                Button: {
                    scope: "",
                    "public-id": "",
                    bindGetAuthorize: "",
                    bindError: "",
                    bindGetUserInfo: "",
                    bindGetPhoneNumber: "",
                    bindFollowLifestyle: ""
                },
                Checkbox: {
                    bindChange: ""
                },
                Input: {
                    "always-system": "false",
                    "random-number": "false",
                    controlled: "false",
                    enableNative: "true",
                    name: ""
                },
                Slider: {
                    "track-size": "4",
                    "handle-size": "22",
                    "handle-color": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("#ffffff")
                },
                Switch: {
                    controlled: "false"
                },
                Textarea: {
                    "show-count": "true",
                    controlled: "false",
                    enableNative: "false"
                },
                MovableView: {
                    bindChangeEnd: ""
                },
                ScrollView: {
                    "scroll-animation-duration": "",
                    "trap-scroll": "false"
                },
                Swiper: {
                    "active-class": "",
                    "changing-class": "",
                    acceleration: "false",
                    "disable-programmatic-animation": "false",
                    "disable-touch": "false",
                    bindAnimationEnd: ""
                },
                Image: {
                    "default-source": ""
                },
                Camera: {
                    mode: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("normal"),
                    "output-dimension": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("720P"),
                    "frame-size": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("medium"),
                    bindScanCode: "",
                    bindReady: ""
                },
                Canvas: {
                    type: "",
                    width: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("300px"),
                    height: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("225px"),
                    bindReady: ""
                },
                Video: {
                    "poster-size": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("contain"),
                    "mobilenet-hint-type": "1",
                    enableNative: "true",
                    bindLoading: "",
                    bindUserAction: "",
                    bindStop: "",
                    bindRenderStart: ""
                },
                Lottie: {
                    autoplay: "false",
                    path: "",
                    speed: "1.0",
                    "repeat-count": "0",
                    "auto-reverse": "false",
                    "assets-path": "",
                    placeholder: "",
                    djangoId: "",
                    md5: "",
                    optimize: "false",
                    bindDataReady: "",
                    bindDataFailed: "",
                    bindAnimationStart: "",
                    bindAnimationEnd: "",
                    bindAnimationRepeat: "",
                    bindAnimationCancel: "",
                    bindDataLoadReady: ""
                },
                Lifestyle: {
                    "public-id": "",
                    memo: "",
                    bindFollow: ""
                },
                LifeFollow: {
                    sceneId: "",
                    checkFollow: "",
                    bindCheckFollow: "",
                    bindClose: ""
                },
                ContactButton: {
                    "tnt-inst-id": "",
                    scene: "",
                    size: "25",
                    color: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("#00A3FF"),
                    icon: "",
                    "alipay-card-no": "",
                    "ext-info": ""
                },
                ArCamera: {
                    devicePosition: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("back"),
                    marker: "",
                    mode: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("imageTracking"),
                    useCapturedImage: "false",
                    bindInit: "",
                    bindStop: "",
                    bindError: "",
                    bindARFrame: ""
                },
                PageContainer: {
                    show: "false",
                    duration: "300",
                    "z-index": "100",
                    overlay: "true",
                    position: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("bottom"),
                    round: "false",
                    "close-on-slide-down": "false",
                    "overlay-style": "",
                    "custom-style": "",
                    bindBeforeEnter: "",
                    bindEnter: "",
                    bindEnterCancelled: "",
                    bindAfterEnter: "",
                    bindBeforeLeave: "",
                    bindLeave: "",
                    bindLeaveCancelled: "",
                    bindAfterLeave: "",
                    bindClickOverlay: ""
                },
                ShareElement: {
                    name: "",
                    transform: "false",
                    duration: "300",
                    "easing-function": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["singleQuote"])("ease-out")
                }
            };
            var BUBBLE_EVENTS = new Set([ "touchStart", "touchMove", "touchEnd", "touchCancel", "tap", "longTap" ]);
            var hostConfig = {
                initNativeApi: initNativeApi,
                getMiniLifecycle: function getMiniLifecycle(config) {
                    config.component[0] = "didMount";
                    config.component[1] = "didUnmount";
                    return config;
                },
                getEventCenter: function getEventCenter(Events) {
                    if (!my.taroEventCenter) {
                        my.taroEventCenter = new Events;
                    }
                    return my.taroEventCenter;
                },
                modifyTaroEvent: function modifyTaroEvent(event, node) {
                    if (node.tagName === "SWIPER" && event.type === "animationend") {
                        event.type = "animationfinish";
                    }
                },
                isBubbleEvents: function isBubbleEvents(eventName) {
                    return BUBBLE_EVENTS.has(eventName);
                }
            };
            var _navigator = navigator, userAgent = _navigator.userAgent;
            Object.defineProperty(navigator, "userAgent", {
                configurable: true,
                enumerable: true,
                get: function get() {
                    return userAgent || navigator.swuserAgent || "";
                }
            });
            Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["d"])(hostConfig);
            Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__["c"])(components);
        }).call(this, __webpack_require__(4)["navigator"]);
    },
    13: function(module, exports, __webpack_require__) {},
    17: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        var runtime = __webpack_require__(12);
        var taro_runtime = __webpack_require__(4);
        var taro = __webpack_require__(0);
        var classCallCheck = __webpack_require__(5);
        var createClass = __webpack_require__(7);
        var inherits = __webpack_require__(8);
        var createSuper = __webpack_require__(6);
        var react = __webpack_require__(1);
        var app = __webpack_require__(13);
        var app_App = function(_Component) {
            Object(inherits["a"])(App, _Component);
            var _super = Object(createSuper["a"])(App);
            function App() {
                Object(classCallCheck["a"])(this, App);
                return _super.apply(this, arguments);
            }
            Object(createClass["a"])(App, [ {
                key: "componentDidMount",
                value: function componentDidMount() {}
            }, {
                key: "componentDidShow",
                value: function componentDidShow() {}
            }, {
                key: "componentDidHide",
                value: function componentDidHide() {}
            }, {
                key: "render",
                value: function render() {
                    return this.props.children;
                }
            } ]);
            return App;
        }(react["Component"]);
        var lib_src_app = app_App;
        var taro_react = __webpack_require__(9);
        var config = {
            pages: [ "pages/index/index" ],
            window: {
                backgroundTextStyle: "light",
                navigationBarBackgroundColor: "#fff",
                navigationBarTitleText: "WeChat",
                navigationBarTextStyle: "black"
            }
        };
        taro_runtime["window"].__taroAppConfig = config;
        var inst = App(Object(taro["a"])(lib_src_app, react, taro_react["a"], config));
        Object(taro["initPxTransform"])({
            designWidth: 750,
            deviceRatio: {
                640: 1.17,
                750: 1,
                828: .905
            },
            baseFontSize: 20,
            unitPrecision: undefined,
            targetUnit: undefined
        });
    }
}, [ [ 17, 0, 1, 3, 2 ] ] ]);



/** filePath: dist/app.json **/
{"pages":["pages/index/index"],"window":{"backgroundTextStyle":"light","navigationBarBackgroundColor":"#fff","navigationBarTitleText":"WeChat","navigationBarTextStyle":"black"}}

/** filePath: dist/base.axml **/
<import-sjs name="xs" from="./utils.sjs" />
<template name="taro_tmpl">
  <block a:for="{{root.cn}}" a:key="sid">
    <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
  </block>
</template>

<template name="tmpl_0_0">
  <view hover-class="{{xs.b(i.p1,'none')}}" hover-stop-propagation="{{xs.b(i.p4,!1)}}" hover-start-time="{{xs.b(i.p2,50)}}" hover-stay-time="{{xs.b(i.p3,400)}}" onTouchStart="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" animation="{{i.p0}}" onAnimationStart="eh" onAnimationIteration="eh" onAnimationEnd="eh" onTransitionEnd="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh" catchTouchMove="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </view>
</template>

<template name="tmpl_0_5">
  <view hover-class="{{xs.b(i.p1,'none')}}" hover-stop-propagation="{{xs.b(i.p4,!1)}}" hover-start-time="{{xs.b(i.p2,50)}}" hover-stay-time="{{xs.b(i.p3,400)}}" animation="{{i.p0}}" style="{{i.st}}" class="{{i.cl}}"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </view>
</template>

<template name="tmpl_0_2">
  <view style="{{i.st}}" class="{{i.cl}}"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </view>
</template>

<template name="tmpl_0_7">
  <view hover-class="{{xs.b(i.p1,'none')}}" hover-stop-propagation="{{xs.b(i.p4,!1)}}" hover-start-time="{{xs.b(i.p2,50)}}" hover-stay-time="{{xs.b(i.p3,400)}}" onTouchStart="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" animation="{{i.p0}}" onAnimationStart="eh" onAnimationIteration="eh" onAnimationEnd="eh" onTransitionEnd="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </view>
</template>

<template name="tmpl_0_4">
  <text selectable="{{xs.b(i.p1,!1)}}" space="{{i.p2}}" decode="{{xs.b(i.p0,!1)}}" style="{{i.st}}" class="{{i.cl}}"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </text>
</template>

<template name="tmpl_0_6">
  <text selectable="{{xs.b(i.p1,!1)}}" space="{{i.p2}}" decode="{{xs.b(i.p0,!1)}}" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </text>
</template>

<template name="tmpl_0_21">
  <template is="{{xs.c(i, 'tmpl_0_')}}" data="{{i:i}}" />
</template>

<template name="tmpl_0_21_focus">
  <input value="{{i.p14}}" type="{{xs.b(i.p13,'')}}" password="{{xs.b(i.p7,!1)}}" placeholder="{{i.p8}}" placeholder-style="{{i.p10}}" placeholder-class="{{xs.b(i.p9,'input-placeholder')}}" disabled="{{i.p4}}" maxlength="{{xs.b(i.p5,140)}}" cursor-spacing="{{xs.b(i.p3,0)}}" focus="{{xs.b(i.focus,!1)}}" confirm-type="{{xs.b(i.p1,'done')}}" confirm-hold="{{xs.b(i.p0,!1)}}" cursor="{{xs.b(i.p2,i.p14?i.p14.length:-1)}}" selection-start="{{xs.b(i.p12,-1)}}" selection-end="{{xs.b(i.p11,-1)}}" onInput="eh" onFocus="eh" onBlur="eh" onConfirm="eh" name="{{i.p6}}" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}"></input>
</template>

<template name="tmpl_0_21_blur">
  <input value="{{i.p14}}" type="{{xs.b(i.p13,'')}}" password="{{xs.b(i.p7,!1)}}" placeholder="{{i.p8}}" placeholder-style="{{i.p10}}" placeholder-class="{{xs.b(i.p9,'input-placeholder')}}" disabled="{{i.p4}}" maxlength="{{xs.b(i.p5,140)}}" cursor-spacing="{{xs.b(i.p3,0)}}" confirm-type="{{xs.b(i.p1,'done')}}" confirm-hold="{{xs.b(i.p0,!1)}}" cursor="{{xs.b(i.p2,i.p14?i.p14.length:-1)}}" selection-start="{{xs.b(i.p12,-1)}}" selection-end="{{xs.b(i.p11,-1)}}" onInput="eh" onFocus="eh" onBlur="eh" onConfirm="eh" name="{{i.p6}}" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}"></input>
</template>

<template name="tmpl_0_17">
  <cover-image src="{{i.p0}}" onLoad="eh" onError="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </cover-image>
</template>

<template name="tmpl_0_43">
  <template is="{{xs.c(i, 'tmpl_0_')}}" data="{{i:i}}" />
</template>

<template name="tmpl_0_43_focus">
  <textarea value="{{i.p13}}" placeholder="{{i.p8}}" placeholder-style="{{i.p10}}" placeholder-class="{{xs.b(i.p9,'textarea-placeholder')}}" disabled="{{i.p4}}" maxlength="{{xs.b(i.p6,140)}}" auto-focus="{{xs.b(i.p0,!1)}}" focus="{{xs.b(i.focus,!1)}}" auto-height="{{xs.b(i.p1,!1)}}" fixed="{{xs.b(i.p5,!1)}}" cursor-spacing="{{xs.b(i.p3,0)}}" cursor="{{xs.b(i.p2,i.p13?i.p13.length:-1)}}" selection-start="{{xs.b(i.p12,-1)}}" selection-end="{{xs.b(i.p11,-1)}}" onFocus="eh" onBlur="eh" onLineChange="eh" onInput="eh" onConfirm="eh" name="{{i.p7}}" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}"></textarea>
</template>

<template name="tmpl_0_43_blur">
  <textarea value="{{i.p13}}" placeholder="{{i.p8}}" placeholder-style="{{i.p10}}" placeholder-class="{{xs.b(i.p9,'textarea-placeholder')}}" disabled="{{i.p4}}" maxlength="{{xs.b(i.p6,140)}}" auto-focus="{{xs.b(i.p0,!1)}}" auto-height="{{xs.b(i.p1,!1)}}" fixed="{{xs.b(i.p5,!1)}}" cursor-spacing="{{xs.b(i.p3,0)}}" cursor="{{xs.b(i.p2,i.p13?i.p13.length:-1)}}" selection-start="{{xs.b(i.p12,-1)}}" selection-end="{{xs.b(i.p11,-1)}}" onFocus="eh" onBlur="eh" onLineChange="eh" onInput="eh" onConfirm="eh" name="{{i.p7}}" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}"></textarea>
</template>

<template name="tmpl_0_18">
  <cover-view scroll-top="{{xs.b(i.p0,!1)}}" onTouchStart="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </cover-view>
</template>

<template name="tmpl_0_36">
  <scroll-view scroll-x="{{xs.b(i.p7,!1)}}" scroll-y="{{xs.b(i.p8,!1)}}" upper-threshold="{{xs.b(i.p9,50)}}" lower-threshold="{{xs.b(i.p2,50)}}" scroll-top="{{i.p5}}" scroll-left="{{i.p4}}" scroll-into-view="{{i.p3}}" scroll-with-animation="{{xs.b(i.p6,!1)}}" enable-back-to-top="{{xs.b(i.p1,!1)}}" onScrollToUpper="eh" onScrollToLower="eh" onScroll="eh" onTouchStart="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" animation="{{i.p0}}" onAnimationStart="eh" onAnimationIteration="eh" onAnimationEnd="eh" onTransitionEnd="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </scroll-view>
</template>

<template name="tmpl_0_40">
  <swiper indicator-dots="{{xs.b(i.p7,!1)}}" indicator-color="{{xs.b(i.p6,'rgba(0, 0, 0, .3)')}}" indicator-active-color="{{xs.b(i.p5,'#000000')}}" autoplay="{{xs.b(i.p0,!1)}}" current="{{xs.b(i.p2,0)}}" interval="{{xs.b(i.p8,5000)}}" duration="{{xs.b(i.p4,500)}}" circular="{{xs.b(i.p1,!1)}}" vertical="{{xs.b(i.p11,!1)}}" previous-margin="{{xs.b(i.p10,'0px')}}" next-margin="{{xs.b(i.p9,'0px')}}" display-multiple-items="{{xs.b(i.p3,1)}}" onChange="eh" onTransition="eh" onAnimationFinish="eh" onTouchStart="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{xs.f(i.cn)}}" a:key="sid">
      <swiper-item class="{{item.cl}}" style="{{item.st}}" id="{{item.uid||item.sid}}" data-sid="{{item.sid}}">
        <block a:for="{{item.cn}}" a:key="sid">
          <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
        </block>
      </swiper-item>
    </block>
  </swiper>
</template>

<template name="tmpl_0_3">
  <image src="{{i.p2}}" mode="{{xs.b(i.p1,'scaleToFill')}}" lazy-load="{{xs.b(i.p0,!1)}}" style="{{i.st}}" class="{{i.cl}}"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </image>
</template>

<template name="tmpl_0_1">
  <image src="{{i.p2}}" mode="{{xs.b(i.p1,'scaleToFill')}}" lazy-load="{{xs.b(i.p0,!1)}}" onError="eh" onLoad="eh" onTouchStart="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </image>
</template>

<template name="tmpl_0_44">
  <video src="{{i.p20}}" duration="{{i.p6}}" controls="{{xs.b(i.p2,!0)}}" danmu-list="{{i.p4}}" danmu-btn="{{i.p3}}" enable-danmu="{{i.p7}}" autoplay="{{xs.b(i.p1,!1)}}" loop="{{xs.b(i.p10,!1)}}" muted="{{xs.b(i.p11,!1)}}" initial-time="{{xs.b(i.p9,0)}}" page-gesture="{{xs.b(i.p13,!1)}}" direction="{{i.p5}}" show-progress="{{xs.b(i.p19,!0)}}" show-fullscreen-btn="{{xs.b(i.p16,!0)}}" show-play-btn="{{xs.b(i.p18,!0)}}" show-center-play-btn="{{xs.b(i.p15,!0)}}" enable-progress-gesture="{{xs.b(i.p8,!0)}}" object-fit="{{xs.b(i.p12,'contain')}}" poster="{{i.p14}}" show-mute-btn="{{xs.b(i.p17,!1)}}" onPlay="eh" onPause="eh" onEnded="eh" onTimeUpdate="eh" onFullScreenChange="eh" onWaiting="eh" onError="eh" animation="{{i.p0}}" onAnimationStart="eh" onAnimationIteration="eh" onAnimationEnd="eh" onTransitionEnd="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </video>
</template>

<template name="tmpl_0_14">
  <canvas canvas-id="{{i.p0}}" disable-scroll="{{xs.b(i.p1,!1)}}" onError="eh" onTouchStart="eh" onTouchMove="eh" onTouchEnd="eh" onTouchCancel="eh" onLongTap="eh" style="{{i.st}}" class="{{i.cl}}" onTap="eh"  id="{{i.uid||i.sid}}" data-sid="{{i.sid}}">
    <block a:for="{{i.cn}}" a:key="sid">
      <template is="{{xs.a(0, item.nn)}}" data="{{i:item}}" />
    </block>
  </canvas>
</template>

<template name="tmpl_0_8">
  <block>{{i.v}}</block>
</template>


/** filePath: dist/common.js **/
(my["webpackJsonp"] = my["webpackJsonp"] || []).push([ [ 2 ], [ , function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    __webpack_require__.r(__webpack_exports__);
    __webpack_exports__["default"] = "react-mock";
} ] ]);

/** filePath: dist/pages/index/index.acss **/


/** filePath: dist/pages/index/index.axml **/
<import src="../../base.axml"/>
<template is="taro_tmpl" data="{{root:root}}" />

/** filePath: dist/pages/index/index.js **/
/*! For license information please see index.js.LICENSE.txt */
(my["webpackJsonp"] = my["webpackJsonp"] || []).push([ [ 7 ], {
    15: function(module, exports, __webpack_require__) {},
    16: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        var taro_runtime = __webpack_require__(4);
        var esm_typeof = __webpack_require__(3);
        function _regeneratorRuntime() {
            "use strict";
            _regeneratorRuntime = function _regeneratorRuntime() {
                return exports;
            };
            var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {
                obj[key] = desc.value;
            }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
            function define(obj, key, value) {
                return Object.defineProperty(obj, key, {
                    value: value,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), obj[key];
            }
            try {
                define({}, "");
            } catch (err) {
                define = function define(obj, key, value) {
                    return obj[key] = value;
                };
            }
            function wrap(innerFn, outerFn, self, tryLocsList) {
                var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);
                return defineProperty(generator, "_invoke", {
                    value: makeInvokeMethod(innerFn, self, context)
                }), generator;
            }
            function tryCatch(fn, obj, arg) {
                try {
                    return {
                        type: "normal",
                        arg: fn.call(obj, arg)
                    };
                } catch (err) {
                    return {
                        type: "throw",
                        arg: err
                    };
                }
            }
            exports.wrap = wrap;
            var ContinueSentinel = {};
            function Generator() {}
            function GeneratorFunction() {}
            function GeneratorFunctionPrototype() {}
            var IteratorPrototype = {};
            define(IteratorPrototype, iteratorSymbol, (function() {
                return this;
            }));
            var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));
            NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
            var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
            function defineIteratorMethods(prototype) {
                [ "next", "throw", "return" ].forEach((function(method) {
                    define(prototype, method, (function(arg) {
                        return this._invoke(method, arg);
                    }));
                }));
            }
            function AsyncIterator(generator, PromiseImpl) {
                function invoke(method, arg, resolve, reject) {
                    var record = tryCatch(generator[method], generator, arg);
                    if ("throw" !== record.type) {
                        var result = record.arg, value = result.value;
                        return value && "object" == Object(esm_typeof["a"])(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then((function(value) {
                            invoke("next", value, resolve, reject);
                        }), (function(err) {
                            invoke("throw", err, resolve, reject);
                        })) : PromiseImpl.resolve(value).then((function(unwrapped) {
                            result.value = unwrapped, resolve(result);
                        }), (function(error) {
                            return invoke("throw", error, resolve, reject);
                        }));
                    }
                    reject(record.arg);
                }
                var previousPromise;
                defineProperty(this, "_invoke", {
                    value: function value(method, arg) {
                        function callInvokeWithMethodAndArg() {
                            return new PromiseImpl((function(resolve, reject) {
                                invoke(method, arg, resolve, reject);
                            }));
                        }
                        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
                    }
                });
            }
            function makeInvokeMethod(innerFn, self, context) {
                var state = "suspendedStart";
                return function(method, arg) {
                    if ("executing" === state) throw new Error("Generator is already running");
                    if ("completed" === state) {
                        if ("throw" === method) throw arg;
                        return doneResult();
                    }
                    for (context.method = method, context.arg = arg; ;) {
                        var delegate = context.delegate;
                        if (delegate) {
                            var delegateResult = maybeInvokeDelegate(delegate, context);
                            if (delegateResult) {
                                if (delegateResult === ContinueSentinel) continue;
                                return delegateResult;
                            }
                        }
                        if ("next" === context.method) context.sent = context._sent = context.arg; else if ("throw" === context.method) {
                            if ("suspendedStart" === state) throw state = "completed", context.arg;
                            context.dispatchException(context.arg);
                        } else "return" === context.method && context.abrupt("return", context.arg);
                        state = "executing";
                        var record = tryCatch(innerFn, self, context);
                        if ("normal" === record.type) {
                            if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
                            return {
                                value: record.arg,
                                done: context.done
                            };
                        }
                        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
                    }
                };
            }
            function maybeInvokeDelegate(delegate, context) {
                var methodName = context.method, method = delegate.iterator[methodName];
                if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", 
                context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", 
                context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), 
                ContinueSentinel;
                var record = tryCatch(method, delegate.iterator, context.arg);
                if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, 
                context.delegate = null, ContinueSentinel;
                var info = record.arg;
                return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, 
                "return" !== context.method && (context.method = "next", context.arg = undefined), 
                context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), 
                context.delegate = null, ContinueSentinel);
            }
            function pushTryEntry(locs) {
                var entry = {
                    tryLoc: locs[0]
                };
                1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], 
                entry.afterLoc = locs[3]), this.tryEntries.push(entry);
            }
            function resetTryEntry(entry) {
                var record = entry.completion || {};
                record.type = "normal", delete record.arg, entry.completion = record;
            }
            function Context(tryLocsList) {
                this.tryEntries = [ {
                    tryLoc: "root"
                } ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
            }
            function values(iterable) {
                if (iterable) {
                    var iteratorMethod = iterable[iteratorSymbol];
                    if (iteratorMethod) return iteratorMethod.call(iterable);
                    if ("function" == typeof iterable.next) return iterable;
                    if (!isNaN(iterable.length)) {
                        var i = -1, next = function next() {
                            for (;++i < iterable.length; ) if (hasOwn.call(iterable, i)) return next.value = iterable[i], 
                            next.done = !1, next;
                            return next.value = undefined, next.done = !0, next;
                        };
                        return next.next = next;
                    }
                }
                return {
                    next: doneResult
                };
            }
            function doneResult() {
                return {
                    value: undefined,
                    done: !0
                };
            }
            return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
                value: GeneratorFunctionPrototype,
                configurable: !0
            }), defineProperty(GeneratorFunctionPrototype, "constructor", {
                value: GeneratorFunction,
                configurable: !0
            }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), 
            exports.isGeneratorFunction = function(genFun) {
                var ctor = "function" == typeof genFun && genFun.constructor;
                return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
            }, exports.mark = function(genFun) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, 
                define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), 
                genFun;
            }, exports.awrap = function(arg) {
                return {
                    __await: arg
                };
            }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, (function() {
                return this;
            })), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
                void 0 === PromiseImpl && (PromiseImpl = Promise);
                var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
                return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then((function(result) {
                    return result.done ? result.value : iter.next();
                }));
            }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, (function() {
                return this;
            })), define(Gp, "toString", (function() {
                return "[object Generator]";
            })), exports.keys = function(val) {
                var object = Object(val), keys = [];
                for (var key in object) keys.push(key);
                return keys.reverse(), function next() {
                    for (;keys.length; ) {
                        var key = keys.pop();
                        if (key in object) return next.value = key, next.done = !1, next;
                    }
                    return next.done = !0, next;
                };
            }, exports.values = values, Context.prototype = {
                constructor: Context,
                reset: function reset(skipTempReset) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, 
                    this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), 
                    !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
                },
                stop: function stop() {
                    this.done = !0;
                    var rootRecord = this.tryEntries[0].completion;
                    if ("throw" === rootRecord.type) throw rootRecord.arg;
                    return this.rval;
                },
                dispatchException: function dispatchException(exception) {
                    if (this.done) throw exception;
                    var context = this;
                    function handle(loc, caught) {
                        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", 
                        context.arg = undefined), !!caught;
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i], record = entry.completion;
                        if ("root" === entry.tryLoc) return handle("end");
                        if (entry.tryLoc <= this.prev) {
                            var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc");
                            if (hasCatch && hasFinally) {
                                if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
                                if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                            } else if (hasCatch) {
                                if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
                            } else {
                                if (!hasFinally) throw new Error("try statement without catch or finally");
                                if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                            }
                        }
                    }
                },
                abrupt: function abrupt(type, arg) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                            var finallyEntry = entry;
                            break;
                        }
                    }
                    finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
                    var record = finallyEntry ? finallyEntry.completion : {};
                    return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", 
                    this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
                },
                complete: function complete(record, afterLoc) {
                    if ("throw" === record.type) throw record.arg;
                    return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, 
                    this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), 
                    ContinueSentinel;
                },
                finish: function finish(finallyLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), 
                        resetTryEntry(entry), ContinueSentinel;
                    }
                },
                catch: function _catch(tryLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc === tryLoc) {
                            var record = entry.completion;
                            if ("throw" === record.type) {
                                var thrown = record.arg;
                                resetTryEntry(entry);
                            }
                            return thrown;
                        }
                    }
                    throw new Error("illegal catch attempt");
                },
                delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                    return this.delegate = {
                        iterator: values(iterable),
                        resultName: resultName,
                        nextLoc: nextLoc
                    }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
                }
            }, exports;
        }
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) {
                resolve(value);
            } else {
                Promise.resolve(value).then(_next, _throw);
            }
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(undefined);
                }));
            };
        }
        var classCallCheck = __webpack_require__(5);
        var createClass = __webpack_require__(7);
        var inherits = __webpack_require__(8);
        var createSuper = __webpack_require__(6);
        var react = __webpack_require__(1);
        var taro_components = __webpack_require__(2);
        var index = __webpack_require__(15);
        var index_Index = function(_Component) {
            Object(inherits["a"])(Index, _Component);
            var _super = Object(createSuper["a"])(Index);
            function Index() {
                Object(classCallCheck["a"])(this, Index);
                return _super.apply(this, arguments);
            }
            Object(createClass["a"])(Index, [ {
                key: "componentWillMount",
                value: function() {
                    var _componentWillMount = _asyncToGenerator(_regeneratorRuntime().mark((function _callee() {
                        return _regeneratorRuntime().wrap((function _callee$(_context) {
                            while (1) switch (_context.prev = _context.next) {
                              case 0:
                                _context.next = 2;
                                return Promise.resolve(1);

                              case 2:
                              case "end":
                                return _context.stop();
                            }
                        }), _callee);
                    })));
                    function componentWillMount() {
                        return _componentWillMount.apply(this, arguments);
                    }
                    return componentWillMount;
                }()
            }, {
                key: "componentDidMount",
                value: function componentDidMount() {}
            }, {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {}
            }, {
                key: "componentDidShow",
                value: function componentDidShow() {}
            }, {
                key: "componentDidHide",
                value: function componentDidHide() {}
            }, {
                key: "render",
                value: function render() {
                    return react["default"].createElement(taro_components["View"], {
                        className: "index"
                    }, react["default"].createElement(taro_components["Text"], null, "Hello world!"), react["default"].createElement(taro_components["Input"], {
                        placeholder: "input",
                        value: ""
                    }), react["default"].createElement(taro_components["Textarea"], {
                        value: ""
                    }), react["default"].createElement(taro_components["Swiper"], null, react["default"].createElement(taro_components["SwiperItem"], null, react["default"].createElement(taro_components["Text"], null, "Swiper item"))), react["default"].createElement(taro_components["Video"], null), react["default"].createElement(taro_components["Canvas"], null, react["default"].createElement(taro_components["CoverView"], null, react["default"].createElement(taro_components["CoverImage"], null))));
                }
            } ]);
            return Index;
        }(react["Component"]);
        var config = {
            navigationBarTitleText: "\\u9996\\u9875"
        };
        var inst = Page(Object(taro_runtime["createPageConfig"])(index_Index, "pages/index/index", {
            root: {
                cn: []
            }
        }, config || {}));
        var pages_index = __webpack_exports__["default"] = index_Index;
    }
}, [ [ 16, 0, 1, 3, 2 ] ] ]);

/** filePath: dist/pages/index/index.js.LICENSE.txt **/
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */


/** filePath: dist/pages/index/index.json **/
{"navigationBarTitleText":"首页","usingComponents":{}}

/** filePath: dist/runtime.js **/


/** filePath: dist/taro.js **/
(my["webpackJsonp"] = my["webpackJsonp"] || []).push([ [ 1 ], {
    2: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var _unused_webpack_default_export = "taro-components-mock";
    },
    4: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        __webpack_exports__["default"] = "taro-runtime-mock";
    },
    9: function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_exports__["a"] = "taro-react-mock";
    }
} ]);

/** filePath: dist/utils.sjs **/
export default {
  a: function (l, n) {
    return 'tmpl_' + l + '_' + n
  },
  b: function (a, b) {
    return a === undefined ? b : a
  },
  c: function(i, prefix) {
    var s = i.focus !== undefined ? 'focus' : 'blur'
    return prefix + i.nn + '_' + s
  },
  e: function (n) {
    return 'tmpl_' + n + '_container'
  },
  f: function (l) {
    return l.filter(function (i) {return i.nn === '41'})
  }
}

/** filePath: dist/vendors.js **/
(my["webpackJsonp"] = my["webpackJsonp"] || []).push([ [ 3 ], [ , , , function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    __webpack_require__.d(__webpack_exports__, "a", (function() {
        return _typeof;
    }));
    function _typeof(obj) {
        "@babel/helpers - typeof";
        return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
            return typeof obj;
        } : function(obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        }, _typeof(obj);
    }
}, , function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    __webpack_require__.d(__webpack_exports__, "a", (function() {
        return _classCallCheck;
    }));
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    __webpack_require__.d(__webpack_exports__, "a", (function() {
        return _createSuper;
    }));
    function _getPrototypeOf(o) {
        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
        };
        return _getPrototypeOf(o);
    }
    function _isNativeReflectConstruct() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    var esm_typeof = __webpack_require__(3);
    function _assertThisInitialized(self) {
        if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return self;
    }
    function _possibleConstructorReturn(self, call) {
        if (call && (Object(esm_typeof["a"])(call) === "object" || typeof call === "function")) {
            return call;
        } else if (call !== void 0) {
            throw new TypeError("Derived constructors may only return object or undefined");
        }
        return _assertThisInitialized(self);
    }
    function _createSuper(Derived) {
        var hasNativeReflectConstruct = _isNativeReflectConstruct();
        return function _createSuperInternal() {
            var Super = _getPrototypeOf(Derived), result;
            if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
            } else {
                result = Super.apply(this, arguments);
            }
            return _possibleConstructorReturn(this, result);
        };
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    __webpack_require__.d(__webpack_exports__, "a", (function() {
        return _createClass;
    }));
    var esm_typeof = __webpack_require__(3);
    function _toPrimitive(input, hint) {
        if (Object(esm_typeof["a"])(input) !== "object" || input === null) return input;
        var prim = input[Symbol.toPrimitive];
        if (prim !== undefined) {
            var res = prim.call(input, hint || "default");
            if (Object(esm_typeof["a"])(res) !== "object") return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (hint === "string" ? String : Number)(input);
    }
    function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, "string");
        return Object(esm_typeof["a"])(key) === "symbol" ? key : String(key);
    }
    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
        }
    }
    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        Object.defineProperty(Constructor, "prototype", {
            writable: false
        });
        return Constructor;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    __webpack_require__.d(__webpack_exports__, "a", (function() {
        return _inherits;
    }));
    function _setPrototypeOf(o, p) {
        _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };
        return _setPrototypeOf(o, p);
    }
    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true
            }
        });
        Object.defineProperty(subClass, "prototype", {
            writable: false
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
    }
} ] ]);
"
`;
