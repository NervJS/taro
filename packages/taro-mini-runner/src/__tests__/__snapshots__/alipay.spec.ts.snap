// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`alipay should build alipay app 1`] = `16`;

exports[`alipay should build alipay app 2`] = `
"
/** filePath: dist/app.acss **/


/** filePath: dist/app.js **/
require(\\"./runtime\\");

require(\\"./common\\");

require(\\"./vendors\\");

require(\\"./taro\\");

(my[\\"webpackJsonp\\"] = my[\\"webpackJsonp\\"] || []).push([ [ 4 ], [ , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return EMPTY_OBJ;
    }));
    __webpack_require__.d(__webpack_exports__, \\"b\\", (function() {
        return isArray;
    }));
    __webpack_require__.d(__webpack_exports__, \\"c\\", (function() {
        return isFunction;
    }));
    __webpack_require__.d(__webpack_exports__, \\"d\\", (function() {
        return mergeInternalComponents;
    }));
    __webpack_require__.d(__webpack_exports__, \\"e\\", (function() {
        return mergeReconciler;
    }));
    __webpack_require__.d(__webpack_exports__, \\"f\\", (function() {
        return processApis;
    }));
    __webpack_require__.d(__webpack_exports__, \\"g\\", (function() {
        return singleQuote;
    }));
    var toConsumableArray = __webpack_require__(8);
    function _typeof(obj) {
        \\"@babel/helpers - typeof\\";
        if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
            _typeof = function _typeof(obj) {
                return typeof obj;
            };
        } else {
            _typeof = function _typeof(obj) {
                return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
            };
        }
        return _typeof(obj);
    }
    function isString(o) {
        return typeof o === \\"string\\";
    }
    function isUndefined(o) {
        return typeof o === \\"undefined\\";
    }
    function isNull(o) {
        return o === null;
    }
    function isObject(o) {
        return o !== null && _typeof(o) === \\"object\\";
    }
    function isBoolean(o) {
        return o === true || o === false;
    }
    function isFunction(o) {
        return typeof o === \\"function\\";
    }
    function isNumber(o) {
        return typeof o === \\"number\\";
    }
    function isBooleanStringLiteral(o) {
        return o === \\"true\\" || o === \\"false\\";
    }
    var isArray = Array.isArray;
    var DEFAULT_EMPTY_ARRAY = \\"[]\\";
    var NO_DEFAULT_VALUE = \\"\\";
    var DEFAULT_TRUE = \\"true\\";
    var DEFAULT_FALSE = \\"false\\";
    var touchEvents = {
        bindTouchStart: NO_DEFAULT_VALUE,
        bindTouchMove: NO_DEFAULT_VALUE,
        bindTouchEnd: NO_DEFAULT_VALUE,
        bindTouchCancel: NO_DEFAULT_VALUE,
        bindLongTap: NO_DEFAULT_VALUE
    };
    var animation = {
        animation: NO_DEFAULT_VALUE,
        bindAnimationStart: NO_DEFAULT_VALUE,
        bindAnimationIteration: NO_DEFAULT_VALUE,
        bindAnimationEnd: NO_DEFAULT_VALUE,
        bindTransitionEnd: NO_DEFAULT_VALUE
    };
    function singleQuote(s) {
        return \\"'\\".concat(s, \\"'\\");
    }
    var View = Object.assign(Object.assign({
        \\"hover-class\\": singleQuote(\\"none\\"),
        \\"hover-stop-propagation\\": DEFAULT_FALSE,
        \\"hover-start-time\\": \\"50\\",
        \\"hover-stay-time\\": \\"400\\"
    }, touchEvents), animation);
    var Icon = {
        type: NO_DEFAULT_VALUE,
        size: \\"23\\",
        color: NO_DEFAULT_VALUE
    };
    var MapComp = Object.assign({
        longitude: NO_DEFAULT_VALUE,
        latitude: NO_DEFAULT_VALUE,
        scale: \\"16\\",
        markers: DEFAULT_EMPTY_ARRAY,
        covers: NO_DEFAULT_VALUE,
        polyline: DEFAULT_EMPTY_ARRAY,
        circles: DEFAULT_EMPTY_ARRAY,
        controls: DEFAULT_EMPTY_ARRAY,
        \\"include-points\\": DEFAULT_EMPTY_ARRAY,
        \\"show-location\\": NO_DEFAULT_VALUE,
        \\"layer-style\\": \\"1\\",
        bindMarkerTap: NO_DEFAULT_VALUE,
        bindControlTap: NO_DEFAULT_VALUE,
        bindCalloutTap: NO_DEFAULT_VALUE,
        bindUpdated: NO_DEFAULT_VALUE
    }, touchEvents);
    var Progress = {
        percent: NO_DEFAULT_VALUE,
        \\"stroke-width\\": \\"6\\",
        color: singleQuote(\\"#09BB07\\"),
        activeColor: singleQuote(\\"#09BB07\\"),
        backgroundColor: singleQuote(\\"#EBEBEB\\"),
        active: DEFAULT_FALSE,
        \\"active-mode\\": singleQuote(\\"backwards\\"),
        \\"show-info\\": DEFAULT_FALSE
    };
    var RichText = {
        nodes: DEFAULT_EMPTY_ARRAY
    };
    var Text = {
        selectable: DEFAULT_FALSE,
        space: NO_DEFAULT_VALUE,
        decode: DEFAULT_FALSE
    };
    var Button = Object.assign({
        size: singleQuote(\\"default\\"),
        type: NO_DEFAULT_VALUE,
        plain: DEFAULT_FALSE,
        disabled: NO_DEFAULT_VALUE,
        loading: DEFAULT_FALSE,
        \\"form-type\\": NO_DEFAULT_VALUE,
        \\"open-type\\": NO_DEFAULT_VALUE,
        \\"hover-class\\": singleQuote(\\"button-hover\\"),
        \\"hover-stop-propagation\\": DEFAULT_FALSE,
        \\"hover-start-time\\": \\"20\\",
        \\"hover-stay-time\\": \\"70\\",
        name: NO_DEFAULT_VALUE
    }, touchEvents);
    var Checkbox = {
        value: NO_DEFAULT_VALUE,
        disabled: NO_DEFAULT_VALUE,
        checked: DEFAULT_FALSE,
        color: singleQuote(\\"#09BB07\\"),
        name: NO_DEFAULT_VALUE
    };
    var CheckboxGroup = {
        bindChange: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Form = {
        \\"report-submit\\": DEFAULT_FALSE,
        bindSubmit: NO_DEFAULT_VALUE,
        bindReset: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Input = {
        value: NO_DEFAULT_VALUE,
        type: singleQuote(NO_DEFAULT_VALUE),
        password: DEFAULT_FALSE,
        placeholder: NO_DEFAULT_VALUE,
        \\"placeholder-style\\": NO_DEFAULT_VALUE,
        \\"placeholder-class\\": singleQuote(\\"input-placeholder\\"),
        disabled: NO_DEFAULT_VALUE,
        maxlength: \\"140\\",
        \\"cursor-spacing\\": \\"0\\",
        focus: DEFAULT_FALSE,
        \\"confirm-type\\": singleQuote(\\"done\\"),
        \\"confirm-hold\\": DEFAULT_FALSE,
        cursor: \\"i.value.length\\",
        \\"selection-start\\": \\"-1\\",
        \\"selection-end\\": \\"-1\\",
        bindInput: NO_DEFAULT_VALUE,
        bindFocus: NO_DEFAULT_VALUE,
        bindBlur: NO_DEFAULT_VALUE,
        bindConfirm: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Label = {
        for: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Picker = {
        mode: singleQuote(\\"selector\\"),
        disabled: NO_DEFAULT_VALUE,
        range: NO_DEFAULT_VALUE,
        \\"range-key\\": NO_DEFAULT_VALUE,
        value: NO_DEFAULT_VALUE,
        start: NO_DEFAULT_VALUE,
        end: NO_DEFAULT_VALUE,
        fields: singleQuote(\\"day\\"),
        \\"custom-item\\": NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE,
        bindCancel: NO_DEFAULT_VALUE,
        bindChange: NO_DEFAULT_VALUE,
        bindColumnChange: NO_DEFAULT_VALUE
    };
    var PickerView = {
        value: NO_DEFAULT_VALUE,
        \\"indicator-style\\": NO_DEFAULT_VALUE,
        \\"indicator-class\\": NO_DEFAULT_VALUE,
        \\"mask-style\\": NO_DEFAULT_VALUE,
        \\"mask-class\\": NO_DEFAULT_VALUE,
        bindChange: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var PickerViewColumn = {
        name: NO_DEFAULT_VALUE
    };
    var Radio = {
        value: NO_DEFAULT_VALUE,
        checked: DEFAULT_FALSE,
        disabled: NO_DEFAULT_VALUE,
        color: singleQuote(\\"#09BB07\\"),
        name: NO_DEFAULT_VALUE
    };
    var RadioGroup = {
        bindChange: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Slider = {
        min: \\"0\\",
        max: \\"100\\",
        step: \\"1\\",
        disabled: NO_DEFAULT_VALUE,
        value: \\"0\\",
        activeColor: singleQuote(\\"#1aad19\\"),
        backgroundColor: singleQuote(\\"#e9e9e9\\"),
        \\"block-size\\": \\"28\\",
        \\"block-color\\": singleQuote(\\"#ffffff\\"),
        \\"show-value\\": DEFAULT_FALSE,
        bindChange: NO_DEFAULT_VALUE,
        bindChanging: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Switch = {
        checked: DEFAULT_FALSE,
        disabled: NO_DEFAULT_VALUE,
        type: singleQuote(\\"switch\\"),
        color: singleQuote(\\"#04BE02\\"),
        bindChange: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var Textarea = {
        value: NO_DEFAULT_VALUE,
        placeholder: NO_DEFAULT_VALUE,
        \\"placeholder-style\\": NO_DEFAULT_VALUE,
        \\"placeholder-class\\": singleQuote(\\"textarea-placeholder\\"),
        disabled: NO_DEFAULT_VALUE,
        maxlength: \\"140\\",
        \\"auto-focus\\": DEFAULT_FALSE,
        focus: DEFAULT_FALSE,
        \\"auto-height\\": DEFAULT_FALSE,
        fixed: DEFAULT_FALSE,
        \\"cursor-spacing\\": \\"0\\",
        cursor: \\"-1\\",
        \\"selection-start\\": \\"-1\\",
        \\"selection-end\\": \\"-1\\",
        bindFocus: NO_DEFAULT_VALUE,
        bindBlur: NO_DEFAULT_VALUE,
        bindLineChange: NO_DEFAULT_VALUE,
        bindInput: NO_DEFAULT_VALUE,
        bindConfirm: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE
    };
    var CoverImage = {
        src: NO_DEFAULT_VALUE,
        bindLoad: \\"eh\\",
        bindError: \\"eh\\"
    };
    var CoverView = Object.assign({
        \\"scroll-top\\": DEFAULT_FALSE
    }, touchEvents);
    var MovableArea = {
        \\"scale-area\\": DEFAULT_FALSE
    };
    var MovableView = Object.assign(Object.assign({
        direction: \\"none\\",
        inertia: DEFAULT_FALSE,
        \\"out-of-bounds\\": DEFAULT_FALSE,
        x: NO_DEFAULT_VALUE,
        y: NO_DEFAULT_VALUE,
        damping: \\"20\\",
        friction: \\"2\\",
        disabled: NO_DEFAULT_VALUE,
        scale: DEFAULT_FALSE,
        \\"scale-min\\": \\"0.5\\",
        \\"scale-max\\": \\"10\\",
        \\"scale-value\\": \\"1\\",
        bindChange: NO_DEFAULT_VALUE,
        bindScale: NO_DEFAULT_VALUE,
        bindHTouchMove: NO_DEFAULT_VALUE,
        bindVTouchMove: NO_DEFAULT_VALUE,
        width: singleQuote(\\"10px\\"),
        height: singleQuote(\\"10px\\")
    }, touchEvents), animation);
    var ScrollView = Object.assign(Object.assign({
        \\"scroll-x\\": DEFAULT_FALSE,
        \\"scroll-y\\": DEFAULT_FALSE,
        \\"upper-threshold\\": \\"50\\",
        \\"lower-threshold\\": \\"50\\",
        \\"scroll-top\\": NO_DEFAULT_VALUE,
        \\"scroll-left\\": NO_DEFAULT_VALUE,
        \\"scroll-into-view\\": NO_DEFAULT_VALUE,
        \\"scroll-with-animation\\": DEFAULT_FALSE,
        \\"enable-back-to-top\\": DEFAULT_FALSE,
        bindScrollToUpper: NO_DEFAULT_VALUE,
        bindScrollToLower: NO_DEFAULT_VALUE,
        bindScroll: NO_DEFAULT_VALUE
    }, touchEvents), animation);
    var Swiper = Object.assign({
        \\"indicator-dots\\": DEFAULT_FALSE,
        \\"indicator-color\\": singleQuote(\\"rgba(0, 0, 0, .3)\\"),
        \\"indicator-active-color\\": singleQuote(\\"#000000\\"),
        autoplay: DEFAULT_FALSE,
        current: \\"0\\",
        interval: \\"5000\\",
        duration: \\"500\\",
        circular: DEFAULT_FALSE,
        vertical: DEFAULT_FALSE,
        \\"previous-margin\\": singleQuote(\\"0px\\"),
        \\"next-margin\\": singleQuote(\\"0px\\"),
        \\"display-multiple-items\\": \\"1\\",
        bindChange: NO_DEFAULT_VALUE,
        bindTransition: NO_DEFAULT_VALUE,
        bindAnimationFinish: NO_DEFAULT_VALUE
    }, touchEvents);
    var SwiperItem = {
        \\"item-id\\": NO_DEFAULT_VALUE
    };
    var Navigator = {
        url: NO_DEFAULT_VALUE,
        \\"open-type\\": singleQuote(\\"navigate\\"),
        delta: \\"1\\",
        \\"hover-class\\": singleQuote(\\"navigator-hover\\"),
        \\"hover-stop-propagation\\": DEFAULT_FALSE,
        \\"hover-start-time\\": \\"50\\",
        \\"hover-stay-time\\": \\"600\\",
        bindSuccess: NO_DEFAULT_VALUE,
        bindFail: NO_DEFAULT_VALUE,
        bindComplete: NO_DEFAULT_VALUE
    };
    var Audio = {
        id: NO_DEFAULT_VALUE,
        src: NO_DEFAULT_VALUE,
        loop: DEFAULT_FALSE,
        controls: DEFAULT_FALSE,
        poster: NO_DEFAULT_VALUE,
        name: NO_DEFAULT_VALUE,
        author: NO_DEFAULT_VALUE,
        bindError: NO_DEFAULT_VALUE,
        bindPlay: NO_DEFAULT_VALUE,
        bindPause: NO_DEFAULT_VALUE,
        bindTimeUpdate: NO_DEFAULT_VALUE,
        bindEnded: NO_DEFAULT_VALUE
    };
    var Camera = {
        \\"device-position\\": singleQuote(\\"back\\"),
        flash: singleQuote(\\"auto\\"),
        bindStop: NO_DEFAULT_VALUE,
        bindError: NO_DEFAULT_VALUE
    };
    var Image = Object.assign({
        src: NO_DEFAULT_VALUE,
        mode: singleQuote(\\"scaleToFill\\"),
        \\"lazy-load\\": DEFAULT_FALSE,
        bindError: NO_DEFAULT_VALUE,
        bindLoad: NO_DEFAULT_VALUE
    }, touchEvents);
    var LivePlayer = Object.assign({
        src: NO_DEFAULT_VALUE,
        autoplay: DEFAULT_FALSE,
        muted: DEFAULT_FALSE,
        orientation: singleQuote(\\"vertical\\"),
        \\"object-fit\\": singleQuote(\\"contain\\"),
        \\"background-mute\\": DEFAULT_FALSE,
        \\"min-cache\\": \\"1\\",
        \\"max-cache\\": \\"3\\",
        bindStateChange: NO_DEFAULT_VALUE,
        bindFullScreenChange: NO_DEFAULT_VALUE,
        bindNetStatus: NO_DEFAULT_VALUE
    }, animation);
    var Video = Object.assign({
        src: NO_DEFAULT_VALUE,
        duration: NO_DEFAULT_VALUE,
        controls: DEFAULT_TRUE,
        \\"danmu-list\\": NO_DEFAULT_VALUE,
        \\"danmu-btn\\": NO_DEFAULT_VALUE,
        \\"enable-danmu\\": NO_DEFAULT_VALUE,
        autoplay: DEFAULT_FALSE,
        loop: DEFAULT_FALSE,
        muted: DEFAULT_FALSE,
        \\"initial-time\\": \\"0\\",
        \\"page-gesture\\": DEFAULT_FALSE,
        direction: NO_DEFAULT_VALUE,
        \\"show-progress\\": DEFAULT_TRUE,
        \\"show-fullscreen-btn\\": DEFAULT_TRUE,
        \\"show-play-btn\\": DEFAULT_TRUE,
        \\"show-center-play-btn\\": DEFAULT_TRUE,
        \\"enable-progress-gesture\\": DEFAULT_TRUE,
        \\"object-fit\\": singleQuote(\\"contain\\"),
        poster: NO_DEFAULT_VALUE,
        \\"show-mute-btn\\": DEFAULT_FALSE,
        bindPlay: NO_DEFAULT_VALUE,
        bindPause: NO_DEFAULT_VALUE,
        bindEnded: NO_DEFAULT_VALUE,
        bindTimeUpdate: NO_DEFAULT_VALUE,
        bindFullScreenChange: NO_DEFAULT_VALUE,
        bindWaiting: NO_DEFAULT_VALUE,
        bindError: NO_DEFAULT_VALUE
    }, animation);
    var Canvas = Object.assign({
        \\"canvas-id\\": NO_DEFAULT_VALUE,
        \\"disable-scroll\\": DEFAULT_FALSE,
        bindError: NO_DEFAULT_VALUE
    }, touchEvents);
    var Ad = {
        \\"unit-id\\": NO_DEFAULT_VALUE,
        \\"ad-intervals\\": NO_DEFAULT_VALUE,
        bindLoad: NO_DEFAULT_VALUE,
        bindError: NO_DEFAULT_VALUE,
        bindClose: NO_DEFAULT_VALUE
    };
    var WebView = {
        src: NO_DEFAULT_VALUE,
        bindMessage: NO_DEFAULT_VALUE,
        bindLoad: NO_DEFAULT_VALUE,
        bindError: NO_DEFAULT_VALUE
    };
    var Block = {};
    var SlotView = {
        name: NO_DEFAULT_VALUE
    };
    var Slot = {
        name: NO_DEFAULT_VALUE
    };
    var internalComponents = {
        View: View,
        Icon: Icon,
        Progress: Progress,
        RichText: RichText,
        Text: Text,
        Button: Button,
        Checkbox: Checkbox,
        CheckboxGroup: CheckboxGroup,
        Form: Form,
        Input: Input,
        Label: Label,
        Picker: Picker,
        PickerView: PickerView,
        PickerViewColumn: PickerViewColumn,
        Radio: Radio,
        RadioGroup: RadioGroup,
        Slider: Slider,
        Switch: Switch,
        CoverImage: CoverImage,
        Textarea: Textarea,
        CoverView: CoverView,
        MovableArea: MovableArea,
        MovableView: MovableView,
        ScrollView: ScrollView,
        Swiper: Swiper,
        SwiperItem: SwiperItem,
        Navigator: Navigator,
        Audio: Audio,
        Camera: Camera,
        Image: Image,
        LivePlayer: LivePlayer,
        Video: Video,
        Canvas: Canvas,
        Ad: Ad,
        WebView: WebView,
        Block: Block,
        Map: MapComp,
        Slot: Slot,
        SlotView: SlotView
    };
    var controlledComponent = new Set([ \\"input\\", \\"checkbox\\", \\"picker\\", \\"picker-view\\", \\"radio\\", \\"slider\\", \\"switch\\", \\"textarea\\" ]);
    var focusComponents = new Set([ \\"input\\", \\"textarea\\" ]);
    var voidElements = new Set([ \\"progress\\", \\"icon\\", \\"rich-text\\", \\"input\\", \\"textarea\\", \\"slider\\", \\"switch\\", \\"audio\\", \\"ad\\", \\"official-account\\", \\"open-data\\", \\"navigation-bar\\" ]);
    var nestElements = new Map([ [ \\"view\\", -1 ], [ \\"catch-view\\", -1 ], [ \\"cover-view\\", -1 ], [ \\"static-view\\", -1 ], [ \\"pure-view\\", -1 ], [ \\"block\\", -1 ], [ \\"text\\", -1 ], [ \\"static-text\\", 6 ], [ \\"slot\\", 8 ], [ \\"slot-view\\", 8 ], [ \\"label\\", 6 ], [ \\"form\\", 4 ], [ \\"scroll-view\\", 4 ], [ \\"swiper\\", 4 ], [ \\"swiper-item\\", 4 ] ]);
    var EMPTY_OBJ = {};
    var EMPTY_ARR = [];
    var noop = function noop() {};
    var defaultReconciler = Object.create(null);
    var box = function box(v) {
        return {
            v: v
        };
    };
    var unbox = function unbox(b) {
        return b.v;
    };
    function toDashed(s) {
        return s.replace(/([a-z0-9])([A-Z])/g, \\"$1-$2\\").toLowerCase();
    }
    function toCamelCase(s) {
        var camel = \\"\\";
        var nextCap = false;
        for (var i = 0; i < s.length; i++) {
            if (s[i] !== \\"-\\") {
                camel += nextCap ? s[i].toUpperCase() : s[i];
                nextCap = false;
            } else {
                nextCap = true;
            }
        }
        return camel;
    }
    var toKebabCase = function toKebabCase(string) {
        return string.replace(/([a-z])([A-Z])/g, \\"$1-$2\\").toLowerCase();
    };
    function capitalize(s) {
        return s.charAt(0).toUpperCase() + s.slice(1);
    }
    var shared_esm_hasOwnProperty = Object.prototype.hasOwnProperty;
    var hasOwn = function hasOwn(val, key) {
        return shared_esm_hasOwnProperty.call(val, key);
    };
    function ensure(condition, msg) {
        if (!condition) {
            if (false) {
                var reportIssue;
            } else {
                throw new Error(msg);
            }
        }
    }
    function warn(condition, msg) {
        if (false) {}
    }
    function queryToJson(str) {
        var dec = decodeURIComponent;
        var qp = str.split(\\"&\\");
        var ret = {};
        var name;
        var val;
        for (var i = 0, l = qp.length, item; i < l; ++i) {
            item = qp[i];
            if (item.length) {
                var s = item.indexOf(\\"=\\");
                if (s < 0) {
                    name = dec(item);
                    val = \\"\\";
                } else {
                    name = dec(item.slice(0, s));
                    val = dec(item.slice(s + 1));
                }
                if (typeof ret[name] === \\"string\\") {
                    ret[name] = [ ret[name] ];
                }
                if (Array.isArray(ret[name])) {
                    ret[name].push(val);
                } else {
                    ret[name] = val;
                }
            }
        }
        return ret;
    }
    var _uniqueId = 1;
    var _loadTime = (new Date).getTime().toString();
    function getUniqueKey() {
        return _loadTime + _uniqueId++;
    }
    var cacheData = {};
    function cacheDataSet(key, val) {
        cacheData[key] = val;
    }
    function cacheDataGet(key, delelteAfterGet) {
        var temp = cacheData[key];
        delelteAfterGet && delete cacheData[key];
        return temp;
    }
    function cacheDataHas(key) {
        return key in cacheData;
    }
    function mergeInternalComponents(components) {
        Object.keys(components).forEach((function(name) {
            if (name in internalComponents) {
                Object.assign(internalComponents[name], components[name]);
            } else {
                internalComponents[name] = components[name];
            }
        }));
    }
    function mergeReconciler(hostConfig) {
        Object.keys(hostConfig).forEach((function(key) {
            var value = hostConfig[key];
            var raw = defaultReconciler[key];
            defaultReconciler[key] = !raw ? value : isArray(raw) ? raw.concat(value) : [ raw, value ];
        }));
    }
    function unsupport(api) {
        return function() {
            console.warn(\\"\\\\u5c0f\\\\u7a0b\\\\u5e8f\\\\u6682\\\\u4e0d\\\\u652f\\\\u6301 \\".concat(api));
        };
    }
    function setUniqueKeyToRoute(key, obj) {
        var routerParamsPrivateKey = \\"__key_\\";
        var useDataCacheApis = [ \\"navigateTo\\", \\"redirectTo\\", \\"reLaunch\\", \\"switchTab\\" ];
        if (useDataCacheApis.indexOf(key) > -1) {
            var url = obj.url = obj.url || \\"\\";
            var hasMark = url.indexOf(\\"?\\") > -1;
            var cacheKey = getUniqueKey();
            obj.url += (hasMark ? \\"&\\" : \\"?\\") + \\"\\".concat(routerParamsPrivateKey, \\"=\\").concat(cacheKey);
        }
    }
    function indent(str, size) {
        return str.split(\\"\\\\n\\").map((function(line, index) {
            var indent = index === 0 ? \\"\\" : Array(size).fill(\\" \\").join(\\"\\");
            return indent + line;
        })).join(\\"\\\\n\\");
    }
    var needPromiseApis = new Set([ \\"addPhoneContact\\", \\"authorize\\", \\"canvasGetImageData\\", \\"canvasPutImageData\\", \\"canvasToTempFilePath\\", \\"checkSession\\", \\"chooseAddress\\", \\"chooseImage\\", \\"chooseInvoiceTitle\\", \\"chooseLocation\\", \\"chooseVideo\\", \\"clearStorage\\", \\"closeBLEConnection\\", \\"closeBluetoothAdapter\\", \\"closeSocket\\", \\"compressImage\\", \\"connectSocket\\", \\"createBLEConnection\\", \\"downloadFile\\", \\"exitMiniProgram\\", \\"getAvailableAudioSources\\", \\"getBLEDeviceCharacteristics\\", \\"getBLEDeviceServices\\", \\"getBatteryInfo\\", \\"getBeacons\\", \\"getBluetoothAdapterState\\", \\"getBluetoothDevices\\", \\"getClipboardData\\", \\"getConnectedBluetoothDevices\\", \\"getConnectedWifi\\", \\"getExtConfig\\", \\"getFileInfo\\", \\"getImageInfo\\", \\"getLocation\\", \\"getNetworkType\\", \\"getSavedFileInfo\\", \\"getSavedFileList\\", \\"getScreenBrightness\\", \\"getSetting\\", \\"getStorage\\", \\"getStorageInfo\\", \\"getSystemInfo\\", \\"getUserInfo\\", \\"getWifiList\\", \\"hideHomeButton\\", \\"hideShareMenu\\", \\"hideTabBar\\", \\"hideTabBarRedDot\\", \\"loadFontFace\\", \\"login\\", \\"makePhoneCall\\", \\"navigateBack\\", \\"navigateBackMiniProgram\\", \\"navigateTo\\", \\"navigateToBookshelf\\", \\"navigateToMiniProgram\\", \\"notifyBLECharacteristicValueChange\\", \\"hideKeyboard\\", \\"hideLoading\\", \\"hideNavigationBarLoading\\", \\"hideToast\\", \\"openBluetoothAdapter\\", \\"openDocument\\", \\"openLocation\\", \\"openSetting\\", \\"pageScrollTo\\", \\"previewImage\\", \\"queryBookshelf\\", \\"reLaunch\\", \\"readBLECharacteristicValue\\", \\"redirectTo\\", \\"removeSavedFile\\", \\"removeStorage\\", \\"removeTabBarBadge\\", \\"requestSubscribeMessage\\", \\"saveFile\\", \\"saveImageToPhotosAlbum\\", \\"saveVideoToPhotosAlbum\\", \\"scanCode\\", \\"sendSocketMessage\\", \\"setBackgroundColor\\", \\"setBackgroundTextStyle\\", \\"setClipboardData\\", \\"setEnableDebug\\", \\"setInnerAudioOption\\", \\"setKeepScreenOn\\", \\"setNavigationBarColor\\", \\"setNavigationBarTitle\\", \\"setScreenBrightness\\", \\"setStorage\\", \\"setTabBarBadge\\", \\"setTabBarItem\\", \\"setTabBarStyle\\", \\"showActionSheet\\", \\"showFavoriteGuide\\", \\"showLoading\\", \\"showModal\\", \\"showShareMenu\\", \\"showTabBar\\", \\"showTabBarRedDot\\", \\"showToast\\", \\"startBeaconDiscovery\\", \\"startBluetoothDevicesDiscovery\\", \\"startDeviceMotionListening\\", \\"startPullDownRefresh\\", \\"stopBeaconDiscovery\\", \\"stopBluetoothDevicesDiscovery\\", \\"stopCompass\\", \\"startCompass\\", \\"startAccelerometer\\", \\"stopAccelerometer\\", \\"showNavigationBarLoading\\", \\"stopDeviceMotionListening\\", \\"stopPullDownRefresh\\", \\"switchTab\\", \\"uploadFile\\", \\"vibrateLong\\", \\"vibrateShort\\", \\"writeBLECharacteristicValue\\" ]);
    function getCanIUseWebp(taro) {
        return function() {
            var _a;
            var res = (_a = taro.getSystemInfoSync) === null || _a === void 0 ? void 0 : _a.call(taro);
            if (!res) {
                if (false) {}
                return false;
            }
            var platform = res.platform;
            var platformLower = platform.toLowerCase();
            if (platformLower === \\"android\\" || platformLower === \\"devtools\\") {
                return true;
            }
            return false;
        };
    }
    function getNormalRequest(global) {
        return function request(options) {
            options = options ? isString(options) ? {
                url: options
            } : options : {};
            var originSuccess = options.success;
            var originFail = options.fail;
            var originComplete = options.complete;
            var requestTask;
            var p = new Promise((function(resolve, reject) {
                options.success = function(res) {
                    originSuccess && originSuccess(res);
                    resolve(res);
                };
                options.fail = function(res) {
                    originFail && originFail(res);
                    reject(res);
                };
                options.complete = function(res) {
                    originComplete && originComplete(res);
                };
                requestTask = global.request(options);
            }));
            p.abort = function(cb) {
                cb && cb();
                if (requestTask) {
                    requestTask.abort();
                }
                return p;
            };
            return p;
        };
    }
    function processApis(taro, global) {
        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var patchNeedPromiseApis = config.needPromiseApis || [];
        var _needPromiseApis = new Set([].concat(Object(toConsumableArray[\\"a\\"])(patchNeedPromiseApis), Object(toConsumableArray[\\"a\\"])(needPromiseApis)));
        var preserved = [ \\"getEnv\\", \\"interceptors\\", \\"Current\\", \\"getCurrentInstance\\", \\"options\\", \\"nextTick\\", \\"eventCenter\\", \\"Events\\", \\"preload\\", \\"webpackJsonp\\" ];
        var apis = new Set(!config.isOnlyPromisify ? Object.keys(global).filter((function(api) {
            return preserved.indexOf(api) === -1;
        })) : patchNeedPromiseApis);
        if (config.modifyApis) {
            config.modifyApis(apis);
        }
        apis.forEach((function(key) {
            if (_needPromiseApis.has(key)) {
                var originKey = key;
                taro[originKey] = function() {
                    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                        args[_key - 1] = arguments[_key];
                    }
                    var key = originKey;
                    if (typeof options === \\"string\\") {
                        if (args.length) {
                            return global[key].apply(global, [ options ].concat(args));
                        }
                        return global[key](options);
                    }
                    if (config.transformMeta) {
                        var transformResult = config.transformMeta(key, options);
                        key = transformResult.key;
                        options = transformResult.options;
                        if (!global.hasOwnProperty(key)) {
                            return unsupport(key)();
                        }
                    }
                    var task = null;
                    var obj = Object.assign({}, options);
                    setUniqueKeyToRoute(key, options);
                    var p = new Promise((function(resolve, reject) {
                        obj.success = function(res) {
                            var _a, _b;
                            (_a = config.modifyAsyncResult) === null || _a === void 0 ? void 0 : _a.call(config, key, res);
                            (_b = options.success) === null || _b === void 0 ? void 0 : _b.call(options, res);
                            if (key === \\"connectSocket\\") {
                                resolve(Promise.resolve().then((function() {
                                    return task ? Object.assign(task, res) : res;
                                })));
                            } else {
                                resolve(res);
                            }
                        };
                        obj.fail = function(res) {
                            var _a;
                            (_a = options.fail) === null || _a === void 0 ? void 0 : _a.call(options, res);
                            reject(res);
                        };
                        obj.complete = function(res) {
                            var _a;
                            (_a = options.complete) === null || _a === void 0 ? void 0 : _a.call(options, res);
                        };
                        if (args.length) {
                            task = global[key].apply(global, [ obj ].concat(args));
                        } else {
                            task = global[key](obj);
                        }
                    }));
                    if (key === \\"uploadFile\\" || key === \\"downloadFile\\") {
                        p.progress = function(cb) {
                            task === null || task === void 0 ? void 0 : task.onProgressUpdate(cb);
                            return p;
                        };
                        p.abort = function(cb) {
                            cb === null || cb === void 0 ? void 0 : cb();
                            task === null || task === void 0 ? void 0 : task.abort();
                            return p;
                        };
                    }
                    return p;
                };
            } else {
                var platformKey = key;
                if (config.transformMeta) {
                    platformKey = config.transformMeta(key, {}).key;
                }
                if (!global.hasOwnProperty(platformKey)) {
                    taro[key] = unsupport(key);
                    return;
                }
                if (isFunction(global[key])) {
                    taro[key] = function() {
                        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                            args[_key2] = arguments[_key2];
                        }
                        if (config.handleSyncApis) {
                            return config.handleSyncApis(key, global, args);
                        } else {
                            return global[platformKey].apply(global, args);
                        }
                    };
                } else {
                    taro[key] = global[platformKey];
                }
            }
        }));
        !config.isOnlyPromisify && equipCommonApis(taro, global, config);
    }
    function equipCommonApis(taro, global) {
        var apis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        taro.canIUseWebp = getCanIUseWebp(taro);
        taro.getCurrentPages = getCurrentPages || unsupport(\\"getCurrentPages\\");
        taro.getApp = getApp || unsupport(\\"getApp\\");
        taro.env = global.env || {};
        try {
            taro.requirePlugin = requirePlugin || unsupport(\\"requirePlugin\\");
        } catch (error) {
            taro.requirePlugin = unsupport(\\"requirePlugin\\");
        }
        var request = apis.request || getNormalRequest(global);
        function taroInterceptor(chain) {
            return request(chain.requestParams);
        }
        var link = new taro.Link(taroInterceptor);
        taro.request = link.request.bind(link);
        taro.addInterceptor = link.addInterceptor.bind(link);
        taro.cleanInterceptors = link.cleanInterceptors.bind(link);
        taro.miniGlobal = taro.options.miniGlobal = global;
    }
}, , , , , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _toConsumableArray;
    }));
    var arrayLikeToArray = __webpack_require__(9);
    function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) return Object(arrayLikeToArray[\\"a\\"])(arr);
    }
    function _iterableToArray(iter) {
        if (typeof Symbol !== \\"undefined\\" && iter[Symbol.iterator] != null || iter[\\"@@iterator\\"] != null) return Array.from(iter);
    }
    var unsupportedIterableToArray = __webpack_require__(10);
    function _nonIterableSpread() {
        throw new TypeError(\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\");
    }
    function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || Object(unsupportedIterableToArray[\\"a\\"])(arr) || _nonIterableSpread();
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _arrayLikeToArray;
    }));
    function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
        }
        return arr2;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _unsupportedIterableToArray;
    }));
    var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);
    function _unsupportedIterableToArray(o, minLen) {
        if (!o) return;
        if (typeof o === \\"string\\") return Object(_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\\"a\\"])(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === \\"Object\\" && o.constructor) n = o.constructor.name;
        if (n === \\"Map\\" || n === \\"Set\\") return Array.from(o);
        if (n === \\"Arguments\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\\"a\\"])(o, minLen);
    }
}, , , , , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    (function(navigator) {
        var _tarojs_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
        var needPromiseApis = new Set([ \\"addCardAuth\\", \\"getOpenUserInfo\\", \\"chooseAlipayContact\\", \\"chooseCity\\", \\"chooseContact\\", \\"choosePhoneContact\\", \\"datePicker\\", \\"getAddress\\", \\"getAuthCode\\", \\"getPhoneNumber\\", \\"getRunData\\", \\"getRunScene\\", \\"getServerTime\\", \\"getTitleColor\\", \\"rsa\\", \\"paySignCenter\\", \\"tradePay\\", \\"isCollected\\", \\"multiLevelSelect\\", \\"onLocatedComplete\\", \\"optionsSelect\\", \\"prompt\\", \\"regionPicker\\", \\"setLocatedCity\\", \\"showAuthGuide\\", \\"textRiskIdentification\\", \\"vibrate\\", \\"watchShake\\", \\"connectBLEDevice\\", \\"disconnectBLEDevice\\", \\"makeBluetoothPair\\", \\"writeBLECharacteristicValue\\", \\"readBLECharacteristicValue\\", \\"notifyBLECharacteristicValueChange\\", \\"getBLEDeviceServices\\", \\"getBLEDeviceCharacteristics\\", \\"openBluetoothAdapter\\", \\"closeBluetoothAdapter\\", \\"getBluetoothAdapterState\\", \\"startBluetoothDevicesDiscovery\\", \\"stopBluetoothDevicesDiscovery\\", \\"getBluetoothDevices\\", \\"getConnectedBluetoothDevices\\" ]);
        var apiDiff = {
            showActionSheet: {
                options: {
                    change: [ {
                        old: \\"itemList\\",
                        new: \\"items\\"
                    } ]
                }
            },
            showToast: {
                options: {
                    change: [ {
                        old: \\"title\\",
                        new: \\"content\\"
                    }, {
                        old: \\"icon\\",
                        new: \\"type\\"
                    } ]
                }
            },
            showLoading: {
                options: {
                    change: [ {
                        old: \\"title\\",
                        new: \\"content\\"
                    } ]
                }
            },
            setNavigationBarTitle: {
                alias: \\"setNavigationBar\\"
            },
            setNavigationBarColor: {
                alias: \\"setNavigationBar\\"
            },
            saveImageToPhotosAlbum: {
                alias: \\"saveImage\\",
                options: {
                    change: [ {
                        old: \\"filePath\\",
                        new: \\"url\\"
                    } ]
                }
            },
            previewImage: {
                options: {
                    set: [ {
                        key: \\"current\\",
                        value: function value(options) {
                            return options.urls.indexOf(options.current || options.urls[0]);
                        }
                    } ]
                }
            },
            getFileInfo: {
                options: {
                    change: [ {
                        old: \\"filePath\\",
                        new: \\"apFilePath\\"
                    } ]
                }
            },
            getSavedFileInfo: {
                options: {
                    change: [ {
                        old: \\"filePath\\",
                        new: \\"apFilePath\\"
                    } ]
                }
            },
            removeSavedFile: {
                options: {
                    change: [ {
                        old: \\"filePath\\",
                        new: \\"apFilePath\\"
                    } ]
                }
            },
            saveFile: {
                options: {
                    change: [ {
                        old: \\"tempFilePath\\",
                        new: \\"apFilePath\\"
                    } ]
                }
            },
            openLocation: {
                options: {
                    set: [ {
                        key: \\"latitude\\",
                        value: function value(options) {
                            return String(options.latitude);
                        }
                    }, {
                        key: \\"longitude\\",
                        value: function value(options) {
                            return String(options.longitude);
                        }
                    } ]
                }
            },
            uploadFile: {
                options: {
                    change: [ {
                        old: \\"name\\",
                        new: \\"fileName\\"
                    } ]
                }
            },
            getClipboardData: {
                alias: \\"getClipboard\\"
            },
            setClipboardData: {
                alias: \\"setClipboard\\",
                options: {
                    change: [ {
                        old: \\"data\\",
                        new: \\"text\\"
                    } ]
                }
            },
            makePhoneCall: {
                options: {
                    change: [ {
                        old: \\"phoneNumber\\",
                        new: \\"number\\"
                    } ]
                }
            },
            scanCode: {
                alias: \\"scan\\",
                options: {
                    change: [ {
                        old: \\"onlyFromCamera\\",
                        new: \\"hideAlbum\\"
                    } ],
                    set: [ {
                        key: \\"type\\",
                        value: function value(options) {
                            return options.scanType && options.scanType[0].slice(0, -4) || \\"qr\\";
                        }
                    } ]
                }
            },
            setScreenBrightness: {
                options: {
                    change: [ {
                        old: \\"value\\",
                        new: \\"brightness\\"
                    } ]
                }
            },
            onBLEConnectionStateChange: {
                alias: \\"onBLEConnectionStateChanged\\"
            },
            offBLEConnectionStateChange: {
                alias: \\"offBLEConnectionStateChanged\\"
            },
            createBLEConnection: {
                alias: \\"connectBLEDevice\\"
            },
            closeBLEConnection: {
                alias: \\"disconnectBLEDevice\\"
            }
        };
        var nativeRequest = my.canIUse(\\"request\\") ? my.request : my.httpRequest;
        function request(options) {
            options = options || {};
            if (typeof options === \\"string\\") {
                options = {
                    url: options
                };
            }
            var defaultHeaders = {
                \\"content-type\\": \\"application/json\\"
            };
            options.headers = defaultHeaders;
            if (options.header) {
                for (var k in options.header) {
                    var lowerK = k.toLocaleLowerCase();
                    options.headers[lowerK] = options.header[k];
                }
                delete options.header;
            }
            var originSuccess = options.success;
            var originFail = options.fail;
            var originComplete = options.complete;
            var requestTask;
            var p = new Promise((function(resolve, reject) {
                options.success = function(res) {
                    res.statusCode = res.status;
                    delete res.status;
                    res.header = res.headers;
                    delete res.headers;
                    originSuccess && originSuccess(res);
                    resolve(res);
                };
                options.fail = function(res) {
                    originFail && originFail(res);
                    reject(res);
                };
                options.complete = function(res) {
                    originComplete && originComplete(res);
                };
                requestTask = nativeRequest(options);
            }));
            p.abort = function(cb) {
                cb && cb();
                if (requestTask) {
                    requestTask.abort();
                }
                return p;
            };
            return p;
        }
        function handleSyncApis(key, global, args) {
            if (key === \\"getStorageSync\\") {
                var arg1 = args[0];
                if (arg1 != null) {
                    var res = global[key]({
                        key: arg1
                    });
                    var data = null;
                    if (res.hasOwnProperty(\\"data\\")) {
                        data = res.data;
                    } else if (res.hasOwnProperty(\\"APDataStorage\\")) {
                        data = res.APDataStorage;
                    }
                    return data === null ? \\"\\" : data;
                }
                return console.error(\\"getStorageSync \\\\u4f20\\\\u5165\\\\u53c2\\\\u6570\\\\u9519\\\\u8bef\\");
            }
            if (key === \\"setStorageSync\\") {
                var _arg = args[0];
                var arg2 = args[1];
                if (_arg != null) {
                    return global[key]({
                        key: _arg,
                        data: arg2
                    });
                }
                return console.error(\\"setStorageSync \\\\u4f20\\\\u5165\\\\u53c2\\\\u6570\\\\u9519\\\\u8bef\\");
            }
            if (key === \\"removeStorageSync\\") {
                var _arg2 = args[0];
                if (_arg2 != null) {
                    return global[key]({
                        key: _arg2
                    });
                }
                return console.error(\\"removeStorageSync \\\\u4f20\\\\u5165\\\\u53c2\\\\u6570\\\\u9519\\\\u8bef\\");
            }
            if (key === \\"createSelectorQuery\\") {
                var query = global[key]();
                query.in = function() {
                    return query;
                };
                return query;
            }
            return global[key].apply(global, args);
        }
        function transformMeta(api, options) {
            var apiAlias = api;
            if (api === \\"showModal\\") {
                options.cancelButtonText = options.cancelText || \\"\\\\u53d6\\\\u6d88\\";
                options.confirmButtonText = options.confirmText || \\"\\\\u786e\\\\u5b9a\\";
                apiAlias = \\"confirm\\";
                if (options.showCancel === false) {
                    options.buttonText = options.confirmText || \\"\\\\u786e\\\\u5b9a\\";
                    apiAlias = \\"alert\\";
                }
            } else {
                Object.keys(apiDiff).forEach((function(item) {
                    var apiItem = apiDiff[item];
                    if (api === item) {
                        if (apiItem.alias) {
                            apiAlias = apiItem.alias;
                        }
                        if (apiItem.options) {
                            var change = apiItem.options.change;
                            var set = apiItem.options.set;
                            if (change) {
                                change.forEach((function(changeItem) {
                                    options[changeItem.new] = options[changeItem.old];
                                }));
                            }
                            if (set) {
                                set.forEach((function(setItem) {
                                    options[setItem.key] = typeof setItem.value === \\"function\\" ? setItem.value(options) : setItem.value;
                                }));
                            }
                        }
                    }
                }));
            }
            return {
                key: apiAlias,
                options: options
            };
        }
        function modifyApis(apis) {
            Object.keys(apiDiff).map((function(key) {
                apis.add(key);
                var platformKey = apiDiff[key].alias;
                platformKey && apis.delete(platformKey);
            }));
            apis.add(\\"showModal\\");
            apis.delete(\\"confirm\\");
            apis.delete(\\"alert\\");
        }
        function modifyAsyncResult(key, res) {
            if (key === \\"saveFile\\") {
                res.savedFilePath = res.apFilePath;
            } else if (key === \\"downloadFile\\") {
                res.tempFilePath = res.apFilePath;
            } else if (key === \\"chooseImage\\") {
                res.tempFilePaths = res.apFilePaths;
            } else if (key === \\"getClipboard\\") {
                res.data = res.text;
            } else if (key === \\"scan\\") {
                res.result = res.code;
            } else if (key === \\"getScreenBrightness\\") {
                res.value = res.brightness;
                delete res.brightness;
            } else if (key === \\"connectSocket\\") {
                res.onClose = function(cb) {
                    my.onSocketClose(cb);
                };
                res.onError = function(cb) {
                    my.onSocketError(cb);
                };
                res.onMessage = function(cb) {
                    my.onSocketMessage(cb);
                };
                res.onOpen = function(cb) {
                    my.onSocketOpen(cb);
                };
                res.send = function(opt) {
                    my.sendSocketMessage(opt);
                };
                res.close = function() {
                    my.closeSocket();
                };
            }
        }
        function initNativeApi(taro) {
            Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"f\\"])(taro, my, {
                needPromiseApis: needPromiseApis,
                handleSyncApis: handleSyncApis,
                transformMeta: transformMeta,
                modifyApis: modifyApis,
                modifyAsyncResult: modifyAsyncResult,
                request: request
            });
        }
        var components = {
            View: {
                \\"disable-scroll\\": \\"false\\",
                hidden: \\"false\\",
                bindAppear: \\"\\",
                bindDisappear: \\"\\",
                bindFirstAppear: \\"\\"
            },
            Text: {
                \\"number-of-lines\\": \\"\\"
            },
            Map: {
                skew: \\"0\\",
                rotate: \\"0\\",
                polygons: \\"[]\\",
                \\"include-padding\\": \\"\\",
                \\"ground-overlays\\": \\"\\",
                \\"tile-overlay\\": \\"\\",
                \\"custom-map-style\\": \\"\\",
                setting: \\"{}\\",
                optimize: \\"\\",
                bindRegionChange: \\"\\",
                bindPanelTap: \\"\\"
            },
            Button: {
                scope: \\"\\",
                \\"public-id\\": \\"\\",
                bindGetAuthorize: \\"\\",
                bindError: \\"\\"
            },
            Checkbox: {
                bindChange: \\"\\"
            },
            Input: {
                \\"random-number\\": \\"false\\",
                controlled: \\"false\\",
                enableNative: \\"false\\"
            },
            Slider: {
                \\"track-size\\": \\"4\\",
                \\"handle-size\\": \\"22\\",
                \\"handle-color\\": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"g\\"])(\\"#ffffff\\")
            },
            Switch: {
                controlled: \\"false\\"
            },
            Textarea: {
                \\"show-count\\": \\"true\\",
                controlled: \\"false\\",
                enableNative: \\"false\\"
            },
            MovableView: {
                bindChangeEnd: \\"\\"
            },
            ScrollView: {
                \\"scroll-animation-duration\\": \\"\\",
                \\"trap-scroll\\": \\"false\\"
            },
            Swiper: {
                \\"active-class\\": \\"\\",
                \\"changing-class\\": \\"\\",
                acceleration: \\"false\\",
                \\"disable-programmatic-animation\\": \\"false\\",
                \\"disable-touch\\": \\"false\\",
                bindAnimationEnd: \\"\\"
            },
            Image: {
                \\"default-source\\": \\"\\"
            },
            Canvas: {
                type: \\"\\",
                width: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"g\\"])(\\"300px\\"),
                height: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"g\\"])(\\"225px\\"),
                bindReady: \\"\\"
            },
            Video: {
                \\"poster-size\\": Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"g\\"])(\\"contain\\"),
                \\"mobilenet-hint-type\\": \\"1\\",
                enableNative: \\"false\\",
                bindLoading: \\"\\",
                bindUserAction: \\"\\",
                bindStop: \\"\\",
                bindRenderStart: \\"\\"
            },
            Lottie: {
                autoplay: \\"false\\",
                path: \\"\\",
                speed: \\"1.0\\",
                repeatCount: \\"0\\",
                autoReverse: \\"false\\",
                assetsPath: \\"\\",
                placeholder: \\"\\",
                djangoId: \\"\\",
                md5: \\"\\",
                optimize: \\"false\\",
                bindDataReady: \\"\\",
                bindDataFailed: \\"\\",
                bindAnimationStart: \\"\\",
                bindAnimationEnd: \\"\\",
                bindAnimationRepeat: \\"\\",
                bindAnimationCancel: \\"\\",
                bindDataLoadReady: \\"\\"
            },
            Lifestyle: {
                \\"public-id\\": \\"\\",
                memo: \\"\\",
                bindFollow: \\"\\"
            },
            LifeFollow: {
                sceneId: \\"\\",
                checkFollow: \\"\\",
                bindCheckFollow: \\"\\",
                bindClose: \\"\\"
            },
            ContactButton: {
                \\"tnt-inst-id\\": \\"\\",
                scene: \\"\\",
                size: \\"25\\",
                color: Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"g\\"])(\\"#00A3FF\\"),
                icon: \\"\\",
                \\"alipay-card-no\\": \\"\\",
                \\"ext-info\\": \\"\\"
            }
        };
        var BUBBLE_EVENTS = new Set([ \\"touchStart\\", \\"touchMove\\", \\"touchEnd\\", \\"touchCancel\\", \\"tap\\", \\"longTap\\" ]);
        var hostConfig = {
            initNativeApi: initNativeApi,
            getEventCenter: function getEventCenter(Events) {
                if (!my.taroEventCenter) {
                    my.taroEventCenter = new Events;
                }
                return my.taroEventCenter;
            },
            modifyTaroEvent: function modifyTaroEvent(event, node) {
                if (node.tagName === \\"SWIPER\\" && event.type === \\"animationend\\") {
                    event.type = \\"animationfinish\\";
                }
            },
            isBubbleEvents: function isBubbleEvents(eventName) {
                return BUBBLE_EVENTS.has(eventName);
            }
        };
        var _navigator = navigator, userAgent = _navigator.userAgent;
        Object.defineProperty(navigator, \\"userAgent\\", {
            configurable: true,
            enumerable: true,
            get: function get() {
                return userAgent || navigator.swuserAgent || \\"\\";
            }
        });
        Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"e\\"])(hostConfig);
        Object(_tarojs_shared__WEBPACK_IMPORTED_MODULE_0__[\\"d\\"])(components);
    }).call(this, __webpack_require__(0)[\\"navigator\\"]);
}, function(module, exports, __webpack_require__) {}, , , , , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    var runtime = __webpack_require__(16);
    var taro_runtime = __webpack_require__(0);
    var toConsumableArray = __webpack_require__(8);
    function _defineProperty(obj, key, value) {
        if (key in obj) {
            Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            obj[key] = value;
        }
        return obj;
    }
    function _arrayWithHoles(arr) {
        if (Array.isArray(arr)) return arr;
    }
    function _iterableToArrayLimit(arr, i) {
        var _i = arr == null ? null : typeof Symbol !== \\"undefined\\" && arr[Symbol.iterator] || arr[\\"@@iterator\\"];
        if (_i == null) return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _s, _e;
        try {
            for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally {
            try {
                if (!_n && _i[\\"return\\"] != null) _i[\\"return\\"]();
            } finally {
                if (_d) throw _e;
            }
        }
        return _arr;
    }
    var unsupportedIterableToArray = __webpack_require__(10);
    function _nonIterableRest() {
        throw new TypeError(\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\");
    }
    function _slicedToArray(arr, i) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray[\\"a\\"])(arr, i) || _nonIterableRest();
    }
    var classCallCheck = __webpack_require__(4);
    var createClass = __webpack_require__(5);
    var inherits = __webpack_require__(7);
    var createSuper = __webpack_require__(6);
    var shared_esm = __webpack_require__(2);
    var HOOKS_APP_ID = \\"taro-app\\";
    function isClassComponent(R, component) {
        var prototype = component.prototype;
        return Object(shared_esm[\\"c\\"])(component.render) || !!(prototype === null || prototype === void 0 ? void 0 : prototype.isReactComponent) || prototype instanceof R.Component;
    }
    function ensureIsArray(item) {
        if (Object(shared_esm[\\"b\\"])(item)) {
            return item;
        } else {
            return item ? [ item ] : [];
        }
    }
    function setDefaultDescriptor(obj) {
        obj.writable = true;
        obj.enumerable = true;
        return obj;
    }
    function setRouterParams(options) {
        taro_runtime[\\"Current\\"].router = Object.assign({
            params: options === null || options === void 0 ? void 0 : options.query
        }, options);
    }
    var PageContext = shared_esm[\\"a\\"];
    var R$1 = shared_esm[\\"a\\"];
    var h$1;
    var ReactDOM$1;
    var pageKeyId = Object(taro_runtime[\\"incrementId\\"])();
    var hooks$1 = taro_runtime[\\"container\\"].get(taro_runtime[\\"SERVICE_IDENTIFIER\\"].Hooks);
    function setReconciler() {
        var _a;
        hooks$1.getLifecycle = function(instance, lifecycle) {
            lifecycle = lifecycle.replace(/^on(Show|Hide)$/, \\"componentDid$1\\");
            return instance[lifecycle];
        };
        (_a = hooks$1.modifyMpEventImpls) === null || _a === void 0 ? void 0 : _a.push((function(event) {
            event.type = event.type.replace(/-/g, \\"\\");
        }));
        hooks$1.batchedEventUpdates = function(cb) {
            ReactDOM$1.unstable_batchedUpdates(cb);
        };
        hooks$1.mergePageInstance = function(prev, next) {
            if (!prev || !next) return;
            if (\\"constructor\\" in prev) return;
            Object.keys(prev).forEach((function(item) {
                var prevList = prev[item];
                var nextList = ensureIsArray(next[item]);
                next[item] = nextList.concat(prevList);
            }));
        };
        if (false) {}
    }
    function connectReactPage(R, id) {
        return function(Page) {
            var isReactComponent = isClassComponent(R, Page);
            var inject = function inject(node) {
                return node && Object(taro_runtime[\\"injectPageInstance\\"])(node, id);
            };
            var refs = isReactComponent ? {
                ref: inject
            } : {
                forwardedRef: inject,
                reactReduxForwardedRef: inject
            };
            if (PageContext === shared_esm[\\"a\\"]) {
                PageContext = R.createContext(\\"\\");
            }
            return function(_R$Component) {
                Object(inherits[\\"a\\"])(PageWrapper, _R$Component);
                var _super = Object(createSuper[\\"a\\"])(PageWrapper);
                function PageWrapper() {
                    var _this;
                    Object(classCallCheck[\\"a\\"])(this, PageWrapper);
                    _this = _super.apply(this, arguments);
                    _this.state = {
                        hasError: false
                    };
                    return _this;
                }
                Object(createClass[\\"a\\"])(PageWrapper, [ {
                    key: \\"componentDidCatch\\",
                    value: function componentDidCatch(error, info) {
                        if (false) {}
                    }
                }, {
                    key: \\"render\\",
                    value: function render() {
                        var children = this.state.hasError ? [] : h$1(PageContext.Provider, {
                            value: id
                        }, h$1(Page, Object.assign(Object.assign({}, this.props), refs)));
                        if (false) {} else {
                            return h$1(\\"root\\", {
                                id: id
                            }, children);
                        }
                    }
                } ], [ {
                    key: \\"getDerivedStateFromError\\",
                    value: function getDerivedStateFromError(error) {
                        false && false;
                        return {
                            hasError: true
                        };
                    }
                } ]);
                return PageWrapper;
            }(R.Component);
        };
    }
    function createReactApp(App, react, reactdom, config) {
        var _Object$create;
        if (false) {}
        R$1 = react;
        h$1 = react.createElement;
        ReactDOM$1 = reactdom;
        var appInstanceRef = react.createRef();
        var isReactComponent = isClassComponent(R$1, App);
        var appWrapper;
        setReconciler();
        function getAppInstance() {
            return appInstanceRef.current;
        }
        var AppWrapper = function(_R$1$Component) {
            Object(inherits[\\"a\\"])(AppWrapper, _R$1$Component);
            var _super2 = Object(createSuper[\\"a\\"])(AppWrapper);
            function AppWrapper() {
                var _this2;
                Object(classCallCheck[\\"a\\"])(this, AppWrapper);
                _this2 = _super2.apply(this, arguments);
                _this2.pages = [];
                _this2.elements = [];
                return _this2;
            }
            Object(createClass[\\"a\\"])(AppWrapper, [ {
                key: \\"mount\\",
                value: function mount(pageComponent, id, cb) {
                    var pageWrapper = connectReactPage(R$1, id)(pageComponent);
                    var key = id + pageKeyId();
                    var page = function page() {
                        return h$1(pageWrapper, {
                            key: key,
                            tid: id
                        });
                    };
                    this.pages.push(page);
                    this.forceUpdate(cb);
                }
            }, {
                key: \\"unmount\\",
                value: function unmount(id, cb) {
                    var elements = this.elements;
                    var idx = elements.findIndex((function(item) {
                        return item.props.tid === id;
                    }));
                    elements.splice(idx, 1);
                    this.forceUpdate(cb);
                }
            }, {
                key: \\"render\\",
                value: function render() {
                    var pages = this.pages, elements = this.elements;
                    while (pages.length > 0) {
                        var page = pages.pop();
                        elements.push(page());
                    }
                    var props = null;
                    if (isReactComponent) {
                        props = {
                            ref: appInstanceRef
                        };
                    }
                    return h$1(App, props, false ? undefined : elements.slice());
                }
            } ]);
            return AppWrapper;
        }(R$1.Component);
        if (true) {
            appWrapper = ReactDOM$1.render(h$1(AppWrapper), taro_runtime[\\"document\\"].getElementById(\\"app\\"));
        }
        var _hooks$1$getMiniLifec = _slicedToArray(hooks$1.getMiniLifecycleImpl().app, 3), ONLAUNCH = _hooks$1$getMiniLifec[0], ONSHOW = _hooks$1$getMiniLifec[1], ONHIDE = _hooks$1$getMiniLifec[2];
        var appObj = Object.create({
            render: function render(cb) {
                appWrapper.forceUpdate(cb);
            },
            mount: function mount(component, id, cb) {
                appWrapper.mount(component, id, cb);
            },
            unmount: function unmount(id, cb) {
                appWrapper.unmount(id, cb);
            }
        }, (_Object$create = {
            config: setDefaultDescriptor({
                configurable: true,
                value: config
            })
        }, _defineProperty(_Object$create, ONLAUNCH, setDefaultDescriptor({
            value: function value(options) {
                var _this3 = this;
                var _a;
                setRouterParams(options);
                if (false) {}
                var app = getAppInstance();
                this.$app = app;
                if (app) {
                    if (app.taroGlobalData) {
                        var globalData = app.taroGlobalData;
                        var keys = Object.keys(globalData);
                        var descriptors = Object.getOwnPropertyDescriptors(globalData);
                        keys.forEach((function(key) {
                            Object.defineProperty(_this3, key, {
                                configurable: true,
                                enumerable: true,
                                get: function get() {
                                    return globalData[key];
                                },
                                set: function set(value) {
                                    globalData[key] = value;
                                }
                            });
                        }));
                        Object.defineProperties(this, descriptors);
                    }
                    (_a = app.onLaunch) === null || _a === void 0 ? void 0 : _a.call(app, options);
                }
            }
        })), _defineProperty(_Object$create, ONSHOW, setDefaultDescriptor({
            value: function value(options) {
                var _a;
                setRouterParams(options);
                var app = getAppInstance();
                (_a = app === null || app === void 0 ? void 0 : app.componentDidShow) === null || _a === void 0 ? void 0 : _a.call(app, options);
                triggerAppHook(\\"onShow\\");
            }
        })), _defineProperty(_Object$create, ONHIDE, setDefaultDescriptor({
            value: function value(options) {
                var _a;
                var app = getAppInstance();
                (_a = app === null || app === void 0 ? void 0 : app.componentDidHide) === null || _a === void 0 ? void 0 : _a.call(app, options);
                triggerAppHook(\\"onHide\\");
            }
        })), _defineProperty(_Object$create, \\"onPageNotFound\\", setDefaultDescriptor({
            value: function value(res) {
                var _a;
                var app = getAppInstance();
                (_a = app === null || app === void 0 ? void 0 : app.onPageNotFound) === null || _a === void 0 ? void 0 : _a.call(app, res);
            }
        })), _Object$create));
        function triggerAppHook(lifecycle) {
            var instance = Object(taro_runtime[\\"getPageInstance\\"])(HOOKS_APP_ID);
            if (instance) {
                var app = getAppInstance();
                var func = hooks$1.getLifecycle(instance, lifecycle);
                if (Array.isArray(func)) {
                    func.forEach((function(cb) {
                        return cb.apply(app);
                    }));
                }
            }
        }
        taro_runtime[\\"Current\\"].app = appObj;
        return appObj;
    }
    var runtime_taroHooks = function taroHooks(lifecycle) {
        return function(fn) {
            var id = R$1.useContext(PageContext) || HOOKS_APP_ID;
            var fnRef = R$1.useRef(fn);
            if (fnRef.current !== fn) fnRef.current = fn;
            R$1.useLayoutEffect((function() {
                var inst = Object(taro_runtime[\\"getPageInstance\\"])(id);
                var first = false;
                if (inst == null) {
                    first = true;
                    inst = Object.create(null);
                }
                inst = inst;
                var callback = function callback() {
                    return fnRef.current.apply(fnRef, arguments);
                };
                if (Object(shared_esm[\\"c\\"])(inst[lifecycle])) {
                    inst[lifecycle] = [ inst[lifecycle], callback ];
                } else {
                    inst[lifecycle] = [].concat(Object(toConsumableArray[\\"a\\"])(inst[lifecycle] || []), [ callback ]);
                }
                if (first) {
                    Object(taro_runtime[\\"injectPageInstance\\"])(inst, id);
                }
                return function() {
                    var inst = Object(taro_runtime[\\"getPageInstance\\"])(id);
                    var list = inst[lifecycle];
                    if (list === callback) {
                        inst[lifecycle] = undefined;
                    } else if (Object(shared_esm[\\"b\\"])(list)) {
                        inst[lifecycle] = list.filter((function(item) {
                            return item !== callback;
                        }));
                    }
                };
            }), []);
        };
    };
    var useDidShow = runtime_taroHooks(\\"componentDidShow\\");
    var useDidHide = runtime_taroHooks(\\"componentDidHide\\");
    var usePullDownRefresh = runtime_taroHooks(\\"onPullDownRefresh\\");
    var useReachBottom = runtime_taroHooks(\\"onReachBottom\\");
    var usePageScroll = runtime_taroHooks(\\"onPageScroll\\");
    var useResize = runtime_taroHooks(\\"onResize\\");
    var useShareAppMessage = runtime_taroHooks(\\"onShareAppMessage\\");
    var useTabItemTap = runtime_taroHooks(\\"onTabItemTap\\");
    var useTitleClick = runtime_taroHooks(\\"onTitleClick\\");
    var useOptionMenuClick = runtime_taroHooks(\\"onOptionMenuClick\\");
    var usePullIntercept = runtime_taroHooks(\\"onPullIntercept\\");
    var useShareTimeline = runtime_taroHooks(\\"onShareTimeline\\");
    var useAddToFavorites = runtime_taroHooks(\\"onAddToFavorites\\");
    var useReady = runtime_taroHooks(\\"onReady\\");
    var runtime_useRouter = function useRouter() {
        var dynamic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return dynamic ? taro_runtime[\\"Current\\"].router : R$1.useMemo((function() {
            return taro_runtime[\\"Current\\"].router;
        }), []);
    };
    var useScope = function useScope() {
        return undefined;
    };
    var taroHooks$1 = Object.freeze({
        __proto__: null,
        useDidShow: useDidShow,
        useDidHide: useDidHide,
        usePullDownRefresh: usePullDownRefresh,
        useReachBottom: useReachBottom,
        usePageScroll: usePageScroll,
        useResize: useResize,
        useShareAppMessage: useShareAppMessage,
        useTabItemTap: useTabItemTap,
        useTitleClick: useTitleClick,
        useOptionMenuClick: useOptionMenuClick,
        usePullIntercept: usePullIntercept,
        useShareTimeline: useShareTimeline,
        useAddToFavorites: useAddToFavorites,
        useReady: useReady,
        useRouter: runtime_useRouter,
        useScope: useScope
    });
    var getNativeCompId = Object(taro_runtime[\\"incrementId\\"])();
    var runtime_R;
    var h;
    var runtime_ReactDOM;
    function initNativeComponentEntry(R, ReactDOM) {
        var NativeComponentWrapper = function(_R$Component2) {
            Object(inherits[\\"a\\"])(NativeComponentWrapper, _R$Component2);
            var _super3 = Object(createSuper[\\"a\\"])(NativeComponentWrapper);
            function NativeComponentWrapper() {
                var _this4;
                Object(classCallCheck[\\"a\\"])(this, NativeComponentWrapper);
                _this4 = _super3.apply(this, arguments);
                _this4.root = R.createRef();
                _this4.ctx = _this4.props.getCtx();
                return _this4;
            }
            Object(createClass[\\"a\\"])(NativeComponentWrapper, [ {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {
                    this.ctx.component = this;
                    var rootElement = this.root.current;
                    rootElement.ctx = this.ctx;
                    rootElement.performUpdate(true);
                }
            }, {
                key: \\"render\\",
                value: function render() {
                    return h(\\"root\\", {
                        ref: this.root
                    }, this.props.renderComponent(this.ctx));
                }
            } ]);
            return NativeComponentWrapper;
        }(R.Component);
        var Entry = function(_R$Component3) {
            Object(inherits[\\"a\\"])(Entry, _R$Component3);
            var _super4 = Object(createSuper[\\"a\\"])(Entry);
            function Entry() {
                var _this5;
                Object(classCallCheck[\\"a\\"])(this, Entry);
                _this5 = _super4.apply(this, arguments);
                _this5.state = {
                    components: []
                };
                return _this5;
            }
            Object(createClass[\\"a\\"])(Entry, [ {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {
                    taro_runtime[\\"Current\\"].app = this;
                }
            }, {
                key: \\"mount\\",
                value: function mount(Component, compId, getCtx) {
                    var isReactComponent = isClassComponent(R, Component);
                    var inject = function inject(node) {
                        return node && Object(taro_runtime[\\"injectPageInstance\\"])(node, compId);
                    };
                    var refs = isReactComponent ? {
                        ref: inject
                    } : {
                        forwardedRef: inject,
                        reactReduxForwardedRef: inject
                    };
                    var item = {
                        compId: compId,
                        element: h(NativeComponentWrapper, {
                            key: compId,
                            getCtx: getCtx,
                            renderComponent: function renderComponent(ctx) {
                                return h(Component, Object.assign(Object.assign({}, (ctx.data || (ctx.data = {})).props), refs));
                            }
                        })
                    };
                    this.setState({
                        components: [].concat(Object(toConsumableArray[\\"a\\"])(this.state.components), [ item ])
                    });
                }
            }, {
                key: \\"unmount\\",
                value: function unmount(compId) {
                    var components = this.state.components;
                    var index = components.findIndex((function(item) {
                        return item.compId === compId;
                    }));
                    var next = [].concat(Object(toConsumableArray[\\"a\\"])(components.slice(0, index)), Object(toConsumableArray[\\"a\\"])(components.slice(index + 1)));
                    this.setState({
                        components: next
                    });
                }
            }, {
                key: \\"render\\",
                value: function render() {
                    var components = this.state.components;
                    return components.map((function(_ref) {
                        var element = _ref.element;
                        return element;
                    }));
                }
            } ]);
            return Entry;
        }(R.Component);
        setReconciler();
        var app = taro_runtime[\\"document\\"].getElementById(\\"app\\");
        ReactDOM.render(h(Entry, {}), app);
    }
    function createNativeComponentConfig(Component, react, reactdom, componentConfig) {
        runtime_R = react;
        h = react.createElement;
        runtime_ReactDOM = reactdom;
        setReconciler();
        var componentObj = {
            properties: {
                props: {
                    type: null,
                    value: null,
                    observer: function observer(_newVal, oldVal) {
                        oldVal && this.component.forceUpdate();
                    }
                }
            },
            created: function created() {
                if (!taro_runtime[\\"Current\\"].app) {
                    initNativeComponentEntry(runtime_R, runtime_ReactDOM);
                }
            },
            attached: function attached() {
                var _this6 = this;
                setCurrent();
                this.compId = getNativeCompId();
                this.config = componentConfig;
                taro_runtime[\\"Current\\"].app.mount(Component, this.compId, (function() {
                    return _this6;
                }));
            },
            ready: function ready() {
                Object(taro_runtime[\\"safeExecute\\"])(this.compId, \\"onReady\\");
            },
            detached: function detached() {
                taro_runtime[\\"Current\\"].app.unmount(this.compId);
            },
            pageLifetimes: {
                show: function show() {
                    Object(taro_runtime[\\"safeExecute\\"])(this.compId, \\"onShow\\");
                },
                hide: function hide() {
                    Object(taro_runtime[\\"safeExecute\\"])(this.compId, \\"onHide\\");
                }
            },
            methods: {
                eh: taro_runtime[\\"eventHandler\\"]
            }
        };
        function setCurrent() {
            var pages = getCurrentPages();
            var currentPage = pages[pages.length - 1];
            if (taro_runtime[\\"Current\\"].page === currentPage) return;
            taro_runtime[\\"Current\\"].page = currentPage;
            var route = currentPage.route || currentPage.__route__;
            var router = {
                params: currentPage.options || {},
                path: Object(taro_runtime[\\"addLeadingSlash\\"])(route),
                onReady: \\"\\",
                onHide: \\"\\",
                onShow: \\"\\"
            };
            taro_runtime[\\"Current\\"].router = router;
            if (!currentPage.options) {
                Object.defineProperty(currentPage, \\"options\\", {
                    enumerable: true,
                    configurable: true,
                    get: function get() {
                        return this._optionsValue;
                    },
                    set: function set(value) {
                        router.params = value;
                        this._optionsValue = value;
                    }
                });
            }
        }
        return componentObj;
    }
    var _a, _b;
    var hooks = taro_runtime[\\"container\\"].get(taro_runtime[\\"SERVICE_IDENTIFIER\\"].Hooks);
    hooks.initNativeApiImpls || (hooks.initNativeApiImpls = []);
    hooks.initNativeApiImpls.push((function(taro) {
        for (var hook in taroHooks$1) {
            taro[hook] = taroHooks$1[hook];
        }
    }));
    if (false) {}
    var taro = \\"taro\\";
    var mocks_react = __webpack_require__(1);
    var src_app = __webpack_require__(17);
    var app_App = function(_Component) {
        Object(inherits[\\"a\\"])(App, _Component);
        var _super = Object(createSuper[\\"a\\"])(App);
        function App() {
            Object(classCallCheck[\\"a\\"])(this, App);
            return _super.apply(this, arguments);
        }
        Object(createClass[\\"a\\"])(App, [ {
            key: \\"componentDidMount\\",
            value: function componentDidMount() {}
        }, {
            key: \\"componentDidShow\\",
            value: function componentDidShow() {}
        }, {
            key: \\"componentDidHide\\",
            value: function componentDidHide() {}
        }, {
            key: \\"componentDidCatchError\\",
            value: function componentDidCatchError() {}
        }, {
            key: \\"render\\",
            value: function render() {
                return this.props.children;
            }
        } ]);
        return App;
    }(mocks_react[\\"Component\\"]);
    var lib_src_app = app_App;
    var taro_react = __webpack_require__(13);
    var app_config = {
        pages: [ \\"pages/index/index\\" ],
        window: {
            backgroundTextStyle: \\"light\\",
            navigationBarBackgroundColor: \\"#fff\\",
            navigationBarTitleText: \\"WeChat\\",
            navigationBarTextStyle: \\"black\\"
        }
    };
    taro_runtime[\\"window\\"].__taroAppConfig = app_config;
    var app_inst = App(createReactApp(lib_src_app, mocks_react, taro_react[\\"a\\"], app_config));
    undefined({
        designWidth: 750,
        deviceRatio: {
            640: 1.17,
            750: 1,
            828: .905
        }
    });
} ], [ [ 23, 0, 1, 3, 2 ] ] ]);



/** filePath: dist/app.json **/
{\\"pages\\":[\\"pages/index/index\\"],\\"window\\":{\\"backgroundTextStyle\\":\\"light\\",\\"navigationBarBackgroundColor\\":\\"#fff\\",\\"navigationBarTitleText\\":\\"WeChat\\",\\"navigationBarTextStyle\\":\\"black\\"}}

/** filePath: dist/base.axml **/
<import-sjs name=\\"xs\\" from=\\"./utils.sjs\\" />
<template name=\\"taro_tmpl\\">
  <block a:for=\\"{{root.cn}}\\" a:key=\\"uid\\">
    <template is=\\"tmpl_0_container\\" data=\\"{{i:item}}\\" />
  </block>
</template>

<template name=\\"tmpl_0_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" onTouchStart=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" animation=\\"{{i.animation}}\\" onAnimationStart=\\"eh\\" onAnimationIteration=\\"eh\\" onAnimationEnd=\\"eh\\" onTransitionEnd=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" catchTouchMove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" onTouchStart=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" animation=\\"{{i.animation}}\\" onAnimationStart=\\"eh\\" onAnimationIteration=\\"eh\\" onAnimationEnd=\\"eh\\" onTransitionEnd=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_0_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_0_input\\">
  <template is=\\"{{xs.c(i, 'tmpl_0_')}}\\" data=\\"{{i:i}}\\" />
</template>

<template name=\\"tmpl_0_input_focus\\">
  <input value=\\"{{i.value}}\\" type=\\"{{xs.b(i.type,'')}}\\" password=\\"{{xs.b(i.password,false)}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'input-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" focus=\\"{{xs.b(i.focus,false)}}\\" confirm-type=\\"{{xs.b(i.confirmType,'done')}}\\" confirm-hold=\\"{{xs.b(i.confirmHold,false)}}\\" cursor=\\"{{xs.b(i.cursor,i.value.length)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" onInput=\\"eh\\" onFocus=\\"eh\\" onBlur=\\"eh\\" onConfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\"></input>
</template>

<template name=\\"tmpl_0_input_blur\\">
  <input value=\\"{{i.value}}\\" type=\\"{{xs.b(i.type,'')}}\\" password=\\"{{xs.b(i.password,false)}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'input-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" confirm-type=\\"{{xs.b(i.confirmType,'done')}}\\" confirm-hold=\\"{{xs.b(i.confirmHold,false)}}\\" cursor=\\"{{xs.b(i.cursor,i.value.length)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" onInput=\\"eh\\" onFocus=\\"eh\\" onBlur=\\"eh\\" onConfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\"></input>
</template>

<template name=\\"tmpl_0_cover-image\\">
  <cover-image src=\\"{{i.src}}\\" onLoad=\\"eh\\" onError=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </cover-image>
</template>

<template name=\\"tmpl_0_textarea\\">
  <template is=\\"{{xs.c(i, 'tmpl_0_')}}\\" data=\\"{{i:i}}\\" />
</template>

<template name=\\"tmpl_0_textarea_focus\\">
  <textarea value=\\"{{i.value}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'textarea-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" auto-focus=\\"{{xs.b(i.autoFocus,false)}}\\" focus=\\"{{xs.b(i.focus,false)}}\\" auto-height=\\"{{xs.b(i.autoHeight,false)}}\\" fixed=\\"{{xs.b(i.fixed,false)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" cursor=\\"{{xs.b(i.cursor,-1)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" onFocus=\\"eh\\" onBlur=\\"eh\\" onLineChange=\\"eh\\" onInput=\\"eh\\" onConfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\"></textarea>
</template>

<template name=\\"tmpl_0_textarea_blur\\">
  <textarea value=\\"{{i.value}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'textarea-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" auto-focus=\\"{{xs.b(i.autoFocus,false)}}\\" auto-height=\\"{{xs.b(i.autoHeight,false)}}\\" fixed=\\"{{xs.b(i.fixed,false)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" cursor=\\"{{xs.b(i.cursor,-1)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" onFocus=\\"eh\\" onBlur=\\"eh\\" onLineChange=\\"eh\\" onInput=\\"eh\\" onConfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\"></textarea>
</template>

<template name=\\"tmpl_0_cover-view\\">
  <cover-view scroll-top=\\"{{xs.b(i.scrollTop,false)}}\\" onTouchStart=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </cover-view>
</template>

<template name=\\"tmpl_0_scroll-view\\">
  <scroll-view scroll-x=\\"{{xs.b(i.scrollX,false)}}\\" scroll-y=\\"{{xs.b(i.scrollY,false)}}\\" upper-threshold=\\"{{xs.b(i.upperThreshold,50)}}\\" lower-threshold=\\"{{xs.b(i.lowerThreshold,50)}}\\" scroll-top=\\"{{i.scrollTop}}\\" scroll-left=\\"{{i.scrollLeft}}\\" scroll-into-view=\\"{{i.scrollIntoView}}\\" scroll-with-animation=\\"{{xs.b(i.scrollWithAnimation,false)}}\\" enable-back-to-top=\\"{{xs.b(i.enableBackToTop,false)}}\\" onScrollToUpper=\\"eh\\" onScrollToLower=\\"eh\\" onScroll=\\"eh\\" onTouchStart=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" animation=\\"{{i.animation}}\\" onAnimationStart=\\"eh\\" onAnimationIteration=\\"eh\\" onAnimationEnd=\\"eh\\" onTransitionEnd=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_0_swiper\\">
  <swiper indicator-dots=\\"{{xs.b(i.indicatorDots,false)}}\\" indicator-color=\\"{{xs.b(i.indicatorColor,'rgba(0, 0, 0, .3)')}}\\" indicator-active-color=\\"{{xs.b(i.indicatorActiveColor,'#000000')}}\\" autoplay=\\"{{xs.b(i.autoplay,false)}}\\" current=\\"{{xs.b(i.current,0)}}\\" interval=\\"{{xs.b(i.interval,5000)}}\\" duration=\\"{{xs.b(i.duration,500)}}\\" circular=\\"{{xs.b(i.circular,false)}}\\" vertical=\\"{{xs.b(i.vertical,false)}}\\" previous-margin=\\"{{xs.b(i.previousMargin,'0px')}}\\" next-margin=\\"{{xs.b(i.nextMargin,'0px')}}\\" display-multiple-items=\\"{{xs.b(i.displayMultipleItems,1)}}\\" onChange=\\"eh\\" onTransition=\\"eh\\" onAnimationFinish=\\"eh\\" onTouchStart=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{xs.f(i.cn)}}\\" a:key=\\"uid\\">
      <swiper-item class=\\"{{item.cl}}\\" style=\\"{{item.st}}\\" id=\\"{{item.uid}}\\">
        <block a:for=\\"{{item.cn}}\\" a:key=\\"uid\\">
          <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
        </block>
      </swiper-item>
    </block>
  </swiper>
</template>

<template name=\\"tmpl_0_static-image\\">
  <image src=\\"{{i.src}}\\" mode=\\"{{xs.b(i.mode,'scaleToFill')}}\\" lazy-load=\\"{{xs.b(i.lazyLoad,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_0_image\\">
  <image src=\\"{{i.src}}\\" mode=\\"{{xs.b(i.mode,'scaleToFill')}}\\" lazy-load=\\"{{xs.b(i.lazyLoad,false)}}\\" onError=\\"eh\\" onLoad=\\"eh\\" onTouchStart=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_0_video\\">
  <video src=\\"{{i.src}}\\" duration=\\"{{i.duration}}\\" controls=\\"{{xs.b(i.controls,true)}}\\" danmu-list=\\"{{i.danmuList}}\\" danmu-btn=\\"{{i.danmuBtn}}\\" enable-danmu=\\"{{i.enableDanmu}}\\" autoplay=\\"{{xs.b(i.autoplay,false)}}\\" loop=\\"{{xs.b(i.loop,false)}}\\" muted=\\"{{xs.b(i.muted,false)}}\\" initial-time=\\"{{xs.b(i.initialTime,0)}}\\" page-gesture=\\"{{xs.b(i.pageGesture,false)}}\\" direction=\\"{{i.direction}}\\" show-progress=\\"{{xs.b(i.showProgress,true)}}\\" show-fullscreen-btn=\\"{{xs.b(i.showFullscreenBtn,true)}}\\" show-play-btn=\\"{{xs.b(i.showPlayBtn,true)}}\\" show-center-play-btn=\\"{{xs.b(i.showCenterPlayBtn,true)}}\\" enable-progress-gesture=\\"{{xs.b(i.enableProgressGesture,true)}}\\" object-fit=\\"{{xs.b(i.objectFit,'contain')}}\\" poster=\\"{{i.poster}}\\" show-mute-btn=\\"{{xs.b(i.showMuteBtn,false)}}\\" onPlay=\\"eh\\" onPause=\\"eh\\" onEnded=\\"eh\\" onTimeUpdate=\\"eh\\" onFullScreenChange=\\"eh\\" onWaiting=\\"eh\\" onError=\\"eh\\" animation=\\"{{i.animation}}\\" onAnimationStart=\\"eh\\" onAnimationIteration=\\"eh\\" onAnimationEnd=\\"eh\\" onTransitionEnd=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </video>
</template>

<template name=\\"tmpl_0_canvas\\">
  <canvas canvas-id=\\"{{i.canvasId}}\\" disable-scroll=\\"{{xs.b(i.disableScroll,false)}}\\" onError=\\"eh\\" onTouchStart=\\"eh\\" onTouchMove=\\"eh\\" onTouchEnd=\\"eh\\" onTouchCancel=\\"eh\\" onLongTap=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" onTap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{i:item}}\\" />
    </block>
  </canvas>
</template>

<template name=\\"tmpl_0_#text\\" data=\\"{{i:i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_0_container\\">
  <template is=\\"{{xs.a(0, i.nn)}}\\" data=\\"{{i:i}}\\" />
</template>


/** filePath: dist/common.js **/
(my[\\"webpackJsonp\\"] = my[\\"webpackJsonp\\"] || []).push([ [ 2 ], [ , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    __webpack_exports__[\\"default\\"] = \\"react-mock\\";
} ] ]);

/** filePath: dist/custom-wrapper.axml **/
<import src=\\"./base.axml\\" />
  <block a:for=\\"{{i.cn}}\\" a:key=\\"uid\\">
    <template is=\\"tmpl_0_container\\" data=\\"{{i:item}}\\" />
  </block>

/** filePath: dist/custom-wrapper.js **/
(my[\\"webpackJsonp\\"] = my[\\"webpackJsonp\\"] || []).push([ [ 6 ], {
    18: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var _tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        Component(Object(_tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__[\\"createRecursiveComponentConfig\\"])(\\"custom-wrapper\\"));
    }
}, [ [ 18, 0, 1 ] ] ]);

/** filePath: dist/custom-wrapper.json **/
{\\"component\\":true,\\"usingComponents\\":{\\"custom-wrapper\\":\\"./custom-wrapper\\"}}

/** filePath: dist/pages/index/index.acss **/


/** filePath: dist/pages/index/index.axml **/
<import src=\\"../../base.axml\\"/>
<template is=\\"taro_tmpl\\" data=\\"{{root:root}}\\" />

/** filePath: dist/pages/index/index.js **/
(my[\\"webpackJsonp\\"] = my[\\"webpackJsonp\\"] || []).push([ [ 7 ], {
    12: function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(19);
    },
    19: function(module, exports, __webpack_require__) {
        var g = function() {
            return this;
        }() || Function(\\"return this\\")();
        var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\\"regeneratorRuntime\\") >= 0;
        var oldRuntime = hadRuntime && g.regeneratorRuntime;
        g.regeneratorRuntime = undefined;
        module.exports = __webpack_require__(20);
        if (hadRuntime) {
            g.regeneratorRuntime = oldRuntime;
        } else {
            try {
                delete g.regeneratorRuntime;
            } catch (e) {
                g.regeneratorRuntime = undefined;
            }
        }
    },
    20: function(module, exports, __webpack_require__) {
        (function(module) {
            var _typeof = __webpack_require__(11).default;
            !function(global) {
                \\"use strict\\";
                var Op = Object.prototype;
                var hasOwn = Op.hasOwnProperty;
                var undefined;
                var $Symbol = typeof Symbol === \\"function\\" ? Symbol : {};
                var iteratorSymbol = $Symbol.iterator || \\"@@iterator\\";
                var asyncIteratorSymbol = $Symbol.asyncIterator || \\"@@asyncIterator\\";
                var toStringTagSymbol = $Symbol.toStringTag || \\"@@toStringTag\\";
                var inModule = (false ? undefined : _typeof(module)) === \\"object\\";
                var runtime = global.regeneratorRuntime;
                if (runtime) {
                    if (inModule) {
                        module.exports = runtime;
                    }
                    return;
                }
                runtime = global.regeneratorRuntime = inModule ? module.exports : {};
                function wrap(innerFn, outerFn, self, tryLocsList) {
                    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                    var generator = Object.create(protoGenerator.prototype);
                    var context = new Context(tryLocsList || []);
                    generator._invoke = makeInvokeMethod(innerFn, self, context);
                    return generator;
                }
                runtime.wrap = wrap;
                function tryCatch(fn, obj, arg) {
                    try {
                        return {
                            type: \\"normal\\",
                            arg: fn.call(obj, arg)
                        };
                    } catch (err) {
                        return {
                            type: \\"throw\\",
                            arg: err
                        };
                    }
                }
                var GenStateSuspendedStart = \\"suspendedStart\\";
                var GenStateSuspendedYield = \\"suspendedYield\\";
                var GenStateExecuting = \\"executing\\";
                var GenStateCompleted = \\"completed\\";
                var ContinueSentinel = {};
                function Generator() {}
                function GeneratorFunction() {}
                function GeneratorFunctionPrototype() {}
                var IteratorPrototype = {};
                IteratorPrototype[iteratorSymbol] = function() {
                    return this;
                };
                var getProto = Object.getPrototypeOf;
                var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
                if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
                    IteratorPrototype = NativeIteratorPrototype;
                }
                var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
                GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
                GeneratorFunctionPrototype.constructor = GeneratorFunction;
                GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \\"GeneratorFunction\\";
                function defineIteratorMethods(prototype) {
                    [ \\"next\\", \\"throw\\", \\"return\\" ].forEach((function(method) {
                        prototype[method] = function(arg) {
                            return this._invoke(method, arg);
                        };
                    }));
                }
                runtime.isGeneratorFunction = function(genFun) {
                    var ctor = typeof genFun === \\"function\\" && genFun.constructor;
                    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === \\"GeneratorFunction\\" : false;
                };
                runtime.mark = function(genFun) {
                    if (Object.setPrototypeOf) {
                        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                    } else {
                        genFun.__proto__ = GeneratorFunctionPrototype;
                        if (!(toStringTagSymbol in genFun)) {
                            genFun[toStringTagSymbol] = \\"GeneratorFunction\\";
                        }
                    }
                    genFun.prototype = Object.create(Gp);
                    return genFun;
                };
                runtime.awrap = function(arg) {
                    return {
                        __await: arg
                    };
                };
                function AsyncIterator(generator) {
                    function invoke(method, arg, resolve, reject) {
                        var record = tryCatch(generator[method], generator, arg);
                        if (record.type === \\"throw\\") {
                            reject(record.arg);
                        } else {
                            var result = record.arg;
                            var value = result.value;
                            if (value && _typeof(value) === \\"object\\" && hasOwn.call(value, \\"__await\\")) {
                                return Promise.resolve(value.__await).then((function(value) {
                                    invoke(\\"next\\", value, resolve, reject);
                                }), (function(err) {
                                    invoke(\\"throw\\", err, resolve, reject);
                                }));
                            }
                            return Promise.resolve(value).then((function(unwrapped) {
                                result.value = unwrapped;
                                resolve(result);
                            }), reject);
                        }
                    }
                    var previousPromise;
                    function enqueue(method, arg) {
                        function callInvokeWithMethodAndArg() {
                            return new Promise((function(resolve, reject) {
                                invoke(method, arg, resolve, reject);
                            }));
                        }
                        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
                    }
                    this._invoke = enqueue;
                }
                defineIteratorMethods(AsyncIterator.prototype);
                AsyncIterator.prototype[asyncIteratorSymbol] = function() {
                    return this;
                };
                runtime.AsyncIterator = AsyncIterator;
                runtime.async = function(innerFn, outerFn, self, tryLocsList) {
                    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
                    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then((function(result) {
                        return result.done ? result.value : iter.next();
                    }));
                };
                function makeInvokeMethod(innerFn, self, context) {
                    var state = GenStateSuspendedStart;
                    return function invoke(method, arg) {
                        if (state === GenStateExecuting) {
                            throw new Error(\\"Generator is already running\\");
                        }
                        if (state === GenStateCompleted) {
                            if (method === \\"throw\\") {
                                throw arg;
                            }
                            return doneResult();
                        }
                        context.method = method;
                        context.arg = arg;
                        while (true) {
                            var delegate = context.delegate;
                            if (delegate) {
                                var delegateResult = maybeInvokeDelegate(delegate, context);
                                if (delegateResult) {
                                    if (delegateResult === ContinueSentinel) continue;
                                    return delegateResult;
                                }
                            }
                            if (context.method === \\"next\\") {
                                context.sent = context._sent = context.arg;
                            } else if (context.method === \\"throw\\") {
                                if (state === GenStateSuspendedStart) {
                                    state = GenStateCompleted;
                                    throw context.arg;
                                }
                                context.dispatchException(context.arg);
                            } else if (context.method === \\"return\\") {
                                context.abrupt(\\"return\\", context.arg);
                            }
                            state = GenStateExecuting;
                            var record = tryCatch(innerFn, self, context);
                            if (record.type === \\"normal\\") {
                                state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                                if (record.arg === ContinueSentinel) {
                                    continue;
                                }
                                return {
                                    value: record.arg,
                                    done: context.done
                                };
                            } else if (record.type === \\"throw\\") {
                                state = GenStateCompleted;
                                context.method = \\"throw\\";
                                context.arg = record.arg;
                            }
                        }
                    };
                }
                function maybeInvokeDelegate(delegate, context) {
                    var method = delegate.iterator[context.method];
                    if (method === undefined) {
                        context.delegate = null;
                        if (context.method === \\"throw\\") {
                            if (delegate.iterator.return) {
                                context.method = \\"return\\";
                                context.arg = undefined;
                                maybeInvokeDelegate(delegate, context);
                                if (context.method === \\"throw\\") {
                                    return ContinueSentinel;
                                }
                            }
                            context.method = \\"throw\\";
                            context.arg = new TypeError(\\"The iterator does not provide a 'throw' method\\");
                        }
                        return ContinueSentinel;
                    }
                    var record = tryCatch(method, delegate.iterator, context.arg);
                    if (record.type === \\"throw\\") {
                        context.method = \\"throw\\";
                        context.arg = record.arg;
                        context.delegate = null;
                        return ContinueSentinel;
                    }
                    var info = record.arg;
                    if (!info) {
                        context.method = \\"throw\\";
                        context.arg = new TypeError(\\"iterator result is not an object\\");
                        context.delegate = null;
                        return ContinueSentinel;
                    }
                    if (info.done) {
                        context[delegate.resultName] = info.value;
                        context.next = delegate.nextLoc;
                        if (context.method !== \\"return\\") {
                            context.method = \\"next\\";
                            context.arg = undefined;
                        }
                    } else {
                        return info;
                    }
                    context.delegate = null;
                    return ContinueSentinel;
                }
                defineIteratorMethods(Gp);
                Gp[toStringTagSymbol] = \\"Generator\\";
                Gp[iteratorSymbol] = function() {
                    return this;
                };
                Gp.toString = function() {
                    return \\"[object Generator]\\";
                };
                function pushTryEntry(locs) {
                    var entry = {
                        tryLoc: locs[0]
                    };
                    if (1 in locs) {
                        entry.catchLoc = locs[1];
                    }
                    if (2 in locs) {
                        entry.finallyLoc = locs[2];
                        entry.afterLoc = locs[3];
                    }
                    this.tryEntries.push(entry);
                }
                function resetTryEntry(entry) {
                    var record = entry.completion || {};
                    record.type = \\"normal\\";
                    delete record.arg;
                    entry.completion = record;
                }
                function Context(tryLocsList) {
                    this.tryEntries = [ {
                        tryLoc: \\"root\\"
                    } ];
                    tryLocsList.forEach(pushTryEntry, this);
                    this.reset(true);
                }
                runtime.keys = function(object) {
                    var keys = [];
                    for (var key in object) {
                        keys.push(key);
                    }
                    keys.reverse();
                    return function next() {
                        while (keys.length) {
                            var key = keys.pop();
                            if (key in object) {
                                next.value = key;
                                next.done = false;
                                return next;
                            }
                        }
                        next.done = true;
                        return next;
                    };
                };
                function values(iterable) {
                    if (iterable) {
                        var iteratorMethod = iterable[iteratorSymbol];
                        if (iteratorMethod) {
                            return iteratorMethod.call(iterable);
                        }
                        if (typeof iterable.next === \\"function\\") {
                            return iterable;
                        }
                        if (!isNaN(iterable.length)) {
                            var i = -1, next = function next() {
                                while (++i < iterable.length) {
                                    if (hasOwn.call(iterable, i)) {
                                        next.value = iterable[i];
                                        next.done = false;
                                        return next;
                                    }
                                }
                                next.value = undefined;
                                next.done = true;
                                return next;
                            };
                            return next.next = next;
                        }
                    }
                    return {
                        next: doneResult
                    };
                }
                runtime.values = values;
                function doneResult() {
                    return {
                        value: undefined,
                        done: true
                    };
                }
                Context.prototype = {
                    constructor: Context,
                    reset: function reset(skipTempReset) {
                        this.prev = 0;
                        this.next = 0;
                        this.sent = this._sent = undefined;
                        this.done = false;
                        this.delegate = null;
                        this.method = \\"next\\";
                        this.arg = undefined;
                        this.tryEntries.forEach(resetTryEntry);
                        if (!skipTempReset) {
                            for (var name in this) {
                                if (name.charAt(0) === \\"t\\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                                    this[name] = undefined;
                                }
                            }
                        }
                    },
                    stop: function stop() {
                        this.done = true;
                        var rootEntry = this.tryEntries[0];
                        var rootRecord = rootEntry.completion;
                        if (rootRecord.type === \\"throw\\") {
                            throw rootRecord.arg;
                        }
                        return this.rval;
                    },
                    dispatchException: function dispatchException(exception) {
                        if (this.done) {
                            throw exception;
                        }
                        var context = this;
                        function handle(loc, caught) {
                            record.type = \\"throw\\";
                            record.arg = exception;
                            context.next = loc;
                            if (caught) {
                                context.method = \\"next\\";
                                context.arg = undefined;
                            }
                            return !!caught;
                        }
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            var record = entry.completion;
                            if (entry.tryLoc === \\"root\\") {
                                return handle(\\"end\\");
                            }
                            if (entry.tryLoc <= this.prev) {
                                var hasCatch = hasOwn.call(entry, \\"catchLoc\\");
                                var hasFinally = hasOwn.call(entry, \\"finallyLoc\\");
                                if (hasCatch && hasFinally) {
                                    if (this.prev < entry.catchLoc) {
                                        return handle(entry.catchLoc, true);
                                    } else if (this.prev < entry.finallyLoc) {
                                        return handle(entry.finallyLoc);
                                    }
                                } else if (hasCatch) {
                                    if (this.prev < entry.catchLoc) {
                                        return handle(entry.catchLoc, true);
                                    }
                                } else if (hasFinally) {
                                    if (this.prev < entry.finallyLoc) {
                                        return handle(entry.finallyLoc);
                                    }
                                } else {
                                    throw new Error(\\"try statement without catch or finally\\");
                                }
                            }
                        }
                    },
                    abrupt: function abrupt(type, arg) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            if (entry.tryLoc <= this.prev && hasOwn.call(entry, \\"finallyLoc\\") && this.prev < entry.finallyLoc) {
                                var finallyEntry = entry;
                                break;
                            }
                        }
                        if (finallyEntry && (type === \\"break\\" || type === \\"continue\\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                            finallyEntry = null;
                        }
                        var record = finallyEntry ? finallyEntry.completion : {};
                        record.type = type;
                        record.arg = arg;
                        if (finallyEntry) {
                            this.method = \\"next\\";
                            this.next = finallyEntry.finallyLoc;
                            return ContinueSentinel;
                        }
                        return this.complete(record);
                    },
                    complete: function complete(record, afterLoc) {
                        if (record.type === \\"throw\\") {
                            throw record.arg;
                        }
                        if (record.type === \\"break\\" || record.type === \\"continue\\") {
                            this.next = record.arg;
                        } else if (record.type === \\"return\\") {
                            this.rval = this.arg = record.arg;
                            this.method = \\"return\\";
                            this.next = \\"end\\";
                        } else if (record.type === \\"normal\\" && afterLoc) {
                            this.next = afterLoc;
                        }
                        return ContinueSentinel;
                    },
                    finish: function finish(finallyLoc) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            if (entry.finallyLoc === finallyLoc) {
                                this.complete(entry.completion, entry.afterLoc);
                                resetTryEntry(entry);
                                return ContinueSentinel;
                            }
                        }
                    },
                    catch: function _catch(tryLoc) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var entry = this.tryEntries[i];
                            if (entry.tryLoc === tryLoc) {
                                var record = entry.completion;
                                if (record.type === \\"throw\\") {
                                    var thrown = record.arg;
                                    resetTryEntry(entry);
                                }
                                return thrown;
                            }
                        }
                        throw new Error(\\"illegal catch attempt\\");
                    },
                    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                        this.delegate = {
                            iterator: values(iterable),
                            resultName: resultName,
                            nextLoc: nextLoc
                        };
                        if (this.method === \\"next\\") {
                            this.arg = undefined;
                        }
                        return ContinueSentinel;
                    }
                };
            }(function() {
                return this;
            }() || Function(\\"return this\\")());
        }).call(this, __webpack_require__(21)(module));
    },
    21: function(module, exports) {
        module.exports = function(module) {
            if (!module.webpackPolyfill) {
                module.deprecate = function() {};
                module.paths = [];
                if (!module.children) module.children = [];
                Object.defineProperty(module, \\"loaded\\", {
                    enumerable: true,
                    get: function() {
                        return module.l;
                    }
                });
                Object.defineProperty(module, \\"id\\", {
                    enumerable: true,
                    get: function() {
                        return module.i;
                    }
                });
                module.webpackPolyfill = 1;
            }
            return module;
        };
    },
    22: function(module, exports, __webpack_require__) {},
    24: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var taro_runtime = __webpack_require__(0);
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) {
                resolve(value);
            } else {
                Promise.resolve(value).then(_next, _throw);
            }
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"next\\", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"throw\\", err);
                    }
                    _next(undefined);
                }));
            };
        }
        var classCallCheck = __webpack_require__(4);
        var createClass = __webpack_require__(5);
        var inherits = __webpack_require__(7);
        var createSuper = __webpack_require__(6);
        var regenerator = __webpack_require__(12);
        var regenerator_default = __webpack_require__.n(regenerator);
        var react = __webpack_require__(1);
        var taro_components = __webpack_require__(3);
        var index = __webpack_require__(22);
        var index_Index = function(_Component) {
            Object(inherits[\\"a\\"])(Index, _Component);
            var _super = Object(createSuper[\\"a\\"])(Index);
            function Index() {
                Object(classCallCheck[\\"a\\"])(this, Index);
                return _super.apply(this, arguments);
            }
            Object(createClass[\\"a\\"])(Index, [ {
                key: \\"componentWillMount\\",
                value: function() {
                    var _componentWillMount = _asyncToGenerator(regenerator_default.a.mark((function _callee() {
                        return regenerator_default.a.wrap((function _callee$(_context) {
                            while (1) {
                                switch (_context.prev = _context.next) {
                                  case 0:
                                    _context.next = 2;
                                    return Promise.resolve(1);

                                  case 2:
                                  case \\"end\\":
                                    return _context.stop();
                                }
                            }
                        }), _callee);
                    })));
                    function componentWillMount() {
                        return _componentWillMount.apply(this, arguments);
                    }
                    return componentWillMount;
                }()
            }, {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {}
            }, {
                key: \\"componentWillUnmount\\",
                value: function componentWillUnmount() {}
            }, {
                key: \\"componentDidShow\\",
                value: function componentDidShow() {}
            }, {
                key: \\"componentDidHide\\",
                value: function componentDidHide() {}
            }, {
                key: \\"render\\",
                value: function render() {
                    return react[\\"default\\"].createElement(taro_components[\\"View\\"], {
                        className: \\"index\\"
                    }, react[\\"default\\"].createElement(taro_components[\\"Text\\"], null, \\"Hello world!\\"), react[\\"default\\"].createElement(taro_components[\\"Input\\"], {
                        placeholder: \\"input\\",
                        value: \\"\\"
                    }), react[\\"default\\"].createElement(taro_components[\\"Textarea\\"], {
                        value: \\"\\"
                    }), react[\\"default\\"].createElement(taro_components[\\"Swiper\\"], null, react[\\"default\\"].createElement(taro_components[\\"SwiperItem\\"], null, react[\\"default\\"].createElement(taro_components[\\"Text\\"], null, \\"Swiper item\\"))), react[\\"default\\"].createElement(taro_components[\\"Video\\"], null), react[\\"default\\"].createElement(taro_components[\\"Canvas\\"], null, react[\\"default\\"].createElement(taro_components[\\"CoverView\\"], null, react[\\"default\\"].createElement(taro_components[\\"CoverImage\\"], null))));
                }
            } ]);
            return Index;
        }(react[\\"Component\\"]);
        var config = {
            navigationBarTitleText: \\"\\\\u9996\\\\u9875\\"
        };
        var inst = Page(Object(taro_runtime[\\"createPageConfig\\"])(index_Index, \\"pages/index/index\\", {
            root: {
                cn: []
            }
        }, config || {}));
    }
}, [ [ 24, 0, 1, 3, 2 ] ] ]);

/** filePath: dist/pages/index/index.json **/
{\\"navigationBarTitleText\\":\\"首页\\",\\"usingComponents\\":{\\"custom-wrapper\\":\\"../../custom-wrapper\\"}}

/** filePath: dist/runtime.js **/


/** filePath: dist/taro.js **/
(my[\\"webpackJsonp\\"] = my[\\"webpackJsonp\\"] || []).push([ [ 1 ], {
    0: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        __webpack_exports__[\\"default\\"] = \\"taro-runtime-mock\\";
    },
    13: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_exports__[\\"a\\"] = \\"taro-react-mock\\";
    },
    3: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        var _unused_webpack_default_export = \\"taro-components-mock\\";
    }
} ]);

/** filePath: dist/utils.sjs **/
export default {
  a: function (l, n) {
    return 'tmpl_' + l + '_' + n
  },
  b: function (a, b) {
    return a === undefined ? b : a
  },
  c: function(i, prefix) {
    var s = i.focus !== undefined ? 'focus' : 'blur'
    return prefix + i.nn + '_' + s
  },
  d: function (i, v) {
    return i === undefined ? v : i
  },
  e: function (n) {
    return 'tmpl_' + n + '_container'
  },
  f: function (l) {
    return l.filter(function (i) {return i.nn === 'swiper-item'})
  }
}

/** filePath: dist/vendors.js **/
(my[\\"webpackJsonp\\"] = my[\\"webpackJsonp\\"] || []).push([ [ 3 ], [ , , , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _classCallCheck;
    }));
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError(\\"Cannot call a class as a function\\");
        }
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createClass;
    }));
    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (\\"value\\" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createSuper;
    }));
    function _getPrototypeOf(o) {
        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
        };
        return _getPrototypeOf(o);
    }
    function _isNativeReflectConstruct() {
        if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === \\"function\\") return true;
        try {
            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    var helpers_typeof = __webpack_require__(11);
    var typeof_default = __webpack_require__.n(helpers_typeof);
    function _assertThisInitialized(self) {
        if (self === void 0) {
            throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
        }
        return self;
    }
    function _possibleConstructorReturn(self, call) {
        if (call && (typeof_default()(call) === \\"object\\" || typeof call === \\"function\\")) {
            return call;
        } else if (call !== void 0) {
            throw new TypeError(\\"Derived constructors may only return object or undefined\\");
        }
        return _assertThisInitialized(self);
    }
    function _createSuper(Derived) {
        var hasNativeReflectConstruct = _isNativeReflectConstruct();
        return function _createSuperInternal() {
            var Super = _getPrototypeOf(Derived), result;
            if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
            } else {
                result = Super.apply(this, arguments);
            }
            return _possibleConstructorReturn(this, result);
        };
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _inherits;
    }));
    function _setPrototypeOf(o, p) {
        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };
        return _setPrototypeOf(o, p);
    }
    function _inherits(subClass, superClass) {
        if (typeof superClass !== \\"function\\" && superClass !== null) {
            throw new TypeError(\\"Super expression must either be null or a function\\");
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true
            }
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
    }
}, , , , function(module, exports) {
    function _typeof(obj) {
        \\"@babel/helpers - typeof\\";
        if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
            module.exports = _typeof = function _typeof(obj) {
                return typeof obj;
            };
            module.exports[\\"default\\"] = module.exports, module.exports.__esModule = true;
        } else {
            module.exports = _typeof = function _typeof(obj) {
                return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
            };
            module.exports[\\"default\\"] = module.exports, module.exports.__esModule = true;
        }
        return _typeof(obj);
    }
    module.exports = _typeof;
    module.exports[\\"default\\"] = module.exports, module.exports.__esModule = true;
} ] ]);
"
`;
