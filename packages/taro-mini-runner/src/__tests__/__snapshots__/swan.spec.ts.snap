// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`swan should build swan app 1`] = `15`;

exports[`swan should build swan app 2`] = `
"
/** filePath: dist/app.css **/


/** filePath: dist/app.js **/
require(\\"./runtime\\");

require(\\"./common\\");

require(\\"./vendors\\");

require(\\"./taro\\");

(swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || []).push([ [ 4 ], {
    11: function(module, exports, __webpack_require__) {},
    19: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var taro_runtime = __webpack_require__(1);
        var classCallCheck = __webpack_require__(3);
        var createClass = __webpack_require__(4);
        var inherits = __webpack_require__(6);
        var createSuper = __webpack_require__(5);
        var react = __webpack_require__(0);
        var app = __webpack_require__(11);
        var app_App = function(_Component) {
            Object(inherits[\\"a\\"])(App, _Component);
            var _super = Object(createSuper[\\"a\\"])(App);
            function App() {
                Object(classCallCheck[\\"a\\"])(this, App);
                return _super.apply(this, arguments);
            }
            Object(createClass[\\"a\\"])(App, [ {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {}
            }, {
                key: \\"componentDidShow\\",
                value: function componentDidShow() {}
            }, {
                key: \\"componentDidHide\\",
                value: function componentDidHide() {}
            }, {
                key: \\"componentDidCatchError\\",
                value: function componentDidCatchError() {}
            }, {
                key: \\"render\\",
                value: function render() {
                    return this.props.children;
                }
            } ]);
            return App;
        }(react[\\"Component\\"]);
        var lib_src_app = app_App;
        var taro_react = __webpack_require__(8);
        var config = {
            pages: [ \\"pages/index/index\\" ],
            window: {
                backgroundTextStyle: \\"light\\",
                navigationBarBackgroundColor: \\"#fff\\",
                navigationBarTitleText: \\"WeChat\\",
                navigationBarTextStyle: \\"black\\"
            }
        };
        taro_runtime[\\"window\\"].__taroAppConfig = config;
        var inst = App(Object(taro_runtime[\\"createReactApp\\"])(lib_src_app, react, taro_react[\\"a\\"], config));
    }
}, [ [ 19, 0, 1, 3, 2 ] ] ]);



/** filePath: dist/app.json **/
{\\"pages\\":[\\"pages/index/index\\"],\\"window\\":{\\"backgroundTextStyle\\":\\"light\\",\\"navigationBarBackgroundColor\\":\\"#fff\\",\\"navigationBarTitleText\\":\\"WeChat\\",\\"navigationBarTextStyle\\":\\"black\\"}}

/** filePath: dist/base.swan **/
<import-sjs module=\\"xs\\" src=\\"./utils.sjs\\" />
<template name=\\"taro_tmpl\\">
  <block s-for=\\"{{root.cn}}\\" s-key=\\"uid\\">
    <template is=\\"tmpl_0_container\\" data=\\"{{{ i:item }}}\\" />
  </block>
</template>

<template name=\\"tmpl_0_view\\">
  <view hover-class=\\"{{ xs.b(i.hoverClass,'none') }}\\" hover-stop-propagation=\\"{{ xs.b(i.hoverStopPropagation,false) }}\\" hover-start-time=\\"{{ xs.b(i.hoverStartTime,50) }}\\" hover-stay-time=\\"{{ xs.b(i.hoverStayTime,400) }}\\" animation=\\"{{ i.animation }}\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongtap=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block s-for=\\"{{i.cn}}\\" s-key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{{ i:item }}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_text\\">
  <text selectable=\\"{{ xs.b(i.selectable,false) }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ xs.b(i.decode,false) }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block s-for=\\"{{i.cn}}\\" s-key=\\"uid\\">
      <block>{{ i.cn[index].v }}</block>
    </block>
  </text>
</template>

<template name=\\"tmpl_0_input\\">
  <template is=\\"{{xs.c(i, 'tmpl_0_')}}\\" data=\\"{{{ i:i }}}\\" />
</template>

<template name=\\"tmpl_0_input_focus\\">
  <input value=\\"{= i.value =}\\" type=\\"{{ xs.b(i.type,'') }}\\" password=\\"{{ xs.b(i.password,false) }}\\" placeholder=\\"{{ i.placeholder }}\\" placeholder-style=\\"{{ i.placeholderStyle }}\\" placeholder-class=\\"{{ xs.b(i.placeholderClass,'input-placeholder') }}\\" disabled=\\"{{ i.disabled }}\\" maxlength=\\"{{ xs.b(i.maxlength,140) }}\\" cursor-spacing=\\"{{ xs.b(i.cursorSpacing,0) }}\\" auto-focus=\\"{{ xs.b(i.autoFocus,false) }}\\" focus=\\"{{ xs.b(i.focus,false) }}\\" confirm-type=\\"{{ xs.b(i.confirmType,'done') }}\\" confirm-hold=\\"{{ xs.b(i.confirmHold,false) }}\\" cursor=\\"{{ xs.b(i.cursor,i.value.length) }}\\" selection-start=\\"{{ xs.b(i.selectionStart,-1) }}\\" selection-end=\\"{{ xs.b(i.selectionEnd,-1) }}\\" adjust-position=\\"{{ xs.b(i.adjustPosition,true) }}\\" hold-keyboard=\\"{{ xs.b(i.holdKeyboard,false) }}\\" bindinput=\\"eh\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindconfirm=\\"eh\\" bindkeyboardheightchange=\\"eh\\" name=\\"{{ i.name }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\" />
</template>

<template name=\\"tmpl_0_input_blur\\">
  <input value=\\"{= i.value =}\\" type=\\"{{ xs.b(i.type,'') }}\\" password=\\"{{ xs.b(i.password,false) }}\\" placeholder=\\"{{ i.placeholder }}\\" placeholder-style=\\"{{ i.placeholderStyle }}\\" placeholder-class=\\"{{ xs.b(i.placeholderClass,'input-placeholder') }}\\" disabled=\\"{{ i.disabled }}\\" maxlength=\\"{{ xs.b(i.maxlength,140) }}\\" cursor-spacing=\\"{{ xs.b(i.cursorSpacing,0) }}\\" auto-focus=\\"{{ xs.b(i.autoFocus,false) }}\\" confirm-type=\\"{{ xs.b(i.confirmType,'done') }}\\" confirm-hold=\\"{{ xs.b(i.confirmHold,false) }}\\" cursor=\\"{{ xs.b(i.cursor,i.value.length) }}\\" selection-start=\\"{{ xs.b(i.selectionStart,-1) }}\\" selection-end=\\"{{ xs.b(i.selectionEnd,-1) }}\\" adjust-position=\\"{{ xs.b(i.adjustPosition,true) }}\\" hold-keyboard=\\"{{ xs.b(i.holdKeyboard,false) }}\\" bindinput=\\"eh\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindconfirm=\\"eh\\" bindkeyboardheightchange=\\"eh\\" name=\\"{{ i.name }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\" />
</template>

<template name=\\"tmpl_0_textarea\\">
  <template is=\\"{{xs.c(i, 'tmpl_0_')}}\\" data=\\"{{{ i:i }}}\\" />
</template>

<template name=\\"tmpl_0_textarea_focus\\">
  <textarea value=\\"{= i.value =}\\" placeholder=\\"{{ i.placeholder }}\\" placeholder-style=\\"{{ i.placeholderStyle }}\\" placeholder-class=\\"{{ xs.b(i.placeholderClass,'textarea-placeholder') }}\\" disabled=\\"{{ i.disabled }}\\" maxlength=\\"{{ xs.b(i.maxlength,140) }}\\" auto-focus=\\"{{ xs.b(i.autoFocus,false) }}\\" focus=\\"{{ xs.b(i.focus,false) }}\\" auto-height=\\"{{ xs.b(i.autoHeight,false) }}\\" fixed=\\"{{ xs.b(i.fixed,false) }}\\" cursor-spacing=\\"{{ xs.b(i.cursorSpacing,0) }}\\" cursor=\\"{{ xs.b(i.cursor,-1) }}\\" show-confirm-bar=\\"{{ xs.b(i.showConfirmBar,true) }}\\" selection-start=\\"{{ xs.b(i.selectionStart,-1) }}\\" selection-end=\\"{{ xs.b(i.selectionEnd,-1) }}\\" adjust-position=\\"{{ xs.b(i.adjustPosition,true) }}\\" hold-keyboard=\\"{{ xs.b(i.holdKeyboard,false) }}\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindlinechange=\\"eh\\" bindinput=\\"eh\\" bindconfirm=\\"eh\\" bindkeyboardheightchange=\\"eh\\" name=\\"{{ i.name }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\" />
</template>

<template name=\\"tmpl_0_textarea_blur\\">
  <textarea value=\\"{= i.value =}\\" placeholder=\\"{{ i.placeholder }}\\" placeholder-style=\\"{{ i.placeholderStyle }}\\" placeholder-class=\\"{{ xs.b(i.placeholderClass,'textarea-placeholder') }}\\" disabled=\\"{{ i.disabled }}\\" maxlength=\\"{{ xs.b(i.maxlength,140) }}\\" auto-focus=\\"{{ xs.b(i.autoFocus,false) }}\\" auto-height=\\"{{ xs.b(i.autoHeight,false) }}\\" fixed=\\"{{ xs.b(i.fixed,false) }}\\" cursor-spacing=\\"{{ xs.b(i.cursorSpacing,0) }}\\" cursor=\\"{{ xs.b(i.cursor,-1) }}\\" show-confirm-bar=\\"{{ xs.b(i.showConfirmBar,true) }}\\" selection-start=\\"{{ xs.b(i.selectionStart,-1) }}\\" selection-end=\\"{{ xs.b(i.selectionEnd,-1) }}\\" adjust-position=\\"{{ xs.b(i.adjustPosition,true) }}\\" hold-keyboard=\\"{{ xs.b(i.holdKeyboard,false) }}\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindlinechange=\\"eh\\" bindinput=\\"eh\\" bindconfirm=\\"eh\\" bindkeyboardheightchange=\\"eh\\" name=\\"{{ i.name }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\" />
</template>

<template name=\\"tmpl_0_scroll-view\\">
  <scroll-view scroll-x=\\"{{ xs.b(i.scrollX,false) }}\\" scroll-y=\\"{{ xs.b(i.scrollY,false) }}\\" upper-threshold=\\"{{ xs.b(i.upperThreshold,50) }}\\" lower-threshold=\\"{{ xs.b(i.lowerThreshold,50) }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ xs.b(i.scrollWithAnimation,false) }}\\" enable-back-to-top=\\"{{ xs.b(i.enableBackToTop,false) }}\\" enable-flex=\\"{{ xs.b(i.enableFlex,false) }}\\" scroll-anchoring=\\"{{ xs.b(i.scrollAnchoring,false) }}\\" refresher-enabled=\\"{{ xs.b(i.refresherEnabled,false) }}\\" refresher-threshold=\\"{{ xs.b(i.refresherThreshold,45) }}\\" refresher-default-style=\\"{{ xs.b(i.refresherDefaultStyle,'black') }}\\" refresher-background=\\"{{ xs.b(i.refresherBackground,'#FFF') }}\\" refresher-triggered=\\"{{ xs.b(i.refresherTriggered,false) }}\\" enhanced=\\"{{ xs.b(i.enhanced,false) }}\\" bounces=\\"{{ xs.b(i.bounces,true) }}\\" show-scrollbar=\\"{{ xs.b(i.showScrollbar,true) }}\\" paging-enabled=\\"{{ xs.b(i.pagingEnabled,false) }}\\" fast-deceleration=\\"{{ xs.b(i.fastDeceleration,false) }}\\" bindrefresherpulling=\\"eh\\" bindrefresherrefresh=\\"eh\\" bindrefresherrestore=\\"eh\\" bindrefresherabort=\\"eh\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" animation=\\"{{ i.animation }}\\" bindtransitionend=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" binddragstart=\\"eh\\" binddragging=\\"eh\\" binddragend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongtap=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block s-for=\\"{{i.cn}}\\" s-key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{{ i:item }}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_0_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ xs.b(i.mode,'scaleToFill') }}\\" webp=\\"{{ xs.b(i.webp,false) }}\\" lazy-load=\\"{{ xs.b(i.lazyLoad,false) }}\\" show-menu-by-longpress=\\"{{ xs.b(i.showMenuByLongpress,false) }}\\" binderror=\\"eh\\" bindload=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongtap=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block s-for=\\"{{i.cn}}\\" s-key=\\"uid\\">
      <template is=\\"{{xs.e(0)}}\\" data=\\"{{{ i:item }}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_0_#text\\" data=\\"{{{ i:i }}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_0_container\\">
  <template is=\\"{{xs.a(0, i.nn)}}\\" data=\\"{{{ i:i }}}\\" />
</template>


/** filePath: dist/common.js **/
(swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || []).push([ [ 2 ], [ function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    __webpack_exports__[\\"default\\"] = \\"react-mock\\";
} ] ]);

/** filePath: dist/comp.js **/
(swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || []).push([ [ 6 ], {
    12: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var _tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        Component(Object(_tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__[\\"createRecursiveComponentConfig\\"])());
    }
}, [ [ 12, 0, 1 ] ] ]);

/** filePath: dist/comp.json **/
{\\"component\\":true,\\"usingComponents\\":{\\"comp\\":\\"./comp\\"}}

/** filePath: dist/pages/index/index.css **/


/** filePath: dist/pages/index/index.js **/
(swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || []).push([ [ 7 ], [ , , , , , , , function(module, exports, __webpack_require__) {
    module.exports = __webpack_require__(13);
}, , , , , , function(module, exports, __webpack_require__) {
    var g = function() {
        return this;
    }() || Function(\\"return this\\")();
    var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\\"regeneratorRuntime\\") >= 0;
    var oldRuntime = hadRuntime && g.regeneratorRuntime;
    g.regeneratorRuntime = undefined;
    module.exports = __webpack_require__(14);
    if (hadRuntime) {
        g.regeneratorRuntime = oldRuntime;
    } else {
        try {
            delete g.regeneratorRuntime;
        } catch (e) {
            g.regeneratorRuntime = undefined;
        }
    }
}, function(module, exports, __webpack_require__) {
    (function(module) {
        var _typeof = __webpack_require__(16);
        !function(global) {
            \\"use strict\\";
            var Op = Object.prototype;
            var hasOwn = Op.hasOwnProperty;
            var undefined;
            var $Symbol = typeof Symbol === \\"function\\" ? Symbol : {};
            var iteratorSymbol = $Symbol.iterator || \\"@@iterator\\";
            var asyncIteratorSymbol = $Symbol.asyncIterator || \\"@@asyncIterator\\";
            var toStringTagSymbol = $Symbol.toStringTag || \\"@@toStringTag\\";
            var inModule = (false ? undefined : _typeof(module)) === \\"object\\";
            var runtime = global.regeneratorRuntime;
            if (runtime) {
                if (inModule) {
                    module.exports = runtime;
                }
                return;
            }
            runtime = global.regeneratorRuntime = inModule ? module.exports : {};
            function wrap(innerFn, outerFn, self, tryLocsList) {
                var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                var generator = Object.create(protoGenerator.prototype);
                var context = new Context(tryLocsList || []);
                generator._invoke = makeInvokeMethod(innerFn, self, context);
                return generator;
            }
            runtime.wrap = wrap;
            function tryCatch(fn, obj, arg) {
                try {
                    return {
                        type: \\"normal\\",
                        arg: fn.call(obj, arg)
                    };
                } catch (err) {
                    return {
                        type: \\"throw\\",
                        arg: err
                    };
                }
            }
            var GenStateSuspendedStart = \\"suspendedStart\\";
            var GenStateSuspendedYield = \\"suspendedYield\\";
            var GenStateExecuting = \\"executing\\";
            var GenStateCompleted = \\"completed\\";
            var ContinueSentinel = {};
            function Generator() {}
            function GeneratorFunction() {}
            function GeneratorFunctionPrototype() {}
            var IteratorPrototype = {};
            IteratorPrototype[iteratorSymbol] = function() {
                return this;
            };
            var getProto = Object.getPrototypeOf;
            var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
            if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
                IteratorPrototype = NativeIteratorPrototype;
            }
            var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
            GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
            GeneratorFunctionPrototype.constructor = GeneratorFunction;
            GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \\"GeneratorFunction\\";
            function defineIteratorMethods(prototype) {
                [ \\"next\\", \\"throw\\", \\"return\\" ].forEach((function(method) {
                    prototype[method] = function(arg) {
                        return this._invoke(method, arg);
                    };
                }));
            }
            runtime.isGeneratorFunction = function(genFun) {
                var ctor = typeof genFun === \\"function\\" && genFun.constructor;
                return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === \\"GeneratorFunction\\" : false;
            };
            runtime.mark = function(genFun) {
                if (Object.setPrototypeOf) {
                    Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                } else {
                    genFun.__proto__ = GeneratorFunctionPrototype;
                    if (!(toStringTagSymbol in genFun)) {
                        genFun[toStringTagSymbol] = \\"GeneratorFunction\\";
                    }
                }
                genFun.prototype = Object.create(Gp);
                return genFun;
            };
            runtime.awrap = function(arg) {
                return {
                    __await: arg
                };
            };
            function AsyncIterator(generator) {
                function invoke(method, arg, resolve, reject) {
                    var record = tryCatch(generator[method], generator, arg);
                    if (record.type === \\"throw\\") {
                        reject(record.arg);
                    } else {
                        var result = record.arg;
                        var value = result.value;
                        if (value && _typeof(value) === \\"object\\" && hasOwn.call(value, \\"__await\\")) {
                            return Promise.resolve(value.__await).then((function(value) {
                                invoke(\\"next\\", value, resolve, reject);
                            }), (function(err) {
                                invoke(\\"throw\\", err, resolve, reject);
                            }));
                        }
                        return Promise.resolve(value).then((function(unwrapped) {
                            result.value = unwrapped;
                            resolve(result);
                        }), reject);
                    }
                }
                var previousPromise;
                function enqueue(method, arg) {
                    function callInvokeWithMethodAndArg() {
                        return new Promise((function(resolve, reject) {
                            invoke(method, arg, resolve, reject);
                        }));
                    }
                    return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
                }
                this._invoke = enqueue;
            }
            defineIteratorMethods(AsyncIterator.prototype);
            AsyncIterator.prototype[asyncIteratorSymbol] = function() {
                return this;
            };
            runtime.AsyncIterator = AsyncIterator;
            runtime.async = function(innerFn, outerFn, self, tryLocsList) {
                var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
                return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then((function(result) {
                    return result.done ? result.value : iter.next();
                }));
            };
            function makeInvokeMethod(innerFn, self, context) {
                var state = GenStateSuspendedStart;
                return function invoke(method, arg) {
                    if (state === GenStateExecuting) {
                        throw new Error(\\"Generator is already running\\");
                    }
                    if (state === GenStateCompleted) {
                        if (method === \\"throw\\") {
                            throw arg;
                        }
                        return doneResult();
                    }
                    context.method = method;
                    context.arg = arg;
                    while (true) {
                        var delegate = context.delegate;
                        if (delegate) {
                            var delegateResult = maybeInvokeDelegate(delegate, context);
                            if (delegateResult) {
                                if (delegateResult === ContinueSentinel) continue;
                                return delegateResult;
                            }
                        }
                        if (context.method === \\"next\\") {
                            context.sent = context._sent = context.arg;
                        } else if (context.method === \\"throw\\") {
                            if (state === GenStateSuspendedStart) {
                                state = GenStateCompleted;
                                throw context.arg;
                            }
                            context.dispatchException(context.arg);
                        } else if (context.method === \\"return\\") {
                            context.abrupt(\\"return\\", context.arg);
                        }
                        state = GenStateExecuting;
                        var record = tryCatch(innerFn, self, context);
                        if (record.type === \\"normal\\") {
                            state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                            if (record.arg === ContinueSentinel) {
                                continue;
                            }
                            return {
                                value: record.arg,
                                done: context.done
                            };
                        } else if (record.type === \\"throw\\") {
                            state = GenStateCompleted;
                            context.method = \\"throw\\";
                            context.arg = record.arg;
                        }
                    }
                };
            }
            function maybeInvokeDelegate(delegate, context) {
                var method = delegate.iterator[context.method];
                if (method === undefined) {
                    context.delegate = null;
                    if (context.method === \\"throw\\") {
                        if (delegate.iterator.return) {
                            context.method = \\"return\\";
                            context.arg = undefined;
                            maybeInvokeDelegate(delegate, context);
                            if (context.method === \\"throw\\") {
                                return ContinueSentinel;
                            }
                        }
                        context.method = \\"throw\\";
                        context.arg = new TypeError(\\"The iterator does not provide a 'throw' method\\");
                    }
                    return ContinueSentinel;
                }
                var record = tryCatch(method, delegate.iterator, context.arg);
                if (record.type === \\"throw\\") {
                    context.method = \\"throw\\";
                    context.arg = record.arg;
                    context.delegate = null;
                    return ContinueSentinel;
                }
                var info = record.arg;
                if (!info) {
                    context.method = \\"throw\\";
                    context.arg = new TypeError(\\"iterator result is not an object\\");
                    context.delegate = null;
                    return ContinueSentinel;
                }
                if (info.done) {
                    context[delegate.resultName] = info.value;
                    context.next = delegate.nextLoc;
                    if (context.method !== \\"return\\") {
                        context.method = \\"next\\";
                        context.arg = undefined;
                    }
                } else {
                    return info;
                }
                context.delegate = null;
                return ContinueSentinel;
            }
            defineIteratorMethods(Gp);
            Gp[toStringTagSymbol] = \\"Generator\\";
            Gp[iteratorSymbol] = function() {
                return this;
            };
            Gp.toString = function() {
                return \\"[object Generator]\\";
            };
            function pushTryEntry(locs) {
                var entry = {
                    tryLoc: locs[0]
                };
                if (1 in locs) {
                    entry.catchLoc = locs[1];
                }
                if (2 in locs) {
                    entry.finallyLoc = locs[2];
                    entry.afterLoc = locs[3];
                }
                this.tryEntries.push(entry);
            }
            function resetTryEntry(entry) {
                var record = entry.completion || {};
                record.type = \\"normal\\";
                delete record.arg;
                entry.completion = record;
            }
            function Context(tryLocsList) {
                this.tryEntries = [ {
                    tryLoc: \\"root\\"
                } ];
                tryLocsList.forEach(pushTryEntry, this);
                this.reset(true);
            }
            runtime.keys = function(object) {
                var keys = [];
                for (var key in object) {
                    keys.push(key);
                }
                keys.reverse();
                return function next() {
                    while (keys.length) {
                        var key = keys.pop();
                        if (key in object) {
                            next.value = key;
                            next.done = false;
                            return next;
                        }
                    }
                    next.done = true;
                    return next;
                };
            };
            function values(iterable) {
                if (iterable) {
                    var iteratorMethod = iterable[iteratorSymbol];
                    if (iteratorMethod) {
                        return iteratorMethod.call(iterable);
                    }
                    if (typeof iterable.next === \\"function\\") {
                        return iterable;
                    }
                    if (!isNaN(iterable.length)) {
                        var i = -1, next = function next() {
                            while (++i < iterable.length) {
                                if (hasOwn.call(iterable, i)) {
                                    next.value = iterable[i];
                                    next.done = false;
                                    return next;
                                }
                            }
                            next.value = undefined;
                            next.done = true;
                            return next;
                        };
                        return next.next = next;
                    }
                }
                return {
                    next: doneResult
                };
            }
            runtime.values = values;
            function doneResult() {
                return {
                    value: undefined,
                    done: true
                };
            }
            Context.prototype = {
                constructor: Context,
                reset: function reset(skipTempReset) {
                    this.prev = 0;
                    this.next = 0;
                    this.sent = this._sent = undefined;
                    this.done = false;
                    this.delegate = null;
                    this.method = \\"next\\";
                    this.arg = undefined;
                    this.tryEntries.forEach(resetTryEntry);
                    if (!skipTempReset) {
                        for (var name in this) {
                            if (name.charAt(0) === \\"t\\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                                this[name] = undefined;
                            }
                        }
                    }
                },
                stop: function stop() {
                    this.done = true;
                    var rootEntry = this.tryEntries[0];
                    var rootRecord = rootEntry.completion;
                    if (rootRecord.type === \\"throw\\") {
                        throw rootRecord.arg;
                    }
                    return this.rval;
                },
                dispatchException: function dispatchException(exception) {
                    if (this.done) {
                        throw exception;
                    }
                    var context = this;
                    function handle(loc, caught) {
                        record.type = \\"throw\\";
                        record.arg = exception;
                        context.next = loc;
                        if (caught) {
                            context.method = \\"next\\";
                            context.arg = undefined;
                        }
                        return !!caught;
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        var record = entry.completion;
                        if (entry.tryLoc === \\"root\\") {
                            return handle(\\"end\\");
                        }
                        if (entry.tryLoc <= this.prev) {
                            var hasCatch = hasOwn.call(entry, \\"catchLoc\\");
                            var hasFinally = hasOwn.call(entry, \\"finallyLoc\\");
                            if (hasCatch && hasFinally) {
                                if (this.prev < entry.catchLoc) {
                                    return handle(entry.catchLoc, true);
                                } else if (this.prev < entry.finallyLoc) {
                                    return handle(entry.finallyLoc);
                                }
                            } else if (hasCatch) {
                                if (this.prev < entry.catchLoc) {
                                    return handle(entry.catchLoc, true);
                                }
                            } else if (hasFinally) {
                                if (this.prev < entry.finallyLoc) {
                                    return handle(entry.finallyLoc);
                                }
                            } else {
                                throw new Error(\\"try statement without catch or finally\\");
                            }
                        }
                    }
                },
                abrupt: function abrupt(type, arg) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \\"finallyLoc\\") && this.prev < entry.finallyLoc) {
                            var finallyEntry = entry;
                            break;
                        }
                    }
                    if (finallyEntry && (type === \\"break\\" || type === \\"continue\\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                        finallyEntry = null;
                    }
                    var record = finallyEntry ? finallyEntry.completion : {};
                    record.type = type;
                    record.arg = arg;
                    if (finallyEntry) {
                        this.method = \\"next\\";
                        this.next = finallyEntry.finallyLoc;
                        return ContinueSentinel;
                    }
                    return this.complete(record);
                },
                complete: function complete(record, afterLoc) {
                    if (record.type === \\"throw\\") {
                        throw record.arg;
                    }
                    if (record.type === \\"break\\" || record.type === \\"continue\\") {
                        this.next = record.arg;
                    } else if (record.type === \\"return\\") {
                        this.rval = this.arg = record.arg;
                        this.method = \\"return\\";
                        this.next = \\"end\\";
                    } else if (record.type === \\"normal\\" && afterLoc) {
                        this.next = afterLoc;
                    }
                    return ContinueSentinel;
                },
                finish: function finish(finallyLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.finallyLoc === finallyLoc) {
                            this.complete(entry.completion, entry.afterLoc);
                            resetTryEntry(entry);
                            return ContinueSentinel;
                        }
                    }
                },
                catch: function _catch(tryLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc === tryLoc) {
                            var record = entry.completion;
                            if (record.type === \\"throw\\") {
                                var thrown = record.arg;
                                resetTryEntry(entry);
                            }
                            return thrown;
                        }
                    }
                    throw new Error(\\"illegal catch attempt\\");
                },
                delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                    this.delegate = {
                        iterator: values(iterable),
                        resultName: resultName,
                        nextLoc: nextLoc
                    };
                    if (this.method === \\"next\\") {
                        this.arg = undefined;
                    }
                    return ContinueSentinel;
                }
            };
        }(function() {
            return this;
        }() || Function(\\"return this\\")());
    }).call(this, __webpack_require__(15)(module));
}, function(module, exports) {
    module.exports = function(module) {
        if (!module.webpackPolyfill) {
            module.deprecate = function() {};
            module.paths = [];
            if (!module.children) module.children = [];
            Object.defineProperty(module, \\"loaded\\", {
                enumerable: true,
                get: function get() {
                    return module.l;
                }
            });
            Object.defineProperty(module, \\"id\\", {
                enumerable: true,
                get: function get() {
                    return module.i;
                }
            });
            module.webpackPolyfill = 1;
        }
        return module;
    };
}, function(module, exports) {
    function _typeof(obj) {
        \\"@babel/helpers - typeof\\";
        if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
            module.exports = _typeof = function _typeof(obj) {
                return typeof obj;
            };
        } else {
            module.exports = _typeof = function _typeof(obj) {
                return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
            };
        }
        return _typeof(obj);
    }
    module.exports = _typeof;
}, function(module, exports, __webpack_require__) {}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    var taro_runtime = __webpack_require__(1);
    var regenerator = __webpack_require__(7);
    var regenerator_default = __webpack_require__.n(regenerator);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
        try {
            var info = gen[key](arg);
            var value = info.value;
        } catch (error) {
            reject(error);
            return;
        }
        if (info.done) {
            resolve(value);
        } else {
            Promise.resolve(value).then(_next, _throw);
        }
    }
    function _asyncToGenerator(fn) {
        return function() {
            var self = this, args = arguments;
            return new Promise((function(resolve, reject) {
                var gen = fn.apply(self, args);
                function _next(value) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"next\\", value);
                }
                function _throw(err) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"throw\\", err);
                }
                _next(undefined);
            }));
        };
    }
    var classCallCheck = __webpack_require__(3);
    var createClass = __webpack_require__(4);
    var inherits = __webpack_require__(6);
    var createSuper = __webpack_require__(5);
    var react = __webpack_require__(0);
    var taro_components = __webpack_require__(2);
    var index = __webpack_require__(17);
    var index_Index = function(_Component) {
        Object(inherits[\\"a\\"])(Index, _Component);
        var _super = Object(createSuper[\\"a\\"])(Index);
        function Index() {
            Object(classCallCheck[\\"a\\"])(this, Index);
            return _super.apply(this, arguments);
        }
        Object(createClass[\\"a\\"])(Index, [ {
            key: \\"componentWillMount\\",
            value: function() {
                var _componentWillMount = _asyncToGenerator(regenerator_default.a.mark((function _callee() {
                    return regenerator_default.a.wrap((function _callee$(_context) {
                        while (1) {
                            switch (_context.prev = _context.next) {
                              case 0:
                                _context.next = 2;
                                return Promise.resolve(1);

                              case 2:
                              case \\"end\\":
                                return _context.stop();
                            }
                        }
                    }), _callee);
                })));
                function componentWillMount() {
                    return _componentWillMount.apply(this, arguments);
                }
                return componentWillMount;
            }()
        }, {
            key: \\"componentDidMount\\",
            value: function componentDidMount() {}
        }, {
            key: \\"componentWillUnmount\\",
            value: function componentWillUnmount() {}
        }, {
            key: \\"componentDidShow\\",
            value: function componentDidShow() {}
        }, {
            key: \\"componentDidHide\\",
            value: function componentDidHide() {}
        }, {
            key: \\"render\\",
            value: function render() {
                return react[\\"default\\"].createElement(taro_components[\\"View\\"], {
                    className: \\"index\\"
                }, react[\\"default\\"].createElement(taro_components[\\"Text\\"], null, \\"Hello world!\\"), react[\\"default\\"].createElement(taro_components[\\"Input\\"], {
                    placeholder: \\"input\\",
                    value: \\"\\"
                }), react[\\"default\\"].createElement(taro_components[\\"Textarea\\"], {
                    value: \\"\\"
                }));
            }
        } ]);
        return Index;
    }(react[\\"Component\\"]);
    var config = {
        navigationBarTitleText: \\"\\\\u9996\\\\u9875\\"
    };
    var inst = Page(Object(taro_runtime[\\"createPageConfig\\"])(index_Index, \\"pages/index/index\\", {}, config || {}));
} ], [ [ 18, 0, 1, 3, 2 ] ] ]);

/** filePath: dist/pages/index/index.json **/
{\\"navigationBarTitleText\\":\\"首页\\"}

/** filePath: dist/pages/index/index.swan **/
<import src=\\"../../base.swan\\"/>
  <template is=\\"taro_tmpl\\" data=\\"{{{ root:root }}}\\" />

/** filePath: dist/runtime.js **/
(function(modules) {
    function webpackJsonpCallback(data) {
        var chunkIds = data[0];
        var moreModules = data[1];
        var executeModules = data[2];
        var moduleId, chunkId, i = 0, resolves = [];
        for (;i < chunkIds.length; i++) {
            chunkId = chunkIds[i];
            if (Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
                resolves.push(installedChunks[chunkId][0]);
            }
            installedChunks[chunkId] = 0;
        }
        for (moduleId in moreModules) {
            if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                modules[moduleId] = moreModules[moduleId];
            }
        }
        if (parentJsonpFunction) parentJsonpFunction(data);
        while (resolves.length) {
            resolves.shift()();
        }
        deferredModules.push.apply(deferredModules, executeModules || []);
        return checkDeferredModules();
    }
    function checkDeferredModules() {
        var result;
        for (var i = 0; i < deferredModules.length; i++) {
            var deferredModule = deferredModules[i];
            var fulfilled = true;
            for (var j = 1; j < deferredModule.length; j++) {
                var depId = deferredModule[j];
                if (installedChunks[depId] !== 0) fulfilled = false;
            }
            if (fulfilled) {
                deferredModules.splice(i--, 1);
                result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
            }
        }
        return result;
    }
    var installedModules = {};
    var installedChunks = {
        0: 0
    };
    var deferredModules = [];
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports;
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports;
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                enumerable: true,
                get: getter
            });
        }
    };
    __webpack_require__.r = function(exports) {
        if (typeof Symbol !== \\"undefined\\" && Symbol.toStringTag) {
            Object.defineProperty(exports, Symbol.toStringTag, {
                value: \\"Module\\"
            });
        }
        Object.defineProperty(exports, \\"__esModule\\", {
            value: true
        });
    };
    __webpack_require__.t = function(value, mode) {
        if (mode & 1) value = __webpack_require__(value);
        if (mode & 8) return value;
        if (mode & 4 && typeof value === \\"object\\" && value && value.__esModule) return value;
        var ns = Object.create(null);
        __webpack_require__.r(ns);
        Object.defineProperty(ns, \\"default\\", {
            enumerable: true,
            value: value
        });
        if (mode & 2 && typeof value != \\"string\\") for (var key in value) __webpack_require__.d(ns, key, function(key) {
            return value[key];
        }.bind(null, key));
        return ns;
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module[\\"default\\"];
        } : function getModuleExports() {
            return module;
        };
        __webpack_require__.d(getter, \\"a\\", getter);
        return getter;
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    __webpack_require__.p = \\"/\\";
    var jsonpArray = swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || [];
    var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
    jsonpArray.push = webpackJsonpCallback;
    jsonpArray = jsonpArray.slice();
    for (var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
    var parentJsonpFunction = oldJsonpFunction;
    checkDeferredModules();
})([]);

/** filePath: dist/taro.js **/
(swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || []).push([ [ 1 ], {
    1: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        var _unused_webpack_default_export = \\"taro-runtime-mock\\";
    },
    2: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        var _unused_webpack_default_export = \\"taro-components-mock\\";
    },
    8: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_exports__[\\"a\\"] = \\"taro-react-mock\\";
    }
} ]);

/** filePath: dist/utils.sjs **/
module.exports = {
  a: function (l, n) {
    return 'tmpl_' + l + '_' + n
  },
  b: function (a, b) {
    return a === undefined ? b : a
  },
  c: function(i, prefix) {
    var s = i.focus !== undefined ? 'focus' : 'blur'
    return prefix + i.nn + '_' + s
  },
  d: function (i, v) {
    return i === undefined ? v : i
  },
  e: function (n) {
    return 'tmpl_' + n + '_container'
  },
  
}

/** filePath: dist/vendors.js **/
(swan[\\"webpackJsonp\\"] = swan[\\"webpackJsonp\\"] || []).push([ [ 3 ], [ , , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _classCallCheck;
    }));
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError(\\"Cannot call a class as a function\\");
        }
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createClass;
    }));
    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (\\"value\\" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createSuper;
    }));
    function _getPrototypeOf(o) {
        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
        };
        return _getPrototypeOf(o);
    }
    function _isNativeReflectConstruct() {
        if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === \\"function\\") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function _typeof(obj) {
        \\"@babel/helpers - typeof\\";
        if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
            _typeof = function _typeof(obj) {
                return typeof obj;
            };
        } else {
            _typeof = function _typeof(obj) {
                return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
            };
        }
        return _typeof(obj);
    }
    function _assertThisInitialized(self) {
        if (self === void 0) {
            throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
        }
        return self;
    }
    function _possibleConstructorReturn(self, call) {
        if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
            return call;
        }
        return _assertThisInitialized(self);
    }
    function _createSuper(Derived) {
        var hasNativeReflectConstruct = _isNativeReflectConstruct();
        return function _createSuperInternal() {
            var Super = _getPrototypeOf(Derived), result;
            if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
            } else {
                result = Super.apply(this, arguments);
            }
            return _possibleConstructorReturn(this, result);
        };
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _inherits;
    }));
    function _setPrototypeOf(o, p) {
        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };
        return _setPrototypeOf(o, p);
    }
    function _inherits(subClass, superClass) {
        if (typeof superClass !== \\"function\\" && superClass !== null) {
            throw new TypeError(\\"Super expression must either be null or a function\\");
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true
            }
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
    }
} ] ]);
"
`;
