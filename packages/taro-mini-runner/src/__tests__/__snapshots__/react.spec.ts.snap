// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react should build react app 1`] = `19`;

exports[`react should build react app 2`] = `
"
/** filePath: dist/app.js **/
require(\\"./runtime\\");

require(\\"./common\\");

require(\\"./vendors\\");

require(\\"./taro\\");

(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 4 ], {
    12: function(module, exports, __webpack_require__) {},
    19: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        function _arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) {
                arr2[i] = arr[i];
            }
            return arr2;
        }
        function _arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return _arrayLikeToArray(arr);
        }
        function _iterableToArray(iter) {
            if (typeof Symbol !== \\"undefined\\" && iter[Symbol.iterator] != null || iter[\\"@@iterator\\"] != null) return Array.from(iter);
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === \\"string\\") return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if (n === \\"Object\\" && o.constructor) n = o.constructor.name;
            if (n === \\"Map\\" || n === \\"Set\\") return Array.from(o);
            if (n === \\"Arguments\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _nonIterableSpread() {
            throw new TypeError(\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\");
        }
        function _toConsumableArray(arr) {
            return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
        }
        function _typeof(obj) {
            \\"@babel/helpers - typeof\\";
            if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
                _typeof = function _typeof(obj) {
                    return typeof obj;
                };
            } else {
                _typeof = function _typeof(obj) {
                    return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
                };
            }
            return _typeof(obj);
        }
        function isString(o) {
            return typeof o === \\"string\\";
        }
        function isUndefined(o) {
            return typeof o === \\"undefined\\";
        }
        function isNull(o) {
            return o === null;
        }
        function isObject(o) {
            return o !== null && _typeof(o) === \\"object\\";
        }
        function isBoolean(o) {
            return o === true || o === false;
        }
        function isFunction(o) {
            return typeof o === \\"function\\";
        }
        function isNumber(o) {
            return typeof o === \\"number\\";
        }
        function isBooleanStringLiteral(o) {
            return o === \\"true\\" || o === \\"false\\";
        }
        var isArray = Array.isArray;
        var styles = {
            style: \\"i.\\".concat(\\"st\\"),
            class: \\"i.\\".concat(\\"cl\\")
        };
        var events = {
            bindtap: \\"eh\\"
        };
        var touchEvents = {
            bindTouchStart: \\"\\",
            bindTouchMove: \\"\\",
            bindTouchEnd: \\"\\",
            bindTouchCancel: \\"\\",
            bindLongTap: \\"\\"
        };
        var animationEvents = {
            bindAnimationStart: \\"\\",
            bindAnimationIteration: \\"\\",
            bindAnimationEnd: \\"\\",
            bindTransitionEnd: \\"\\"
        };
        function singleQuote(s) {
            return \\"'\\".concat(s, \\"'\\");
        }
        var View = Object.assign(Object.assign({
            \\"hover-class\\": singleQuote(\\"none\\"),
            \\"hover-stop-propagation\\": \\"false\\",
            \\"hover-start-time\\": \\"50\\",
            \\"hover-stay-time\\": \\"400\\",
            animation: \\"\\"
        }, touchEvents), animationEvents);
        var Icon = {
            type: \\"\\",
            size: \\"23\\",
            color: \\"\\"
        };
        var MapComp = Object.assign({
            longitude: \\"\\",
            latitude: \\"\\",
            scale: \\"16\\",
            markers: \\"[]\\",
            covers: \\"\\",
            polyline: \\"[]\\",
            circles: \\"[]\\",
            controls: \\"[]\\",
            \\"include-points\\": \\"[]\\",
            \\"show-location\\": \\"\\",
            \\"layer-style\\": \\"1\\",
            bindMarkerTap: \\"\\",
            bindControlTap: \\"\\",
            bindCalloutTap: \\"\\",
            bindUpdated: \\"\\"
        }, touchEvents);
        var Progress = {
            percent: \\"\\",
            \\"stroke-width\\": \\"6\\",
            color: singleQuote(\\"#09BB07\\"),
            activeColor: singleQuote(\\"#09BB07\\"),
            backgroundColor: singleQuote(\\"#EBEBEB\\"),
            active: \\"false\\",
            \\"active-mode\\": singleQuote(\\"backwards\\"),
            \\"show-info\\": \\"false\\"
        };
        var RichText = {
            nodes: \\"[]\\"
        };
        var Text = {
            selectable: \\"false\\",
            space: \\"\\",
            decode: \\"false\\"
        };
        var Button = {
            size: singleQuote(\\"default\\"),
            type: \\"\\",
            plain: \\"false\\",
            disabled: \\"\\",
            loading: \\"false\\",
            \\"form-type\\": \\"\\",
            \\"open-type\\": \\"\\",
            \\"hover-class\\": singleQuote(\\"button-hover\\"),
            \\"hover-stop-propagation\\": \\"false\\",
            \\"hover-start-time\\": \\"20\\",
            \\"hover-stay-time\\": \\"70\\",
            name: \\"\\"
        };
        var Checkbox = {
            value: \\"\\",
            disabled: \\"\\",
            checked: \\"false\\",
            color: singleQuote(\\"#09BB07\\"),
            name: \\"\\"
        };
        var CheckboxGroup = {
            bindChange: \\"\\",
            name: \\"\\"
        };
        var Form = {
            \\"report-submit\\": \\"false\\",
            bindSubmit: \\"\\",
            bindReset: \\"\\",
            name: \\"\\"
        };
        var Input = {
            value: \\"\\",
            type: singleQuote(\\"\\"),
            password: \\"false\\",
            placeholder: \\"\\",
            \\"placeholder-style\\": \\"\\",
            \\"placeholder-class\\": singleQuote(\\"input-placeholder\\"),
            disabled: \\"\\",
            maxlength: \\"140\\",
            \\"cursor-spacing\\": \\"0\\",
            focus: \\"false\\",
            \\"confirm-type\\": singleQuote(\\"done\\"),
            \\"confirm-hold\\": \\"false\\",
            cursor: \\"i.value.length\\",
            \\"selection-start\\": \\"-1\\",
            \\"selection-end\\": \\"-1\\",
            bindInput: \\"\\",
            bindFocus: \\"\\",
            bindBlur: \\"\\",
            bindConfirm: \\"\\",
            name: \\"\\"
        };
        var Label = {
            for: \\"\\",
            name: \\"\\"
        };
        var Picker = {
            mode: singleQuote(\\"selector\\"),
            disabled: \\"\\",
            range: \\"\\",
            \\"range-key\\": \\"\\",
            value: \\"\\",
            start: \\"\\",
            end: \\"\\",
            fields: singleQuote(\\"day\\"),
            \\"custom-item\\": \\"\\",
            name: \\"\\",
            bindCancel: \\"\\",
            bindChange: \\"\\",
            bindColumnChange: \\"\\"
        };
        var PickerView = {
            value: \\"\\",
            \\"indicator-style\\": \\"\\",
            \\"indicator-class\\": \\"\\",
            \\"mask-style\\": \\"\\",
            \\"mask-class\\": \\"\\",
            bindChange: \\"\\",
            name: \\"\\"
        };
        var PickerViewColumn = {
            name: \\"\\"
        };
        var Radio = {
            value: \\"\\",
            checked: \\"false\\",
            disabled: \\"\\",
            color: singleQuote(\\"#09BB07\\"),
            name: \\"\\"
        };
        var RadioGroup = {
            bindChange: \\"\\",
            name: \\"\\"
        };
        var Slider = {
            min: \\"0\\",
            max: \\"100\\",
            step: \\"1\\",
            disabled: \\"\\",
            value: \\"0\\",
            activeColor: singleQuote(\\"#1aad19\\"),
            backgroundColor: singleQuote(\\"#e9e9e9\\"),
            \\"block-size\\": \\"28\\",
            \\"block-color\\": singleQuote(\\"#ffffff\\"),
            \\"show-value\\": \\"false\\",
            bindChange: \\"\\",
            bindChanging: \\"\\",
            name: \\"\\"
        };
        var Switch = {
            checked: \\"false\\",
            disabled: \\"\\",
            type: singleQuote(\\"switch\\"),
            color: singleQuote(\\"#04BE02\\"),
            bindChange: \\"\\",
            name: \\"\\"
        };
        var Textarea = {
            value: \\"\\",
            placeholder: \\"\\",
            \\"placeholder-style\\": \\"\\",
            \\"placeholder-class\\": singleQuote(\\"textarea-placeholder\\"),
            disabled: \\"\\",
            maxlength: \\"140\\",
            \\"auto-focus\\": \\"false\\",
            focus: \\"false\\",
            \\"auto-height\\": \\"false\\",
            fixed: \\"false\\",
            \\"cursor-spacing\\": \\"0\\",
            cursor: \\"-1\\",
            \\"selection-start\\": \\"-1\\",
            \\"selection-end\\": \\"-1\\",
            bindFocus: \\"\\",
            bindBlur: \\"\\",
            bindLineChange: \\"\\",
            bindInput: \\"\\",
            bindConfirm: \\"\\",
            name: \\"\\"
        };
        var CoverImage = {
            src: \\"\\",
            bindLoad: \\"eh\\",
            bindError: \\"eh\\"
        };
        var CoverView = Object.assign({
            \\"scroll-top\\": \\"false\\"
        }, touchEvents);
        var MovableArea = {
            \\"scale-area\\": \\"false\\"
        };
        var MovableView = Object.assign(Object.assign({
            direction: \\"none\\",
            inertia: \\"false\\",
            \\"out-of-bounds\\": \\"false\\",
            x: \\"\\",
            y: \\"\\",
            damping: \\"20\\",
            friction: \\"2\\",
            disabled: \\"\\",
            scale: \\"false\\",
            \\"scale-min\\": \\"0.5\\",
            \\"scale-max\\": \\"10\\",
            \\"scale-value\\": \\"1\\",
            animation: \\"true\\",
            bindChange: \\"\\",
            bindScale: \\"\\",
            bindHTouchMove: \\"\\",
            bindVTouchMove: \\"\\",
            width: singleQuote(\\"10px\\"),
            height: singleQuote(\\"10px\\")
        }, touchEvents), animationEvents);
        var ScrollView = Object.assign(Object.assign({
            \\"scroll-x\\": \\"false\\",
            \\"scroll-y\\": \\"false\\",
            \\"upper-threshold\\": \\"50\\",
            \\"lower-threshold\\": \\"50\\",
            \\"scroll-top\\": \\"\\",
            \\"scroll-left\\": \\"\\",
            \\"scroll-into-view\\": \\"\\",
            \\"scroll-with-animation\\": \\"false\\",
            \\"enable-back-to-top\\": \\"false\\",
            bindScrollToUpper: \\"\\",
            bindScrollToLower: \\"\\",
            bindScroll: \\"\\"
        }, touchEvents), animationEvents);
        var Swiper = Object.assign({
            \\"indicator-dots\\": \\"false\\",
            \\"indicator-color\\": singleQuote(\\"rgba(0, 0, 0, .3)\\"),
            \\"indicator-active-color\\": singleQuote(\\"#000000\\"),
            autoplay: \\"false\\",
            current: \\"0\\",
            interval: \\"5000\\",
            duration: \\"500\\",
            circular: \\"false\\",
            vertical: \\"false\\",
            \\"previous-margin\\": \\"'0px'\\",
            \\"next-margin\\": \\"'0px'\\",
            \\"display-multiple-items\\": \\"1\\",
            bindChange: \\"\\",
            bindTransition: \\"\\",
            bindAnimationFinish: \\"\\"
        }, touchEvents);
        var SwiperItem = {
            \\"item-id\\": \\"\\"
        };
        var Navigator = {
            url: \\"\\",
            \\"open-type\\": singleQuote(\\"navigate\\"),
            delta: \\"1\\",
            \\"hover-class\\": singleQuote(\\"navigator-hover\\"),
            \\"hover-stop-propagation\\": \\"false\\",
            \\"hover-start-time\\": \\"50\\",
            \\"hover-stay-time\\": \\"600\\",
            bindSuccess: \\"\\",
            bindFail: \\"\\",
            bindComplete: \\"\\"
        };
        var Audio = {
            id: \\"\\",
            src: \\"\\",
            loop: \\"false\\",
            controls: \\"false\\",
            poster: \\"\\",
            name: \\"\\",
            author: \\"\\",
            bindError: \\"\\",
            bindPlay: \\"\\",
            bindPause: \\"\\",
            bindTimeUpdate: \\"\\",
            bindEnded: \\"\\"
        };
        var Camera = {
            \\"device-position\\": singleQuote(\\"back\\"),
            flash: singleQuote(\\"auto\\"),
            bindStop: \\"\\",
            bindError: \\"\\"
        };
        var Image = Object.assign({
            src: \\"\\",
            mode: singleQuote(\\"scaleToFill\\"),
            \\"lazy-load\\": \\"false\\",
            bindError: \\"\\",
            bindLoad: \\"\\"
        }, touchEvents);
        var LivePlayer = {
            src: \\"\\",
            autoplay: \\"false\\",
            muted: \\"false\\",
            orientation: singleQuote(\\"vertical\\"),
            \\"object-fit\\": singleQuote(\\"contain\\"),
            \\"background-mute\\": \\"false\\",
            \\"min-cache\\": \\"1\\",
            \\"max-cache\\": \\"3\\",
            animation: \\"\\",
            bindStateChange: \\"\\",
            bindFullScreenChange: \\"\\",
            bindNetStatus: \\"\\"
        };
        var Video = {
            src: \\"\\",
            duration: \\"\\",
            controls: \\"true\\",
            \\"danmu-list\\": \\"\\",
            \\"danmu-btn\\": \\"\\",
            \\"enable-danmu\\": \\"\\",
            autoplay: \\"false\\",
            loop: \\"false\\",
            muted: \\"false\\",
            \\"initial-time\\": \\"0\\",
            \\"page-gesture\\": \\"false\\",
            direction: \\"\\",
            \\"show-progress\\": \\"true\\",
            \\"show-fullscreen-btn\\": \\"true\\",
            \\"show-play-btn\\": \\"true\\",
            \\"show-center-play-btn\\": \\"true\\",
            \\"enable-progress-gesture\\": \\"true\\",
            \\"object-fit\\": singleQuote(\\"contain\\"),
            poster: \\"\\",
            \\"show-mute-btn\\": \\"false\\",
            animation: \\"\\",
            bindPlay: \\"\\",
            bindPause: \\"\\",
            bindEnded: \\"\\",
            bindTimeUpdate: \\"\\",
            bindFullScreenChange: \\"\\",
            bindWaiting: \\"\\",
            bindError: \\"\\"
        };
        var Canvas = Object.assign({
            \\"canvas-id\\": \\"\\",
            \\"disable-scroll\\": \\"false\\",
            bindError: \\"\\"
        }, touchEvents);
        var Ad = {
            \\"unit-id\\": \\"\\",
            \\"ad-intervals\\": \\"\\",
            bindLoad: \\"\\",
            bindError: \\"\\",
            bindClose: \\"\\"
        };
        var WebView = {
            src: \\"\\",
            bindMessage: \\"\\",
            bindLoad: \\"\\",
            bindError: \\"\\"
        };
        var Block = {};
        var SlotView = {
            name: \\"\\"
        };
        var Slot = {
            name: \\"\\"
        };
        var internalComponents = {
            View: View,
            Icon: Icon,
            Progress: Progress,
            RichText: RichText,
            Text: Text,
            Button: Button,
            Checkbox: Checkbox,
            CheckboxGroup: CheckboxGroup,
            Form: Form,
            Input: Input,
            Label: Label,
            Picker: Picker,
            PickerView: PickerView,
            PickerViewColumn: PickerViewColumn,
            Radio: Radio,
            RadioGroup: RadioGroup,
            Slider: Slider,
            Switch: Switch,
            CoverImage: CoverImage,
            Textarea: Textarea,
            CoverView: CoverView,
            MovableArea: MovableArea,
            MovableView: MovableView,
            ScrollView: ScrollView,
            Swiper: Swiper,
            SwiperItem: SwiperItem,
            Navigator: Navigator,
            Audio: Audio,
            Camera: Camera,
            Image: Image,
            LivePlayer: LivePlayer,
            Video: Video,
            Canvas: Canvas,
            Ad: Ad,
            WebView: WebView,
            Block: Block,
            Map: MapComp,
            Slot: Slot,
            SlotView: SlotView
        };
        var controlledComponent = new Set([ \\"input\\", \\"checkbox\\", \\"picker\\", \\"picker-view\\", \\"radio\\", \\"slider\\", \\"switch\\", \\"textarea\\" ]);
        var focusComponents = new Set([ \\"input\\", \\"textarea\\" ]);
        var voidElements = new Set([ \\"progress\\", \\"icon\\", \\"rich-text\\", \\"input\\", \\"textarea\\", \\"slider\\", \\"switch\\", \\"audio\\", \\"ad\\", \\"official-account\\", \\"open-data\\", \\"navigation-bar\\" ]);
        var nestElements = new Map([ [ \\"view\\", -1 ], [ \\"catch-view\\", -1 ], [ \\"cover-view\\", -1 ], [ \\"static-view\\", -1 ], [ \\"pure-view\\", -1 ], [ \\"block\\", -1 ], [ \\"text\\", -1 ], [ \\"static-text\\", 6 ], [ \\"slot\\", 8 ], [ \\"slot-view\\", 8 ], [ \\"label\\", 6 ], [ \\"form\\", 4 ], [ \\"scroll-view\\", 4 ], [ \\"swiper\\", 4 ], [ \\"swiper-item\\", 4 ] ]);
        var EMPTY_OBJ = {};
        var EMPTY_ARR = [];
        var noop = function noop() {};
        var defaultReconciler = Object.create(null);
        var box = function box(v) {
            return {
                v: v
            };
        };
        var unbox = function unbox(b) {
            return b.v;
        };
        function toDashed(s) {
            return s.replace(/([a-z0-9])([A-Z])/g, \\"$1-$2\\").toLowerCase();
        }
        function toCamelCase(s) {
            var camel = \\"\\";
            var nextCap = false;
            for (var i = 0; i < s.length; i++) {
                if (s[i] !== \\"-\\") {
                    camel += nextCap ? s[i].toUpperCase() : s[i];
                    nextCap = false;
                } else {
                    nextCap = true;
                }
            }
            return camel;
        }
        var toKebabCase = function toKebabCase(string) {
            return string.replace(/([a-z])([A-Z])/g, \\"$1-$2\\").toLowerCase();
        };
        function capitalize(s) {
            return s.charAt(0).toUpperCase() + s.slice(1);
        }
        var shared_esm_hasOwnProperty = Object.prototype.hasOwnProperty;
        var hasOwn = function hasOwn(val, key) {
            return shared_esm_hasOwnProperty.call(val, key);
        };
        var reportIssue = \\"\\\\u5982\\\\u6709\\\\u7591\\\\u95ee\\\\uff0c\\\\u8bf7\\\\u63d0\\\\u4ea4 issue \\\\u81f3\\\\uff1ahttps://github.com/nervjs/taro/issues\\";
        function ensure(condition, msg) {
            if (!condition) {
                throw new Error(msg + \\"\\\\n\\" + reportIssue);
            }
        }
        function warn(condition, msg) {
            if (false) {}
        }
        function queryToJson(str) {
            var dec = decodeURIComponent;
            var qp = str.split(\\"&\\");
            var ret = {};
            var name;
            var val;
            for (var i = 0, l = qp.length, item; i < l; ++i) {
                item = qp[i];
                if (item.length) {
                    var s = item.indexOf(\\"=\\");
                    if (s < 0) {
                        name = dec(item);
                        val = \\"\\";
                    } else {
                        name = dec(item.slice(0, s));
                        val = dec(item.slice(s + 1));
                    }
                    if (typeof ret[name] === \\"string\\") {
                        ret[name] = [ ret[name] ];
                    }
                    if (Array.isArray(ret[name])) {
                        ret[name].push(val);
                    } else {
                        ret[name] = val;
                    }
                }
            }
            return ret;
        }
        var _uniqueId = 1;
        var _loadTime = (new Date).getTime().toString();
        function getUniqueKey() {
            return _loadTime + _uniqueId++;
        }
        var cacheData = {};
        function cacheDataSet(key, val) {
            cacheData[key] = val;
        }
        function cacheDataGet(key, delelteAfterGet) {
            var temp = cacheData[key];
            delelteAfterGet && delete cacheData[key];
            return temp;
        }
        function cacheDataHas(key) {
            return key in cacheData;
        }
        function mergeInternalComponents(components) {
            Object.keys(components).forEach((function(name) {
                if (name in internalComponents) {
                    Object.assign(internalComponents[name], components[name]);
                } else {
                    internalComponents[name] = components[name];
                }
            }));
        }
        function mergeReconciler(hostConfig) {
            Object.keys(hostConfig).forEach((function(key) {
                var value = hostConfig[key];
                var raw = defaultReconciler[key];
                if (!raw) {
                    defaultReconciler[key] = value;
                } else {
                    if (isArray(raw)) {
                        defaultReconciler[key] = raw.push(value);
                    } else {
                        defaultReconciler[key] = [ raw, value ];
                    }
                }
            }));
        }
        function unsupport(api) {
            return function() {
                console.warn(\\"\\\\u5c0f\\\\u7a0b\\\\u5e8f\\\\u6682\\\\u4e0d\\\\u652f\\\\u6301 \\".concat(api));
            };
        }
        function setUniqueKeyToRoute(key, obj) {
            var routerParamsPrivateKey = \\"__key_\\";
            var useDataCacheApis = [ \\"navigateTo\\", \\"redirectTo\\", \\"reLaunch\\", \\"switchTab\\" ];
            if (useDataCacheApis.indexOf(key) > -1) {
                var url = obj.url = obj.url || \\"\\";
                var hasMark = url.indexOf(\\"?\\") > -1;
                var cacheKey = getUniqueKey();
                obj.url += (hasMark ? \\"&\\" : \\"?\\") + \\"\\".concat(routerParamsPrivateKey, \\"=\\").concat(cacheKey);
            }
        }
        var needPromiseApis = new Set([ \\"addPhoneContact\\", \\"authorize\\", \\"canvasGetImageData\\", \\"canvasPutImageData\\", \\"canvasToTempFilePath\\", \\"checkSession\\", \\"chooseAddress\\", \\"chooseImage\\", \\"chooseInvoiceTitle\\", \\"chooseLocation\\", \\"chooseVideo\\", \\"clearStorage\\", \\"closeBLEConnection\\", \\"closeBluetoothAdapter\\", \\"closeSocket\\", \\"compressImage\\", \\"connectSocket\\", \\"createBLEConnection\\", \\"downloadFile\\", \\"getAvailableAudioSources\\", \\"getBLEDeviceCharacteristics\\", \\"getBLEDeviceServices\\", \\"getBatteryInfo\\", \\"getBeacons\\", \\"getBluetoothAdapterState\\", \\"getBluetoothDevices\\", \\"getClipboardData\\", \\"getConnectedBluetoothDevices\\", \\"getConnectedWifi\\", \\"getExtConfig\\", \\"getFileInfo\\", \\"getImageInfo\\", \\"getLocation\\", \\"getNetworkType\\", \\"getSavedFileInfo\\", \\"getSavedFileList\\", \\"getScreenBrightness\\", \\"getSetting\\", \\"getStorage\\", \\"getStorageInfo\\", \\"getSystemInfo\\", \\"getUserInfo\\", \\"getWifiList\\", \\"hideHomeButton\\", \\"hideShareMenu\\", \\"hideTabBar\\", \\"hideTabBarRedDot\\", \\"loadFontFace\\", \\"login\\", \\"makePhoneCall\\", \\"navigateBack\\", \\"navigateBackMiniProgram\\", \\"navigateTo\\", \\"navigateToBookshelf\\", \\"navigateToMiniProgram\\", \\"notifyBLECharacteristicValueChange\\", \\"hideKeyboard\\", \\"hideLoading\\", \\"hideNavigationBarLoading\\", \\"hideToast\\", \\"openBluetoothAdapter\\", \\"openDocument\\", \\"openLocation\\", \\"openSetting\\", \\"pageScrollTo\\", \\"previewImage\\", \\"queryBookshelf\\", \\"reLaunch\\", \\"readBLECharacteristicValue\\", \\"redirectTo\\", \\"removeSavedFile\\", \\"removeStorage\\", \\"removeTabBarBadge\\", \\"requestSubscribeMessage\\", \\"saveFile\\", \\"saveImageToPhotosAlbum\\", \\"saveVideoToPhotosAlbum\\", \\"scanCode\\", \\"sendSocketMessage\\", \\"setBackgroundColor\\", \\"setBackgroundTextStyle\\", \\"setClipboardData\\", \\"setEnableDebug\\", \\"setInnerAudioOption\\", \\"setKeepScreenOn\\", \\"setNavigationBarColor\\", \\"setNavigationBarTitle\\", \\"setScreenBrightness\\", \\"setStorage\\", \\"setTabBarBadge\\", \\"setTabBarItem\\", \\"setTabBarStyle\\", \\"showActionSheet\\", \\"showFavoriteGuide\\", \\"showLoading\\", \\"showModal\\", \\"showShareMenu\\", \\"showTabBar\\", \\"showTabBarRedDot\\", \\"showToast\\", \\"startBeaconDiscovery\\", \\"startBluetoothDevicesDiscovery\\", \\"startDeviceMotionListening\\", \\"startPullDownRefresh\\", \\"stopBeaconDiscovery\\", \\"stopBluetoothDevicesDiscovery\\", \\"stopCompass\\", \\"startCompass\\", \\"startAccelerometer\\", \\"stopAccelerometer\\", \\"showNavigationBarLoading\\", \\"stopDeviceMotionListening\\", \\"stopPullDownRefresh\\", \\"switchTab\\", \\"uploadFile\\", \\"vibrateLong\\", \\"vibrateShort\\", \\"writeBLECharacteristicValue\\" ]);
        function getCanIUseWebp(taro) {
            return function() {
                if (typeof taro.getSystemInfoSync !== \\"function\\") {
                    console.error(\\"\\\\u4e0d\\\\u652f\\\\u6301 API canIUseWebp\\");
                    return false;
                }
                var _taro$getSystemInfoSy = taro.getSystemInfoSync(), platform = _taro$getSystemInfoSy.platform;
                var platformLower = platform.toLowerCase();
                if (platformLower === \\"android\\" || platformLower === \\"devtools\\") {
                    return true;
                }
                return false;
            };
        }
        function getNormalRequest(global) {
            return function request(options) {
                options = options || {};
                if (typeof options === \\"string\\") {
                    options = {
                        url: options
                    };
                }
                var originSuccess = options.success;
                var originFail = options.fail;
                var originComplete = options.complete;
                var requestTask;
                var p = new Promise((function(resolve, reject) {
                    options.success = function(res) {
                        originSuccess && originSuccess(res);
                        resolve(res);
                    };
                    options.fail = function(res) {
                        originFail && originFail(res);
                        reject(res);
                    };
                    options.complete = function(res) {
                        originComplete && originComplete(res);
                    };
                    requestTask = global.request(options);
                }));
                p.abort = function(cb) {
                    cb && cb();
                    if (requestTask) {
                        requestTask.abort();
                    }
                    return p;
                };
                return p;
            };
        }
        function processApis(taro, global) {
            var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var patchNeedPromiseApis = config.needPromiseApis || [];
            var _needPromiseApis = new Set([].concat(_toConsumableArray(patchNeedPromiseApis), _toConsumableArray(needPromiseApis)));
            var preserved = [ \\"getEnv\\", \\"interceptors\\", \\"Current\\", \\"getCurrentInstance\\", \\"options\\", \\"nextTick\\", \\"eventCenter\\", \\"Events\\", \\"preload\\", \\"webpackJsonp\\" ];
            var apis = Object.keys(global).filter((function(api) {
                return preserved.indexOf(api) === -1;
            }));
            apis.forEach((function(key) {
                if (_needPromiseApis.has(key)) {
                    var originKey = key;
                    taro[originKey] = function() {
                        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                            args[_key - 1] = arguments[_key];
                        }
                        var key = originKey;
                        if (typeof options === \\"string\\") {
                            if (args.length) {
                                return global[key].apply(global, [ options ].concat(args));
                            }
                            return global[key](options);
                        }
                        if (config.transformMeta) {
                            var transformResult = config.transformMeta(key, options);
                            key = transformResult.key;
                            options = transformResult.options;
                            if (!global.hasOwnProperty(key)) {
                                return unsupport(key)();
                            }
                        }
                        var task = null;
                        var obj = Object.assign({}, options);
                        setUniqueKeyToRoute(key, options);
                        var p = new Promise((function(resolve, reject) {
                            obj.success = function(res) {
                                var _a, _b;
                                (_a = config.modifyAsyncResult) === null || _a === void 0 ? void 0 : _a.call(config, key, res);
                                (_b = options.success) === null || _b === void 0 ? void 0 : _b.call(options, res);
                                if (key === \\"connectSocket\\") {
                                    resolve(Promise.resolve().then((function() {
                                        return Object.assign(task, res);
                                    })));
                                } else {
                                    resolve(res);
                                }
                            };
                            obj.fail = function(res) {
                                var _a;
                                (_a = options.fail) === null || _a === void 0 ? void 0 : _a.call(options, res);
                                reject(res);
                            };
                            obj.complete = function(res) {
                                var _a;
                                (_a = options.complete) === null || _a === void 0 ? void 0 : _a.call(options, res);
                            };
                            if (args.length) {
                                task = global[key].apply(global, [ obj ].concat(args));
                            } else {
                                task = global[key](obj);
                            }
                        }));
                        if (key === \\"uploadFile\\" || key === \\"downloadFile\\") {
                            p.progress = function(cb) {
                                task === null || task === void 0 ? void 0 : task.onProgressUpdate(cb);
                                return p;
                            };
                            p.abort = function(cb) {
                                cb === null || cb === void 0 ? void 0 : cb();
                                task === null || task === void 0 ? void 0 : task.abort();
                                return p;
                            };
                        }
                        return p;
                    };
                } else {
                    if (!global.hasOwnProperty(key)) {
                        taro[key] = unsupport(key);
                        return;
                    }
                    if (typeof global[key] === \\"function\\") {
                        taro[key] = function() {
                            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                                args[_key2] = arguments[_key2];
                            }
                            if (config.handleSyncApis) {
                                return config.handleSyncApis(key, global, args);
                            } else {
                                return global[key].apply(global, args);
                            }
                        };
                    } else {
                        taro[key] = global[key];
                    }
                }
            }));
            !config.isOnlyPromisify && equipCommonApis(taro, global, config);
        }
        function equipCommonApis(taro, global) {
            var apis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            taro.canIUseWebp = getCanIUseWebp(taro);
            taro.getCurrentPages = getCurrentPages || unsupport(\\"getCurrentPages\\");
            taro.getApp = getApp || unsupport(\\"getApp\\");
            taro.env = global.env || {};
            try {
                taro.requirePlugin = requirePlugin || unsupport(\\"requirePlugin\\");
            } catch (error) {
                taro.requirePlugin = unsupport(\\"requirePlugin\\");
            }
            var request = apis.request ? apis.request : getNormalRequest(global);
            function taroInterceptor(chain) {
                return request(chain.requestParams);
            }
            var link = new taro.Link(taroInterceptor);
            taro.request = link.request.bind(link);
            taro.addInterceptor = link.addInterceptor.bind(link);
            taro.cleanInterceptors = link.cleanInterceptors.bind(link);
            taro.miniGlobal = taro.options.miniGlobal = global;
        }
        var runtime_needPromiseApis = new Set([ \\"authPrivateMessage\\", \\"disableAlertBeforeUnload\\", \\"enableAlertBeforeUnload\\", \\"getBackgroundFetchData\\", \\"getGroupEnterInfo\\", \\"getShareInfo\\", \\"getWeRunData\\", \\"join1v1Chat\\", \\"openVideoEditor\\", \\"saveFileToDisk\\", \\"scanItem\\", \\"setEnable1v1Chat\\", \\"setWindowSize\\", \\"sendBizRedPacket\\", \\"startFacialRecognitionVerify\\" ]);
        function initNativeApi(taro) {
            processApis(taro, wx, {
                needPromiseApis: runtime_needPromiseApis
            });
            taro.cloud = wx.cloud;
        }
        var components = {
            Progress: {
                \\"border-radius\\": \\"0\\",
                \\"font-size\\": \\"16\\",
                duration: \\"30\\",
                bindActiveEnd: \\"\\"
            },
            RichText: {
                space: \\"\\"
            },
            Text: {
                \\"user-select\\": \\"false\\"
            },
            Map: {
                polygons: \\"[]\\",
                subkey: \\"\\",
                rotate: \\"0\\",
                skew: \\"0\\",
                \\"enable-3D\\": \\"false\\",
                \\"show-compass\\": \\"false\\",
                \\"show-scale\\": \\"false\\",
                \\"enable-overlooking\\": \\"false\\",
                \\"enable-zoom\\": \\"true\\",
                \\"enable-scroll\\": \\"true\\",
                \\"enable-rotate\\": \\"false\\",
                \\"enable-satellite\\": \\"false\\",
                \\"enable-traffic\\": \\"false\\",
                setting: \\"[]\\",
                bindLabelTap: \\"\\",
                bindRegionChange: \\"\\",
                bindPoiTap: \\"\\"
            },
            Button: {
                lang: \\"en\\",
                \\"session-from\\": \\"\\",
                \\"send-message-title\\": \\"\\",
                \\"send-message-path\\": \\"\\",
                \\"send-message-img\\": \\"\\",
                \\"app-parameter\\": \\"\\",
                \\"show-message-card\\": \\"false\\",
                \\"business-id\\": \\"\\",
                bindGetUserInfo: \\"\\",
                bindContact: \\"\\",
                bindGetPhoneNumber: \\"\\",
                bindError: \\"\\",
                bindOpenSetting: \\"\\",
                bindLaunchApp: \\"\\"
            },
            Form: {
                \\"report-submit-timeout\\": \\"0\\"
            },
            Input: {
                \\"always-embed\\": \\"false\\",
                \\"adjust-position\\": \\"true\\",
                \\"hold-keyboard\\": \\"false\\",
                bindKeyboardHeightChange: \\"\\"
            },
            Picker: {
                \\"header-text\\": \\"\\"
            },
            PickerView: {
                bindPickStart: \\"\\",
                bindPickEnd: \\"\\"
            },
            Slider: {
                color: singleQuote(\\"#e9e9e9\\"),
                \\"selected-color\\": singleQuote(\\"#1aad19\\")
            },
            Textarea: {
                \\"show-confirm-bar\\": \\"true\\",
                \\"adjust-position\\": \\"true\\",
                \\"hold-keyboard\\": \\"false\\",
                \\"disable-default-padding\\": \\"false\\",
                \\"confirm-type\\": singleQuote(\\"return\\"),
                \\"confirm-hold\\": \\"false\\",
                bindKeyboardHeightChange: \\"\\"
            },
            ScrollView: {
                \\"enable-flex\\": \\"false\\",
                \\"scroll-anchoring\\": \\"false\\",
                \\"refresher-enabled\\": \\"false\\",
                \\"refresher-threshold\\": \\"45\\",
                \\"refresher-default-style\\": singleQuote(\\"black\\"),
                \\"refresher-background\\": singleQuote(\\"#FFF\\"),
                \\"refresher-triggered\\": \\"false\\",
                enhanced: \\"false\\",
                bounces: \\"true\\",
                \\"show-scrollbar\\": \\"true\\",
                \\"paging-enabled\\": \\"false\\",
                \\"fast-deceleration\\": \\"false\\",
                bindDragStart: \\"\\",
                bindDragging: \\"\\",
                bindDragEnd: \\"\\",
                bindRefresherPulling: \\"\\",
                bindRefresherRefresh: \\"\\",
                bindRefresherRestore: \\"\\",
                bindRefresherAbort: \\"\\"
            },
            Swiper: {
                \\"snap-to-edge\\": \\"false\\",
                \\"easing-function\\": singleQuote(\\"default\\")
            },
            SwiperItem: {
                \\"skip-hidden-item-layout\\": \\"false\\"
            },
            Navigator: {
                target: singleQuote(\\"self\\"),
                \\"app-id\\": \\"\\",
                path: \\"\\",
                \\"extra-data\\": \\"\\",
                version: singleQuote(\\"version\\")
            },
            Camera: {
                mode: singleQuote(\\"normal\\"),
                resolution: singleQuote(\\"medium\\"),
                \\"frame-size\\": singleQuote(\\"medium\\"),
                bindInitDone: \\"\\",
                bindScanCode: \\"\\"
            },
            Image: {
                webp: \\"false\\",
                \\"show-menu-by-longpress\\": \\"false\\"
            },
            LivePlayer: {
                mode: singleQuote(\\"live\\"),
                \\"sound-mode\\": singleQuote(\\"speaker\\"),
                \\"auto-pause-if-navigate\\": \\"true\\",
                \\"auto-pause-if-open-native\\": \\"true\\",
                \\"picture-in-picture-mode\\": \\"[]\\",
                bindstatechange: \\"\\",
                bindfullscreenchange: \\"\\",
                bindnetstatus: \\"\\",
                bindAudioVolumeNotify: \\"\\",
                bindEnterPictureInPicture: \\"\\",
                bindLeavePictureInPicture: \\"\\"
            },
            Video: {
                title: \\"\\",
                \\"play-btn-position\\": singleQuote(\\"bottom\\"),
                \\"enable-play-gesture\\": \\"false\\",
                \\"auto-pause-if-navigate\\": \\"true\\",
                \\"auto-pause-if-open-native\\": \\"true\\",
                \\"vslide-gesture\\": \\"false\\",
                \\"vslide-gesture-in-fullscreen\\": \\"true\\",
                \\"ad-unit-id\\": \\"\\",
                \\"poster-for-crawler\\": \\"\\",
                \\"show-casting-button\\": \\"false\\",
                \\"picture-in-picture-mode\\": \\"[]\\",
                \\"enable-auto-rotation\\": \\"false\\",
                \\"show-screen-lock-button\\": \\"false\\",
                \\"show-snapshot-button\\": \\"false\\",
                \\"show-background-playback-button\\": \\"false\\",
                \\"background-poster\\": \\"\\",
                bindProgress: \\"\\",
                bindLoadedMetadata: \\"\\",
                bindControlsToggle: \\"\\",
                bindEnterPictureInPicture: \\"\\",
                bindLeavePictureInPicture: \\"\\",
                bindSeekComplete: \\"\\",
                bindAdLoad: \\"\\",
                bindAdError: \\"\\",
                bindAdClose: \\"\\",
                bindAdPlay: \\"\\"
            },
            Canvas: {
                type: \\"\\"
            },
            Ad: {
                \\"ad-type\\": singleQuote(\\"banner\\"),
                \\"ad-theme\\": singleQuote(\\"white\\")
            },
            CoverView: {
                \\"marker-id\\": \\"\\",
                slot: \\"\\"
            },
            Editor: {
                \\"read-only\\": \\"false\\",
                placeholder: \\"\\",
                \\"show-img-size\\": \\"false\\",
                \\"show-img-toolbar\\": \\"false\\",
                \\"show-img-resize\\": \\"false\\",
                focus: \\"false\\",
                bindReady: \\"\\",
                bindFocus: \\"\\",
                bindBlur: \\"\\",
                bindInput: \\"\\",
                bindStatusChange: \\"\\",
                name: \\"\\"
            },
            MatchMedia: {
                \\"min-width\\": \\"\\",
                \\"max-width\\": \\"\\",
                width: \\"\\",
                \\"min-height\\": \\"\\",
                \\"max-height\\": \\"\\",
                height: \\"\\",
                orientation: \\"\\"
            },
            FunctionalPageNavigator: {
                version: singleQuote(\\"release\\"),
                name: \\"\\",
                args: \\"\\",
                bindSuccess: \\"\\",
                bindFail: \\"\\",
                bindCancel: \\"\\"
            },
            LivePusher: {
                url: \\"\\",
                mode: singleQuote(\\"RTC\\"),
                autopush: \\"false\\",
                muted: \\"false\\",
                \\"enable-camera\\": \\"true\\",
                \\"auto-focus\\": \\"true\\",
                orientation: singleQuote(\\"vertical\\"),
                beauty: \\"0\\",
                whiteness: \\"0\\",
                aspect: singleQuote(\\"9:16\\"),
                \\"min-bitrate\\": \\"200\\",
                \\"max-bitrate\\": \\"1000\\",
                \\"audio-quality\\": singleQuote(\\"high\\"),
                \\"waiting-image\\": \\"\\",
                \\"waiting-image-hash\\": \\"\\",
                zoom: \\"false\\",
                \\"device-position\\": singleQuote(\\"front\\"),
                \\"background-mute\\": \\"false\\",
                mirror: \\"false\\",
                \\"remote-mirror\\": \\"false\\",
                \\"local-mirror\\": \\"false\\",
                \\"audio-reverb-type\\": \\"0\\",
                \\"enable-mic\\": \\"true\\",
                \\"enable-agc\\": \\"false\\",
                \\"enable-ans\\": \\"false\\",
                \\"audio-volume-type\\": singleQuote(\\"voicecall\\"),
                \\"video-width\\": \\"360\\",
                \\"video-height\\": \\"640\\",
                \\"beauty-style\\": singleQuote(\\"smooth\\"),
                filter: singleQuote(\\"standard\\"),
                animation: \\"\\",
                bindStateChange: \\"\\",
                bindNetStatus: \\"\\",
                bindBgmStart: \\"\\",
                bindBgmProgress: \\"\\",
                bindBgmComplete: \\"\\",
                bindAudioVolumeNotify: \\"\\"
            },
            OfficialAccount: {
                bindLoad: \\"\\",
                bindError: \\"\\"
            },
            OpenData: {
                type: \\"\\",
                \\"open-gid\\": \\"\\",
                lang: singleQuote(\\"en\\"),
                \\"default-text\\": \\"\\",
                \\"default-avatar\\": \\"\\",
                bindError: \\"\\"
            },
            NavigationBar: {
                title: \\"\\",
                loading: \\"false\\",
                \\"front-color\\": \\"\\",
                \\"background-color\\": \\"\\",
                \\"color-animation-duration\\": \\"0\\",
                \\"color-animation-timing-func\\": singleQuote(\\"linear\\")
            },
            PageMeta: {
                \\"background-text-style\\": \\"\\",
                \\"background-color\\": \\"\\",
                \\"background-color-top\\": \\"\\",
                \\"background-color-bottom\\": \\"\\",
                \\"scroll-top\\": singleQuote(\\"\\"),
                \\"scroll-duration\\": \\"300\\",
                \\"page-style\\": singleQuote(\\"\\"),
                \\"root-font-size\\": singleQuote(\\"\\"),
                bindResize: \\"\\",
                bindScroll: \\"\\",
                bindScrollDone: \\"\\"
            },
            VoipRoom: {
                openid: \\"\\",
                mode: singleQuote(\\"camera\\"),
                \\"device-position\\": singleQuote(\\"front\\"),
                bindError: \\"\\"
            },
            AdCustom: {
                \\"unit-id\\": \\"\\",
                \\"ad-intervals\\": \\"\\",
                bindLoad: \\"\\",
                bindError: \\"\\"
            },
            PageContainer: {
                show: \\"false\\",
                duration: \\"300\\",
                \\"z-index\\": \\"100\\",
                overlay: \\"true\\",
                position: singleQuote(\\"bottom\\"),
                round: \\"false\\",
                \\"close-on-slideDown\\": \\"false\\",
                \\"overlay-style\\": \\"\\",
                \\"custom-style\\": \\"\\",
                bindBeforeEnter: \\"\\",
                bindEnter: \\"\\",
                bindAfterEnter: \\"\\",
                bindBeforeLeave: \\"\\",
                bindLeave: \\"\\",
                bindAfterLeave: \\"\\",
                bindClickOverlay: \\"\\"
            },
            KeyboardAccessory: {}
        };
        var hostConfig = {
            initNativeApi: initNativeApi
        };
        mergeReconciler(hostConfig);
        mergeInternalComponents(components);
        var taro_runtime = __webpack_require__(1);
        var mocks_taro = \\"taro\\";
        var classCallCheck = __webpack_require__(3);
        var createClass = __webpack_require__(4);
        var inherits = __webpack_require__(6);
        var createSuper = __webpack_require__(5);
        var react = __webpack_require__(0);
        var app = __webpack_require__(12);
        var app_App = function(_Component) {
            Object(inherits[\\"a\\"])(App, _Component);
            var _super = Object(createSuper[\\"a\\"])(App);
            function App() {
                Object(classCallCheck[\\"a\\"])(this, App);
                return _super.apply(this, arguments);
            }
            Object(createClass[\\"a\\"])(App, [ {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {}
            }, {
                key: \\"componentDidShow\\",
                value: function componentDidShow() {}
            }, {
                key: \\"componentDidHide\\",
                value: function componentDidHide() {}
            }, {
                key: \\"componentDidCatchError\\",
                value: function componentDidCatchError() {}
            }, {
                key: \\"render\\",
                value: function render() {
                    return this.props.children;
                }
            } ]);
            return App;
        }(react[\\"Component\\"]);
        var lib_src_app = app_App;
        var taro_react = __webpack_require__(9);
        var app_config = {
            pages: [ \\"pages/index/index\\" ],
            window: {
                backgroundTextStyle: \\"light\\",
                navigationBarBackgroundColor: \\"#fff\\",
                navigationBarTitleText: \\"WeChat\\",
                navigationBarTextStyle: \\"black\\"
            }
        };
        taro_runtime[\\"window\\"].__taroAppConfig = app_config;
        var inst = App(Object(taro_runtime[\\"createReactApp\\"])(lib_src_app, react, taro_react[\\"a\\"], app_config));
        undefined({
            designWidth: 750,
            deviceRatio: {
                640: 1.17,
                750: 1,
                828: .905
            }
        });
    }
}, [ [ 19, 0, 1, 3, 2 ] ] ]);



/** filePath: dist/app.json **/
{\\"pages\\":[\\"pages/index/index\\"],\\"window\\":{\\"backgroundTextStyle\\":\\"light\\",\\"navigationBarBackgroundColor\\":\\"#fff\\",\\"navigationBarTitleText\\":\\"WeChat\\",\\"navigationBarTextStyle\\":\\"black\\"}}

/** filePath: dist/app.wxss **/


/** filePath: dist/base.wxml **/
<wxs module=\\"xs\\" src=\\"./utils.wxs\\" />
<template name=\\"taro_tmpl\\">
  <block wx:for=\\"{{root.cn}}\\" wx:key=\\"uid\\">
    <template is=\\"tmpl_0_container\\" data=\\"{{i:item,l:''}}\\" />
  </block>
</template>

<template name=\\"tmpl_0_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_0_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_0_input\\">
  <template is=\\"{{xs.c(i, 'tmpl_0_')}}\\" data=\\"{{i:i}}\\" />
</template>

<template name=\\"tmpl_0_input_focus\\">
  <input value=\\"{{i.value}}\\" type=\\"{{xs.b(i.type,'')}}\\" password=\\"{{xs.b(i.password,false)}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'input-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" focus=\\"{{xs.b(i.focus,false)}}\\" confirm-type=\\"{{xs.b(i.confirmType,'done')}}\\" confirm-hold=\\"{{xs.b(i.confirmHold,false)}}\\" cursor=\\"{{xs.b(i.cursor,i.value.length)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" bindinput=\\"eh\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindconfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\"></input>
</template>

<template name=\\"tmpl_0_input_blur\\">
  <input value=\\"{{i.value}}\\" type=\\"{{xs.b(i.type,'')}}\\" password=\\"{{xs.b(i.password,false)}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'input-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" confirm-type=\\"{{xs.b(i.confirmType,'done')}}\\" confirm-hold=\\"{{xs.b(i.confirmHold,false)}}\\" cursor=\\"{{xs.b(i.cursor,i.value.length)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" bindinput=\\"eh\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindconfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\"></input>
</template>

<template name=\\"tmpl_0_textarea\\">
  <template is=\\"{{xs.c(i, 'tmpl_0_')}}\\" data=\\"{{i:i,cid:cid}}\\" />
</template>

<template name=\\"tmpl_0_textarea_focus\\">
  <textarea value=\\"{{i.value}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'textarea-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" auto-focus=\\"{{xs.b(i.autoFocus,false)}}\\" focus=\\"{{xs.b(i.focus,false)}}\\" auto-height=\\"{{xs.b(i.autoHeight,false)}}\\" fixed=\\"{{xs.b(i.fixed,false)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" cursor=\\"{{xs.b(i.cursor,-1)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindlinechange=\\"eh\\" bindinput=\\"eh\\" bindconfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <keyboard-accessory style=\\"{{i.cn[0].st}}\\" class=\\"{{i.cn[0].cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.cn[0].uid}}\\">
      <block wx:for=\\"{{i.cn[0].cn}}\\" wx:key=\\"uid\\">
        <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
      </block>
    </keyboard-accessory>
    </textarea>
</template>

<template name=\\"tmpl_0_textarea_blur\\">
  <textarea value=\\"{{i.value}}\\" placeholder=\\"{{i.placeholder}}\\" placeholder-style=\\"{{i.placeholderStyle}}\\" placeholder-class=\\"{{xs.b(i.placeholderClass,'textarea-placeholder')}}\\" disabled=\\"{{i.disabled}}\\" maxlength=\\"{{xs.b(i.maxlength,140)}}\\" auto-focus=\\"{{xs.b(i.autoFocus,false)}}\\" auto-height=\\"{{xs.b(i.autoHeight,false)}}\\" fixed=\\"{{xs.b(i.fixed,false)}}\\" cursor-spacing=\\"{{xs.b(i.cursorSpacing,0)}}\\" cursor=\\"{{xs.b(i.cursor,-1)}}\\" selection-start=\\"{{xs.b(i.selectionStart,-1)}}\\" selection-end=\\"{{xs.b(i.selectionEnd,-1)}}\\" bindfocus=\\"eh\\" bindblur=\\"eh\\" bindlinechange=\\"eh\\" bindinput=\\"eh\\" bindconfirm=\\"eh\\" name=\\"{{i.name}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <keyboard-accessory style=\\"{{i.cn[0].st}}\\" class=\\"{{i.cn[0].cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.cn[0].uid}}\\">
      <block wx:for=\\"{{i.cn[0].cn}}\\" wx:key=\\"uid\\">
        <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
      </block>
    </keyboard-accessory>
    </textarea>
</template>

<template name=\\"tmpl_0_scroll-view\\">
  <scroll-view scroll-x=\\"{{xs.b(i.scrollX,false)}}\\" scroll-y=\\"{{xs.b(i.scrollY,false)}}\\" upper-threshold=\\"{{xs.b(i.upperThreshold,50)}}\\" lower-threshold=\\"{{xs.b(i.lowerThreshold,50)}}\\" scroll-top=\\"{{i.scrollTop}}\\" scroll-left=\\"{{i.scrollLeft}}\\" scroll-into-view=\\"{{i.scrollIntoView}}\\" scroll-with-animation=\\"{{xs.b(i.scrollWithAnimation,false)}}\\" enable-back-to-top=\\"{{xs.b(i.enableBackToTop,false)}}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_0_static-image\\">
  <image src=\\"{{i.src}}\\" mode=\\"{{xs.b(i.mode,'scaleToFill')}}\\" lazy-load=\\"{{xs.b(i.lazyLoad,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_0_image\\">
  <image src=\\"{{i.src}}\\" mode=\\"{{xs.b(i.mode,'scaleToFill')}}\\" lazy-load=\\"{{xs.b(i.lazyLoad,false)}}\\" binderror=\\"eh\\" bindload=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_0_#text\\" data=\\"{{i:i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_0_container\\">
  <template is=\\"{{xs.a(0, i.nn, l)}}\\" data=\\"{{i:i,cid:0,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_1_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_1_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_1_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_1_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_1_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_1_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_1_scroll-view\\">
  <scroll-view scroll-x=\\"{{xs.b(i.scrollX,false)}}\\" scroll-y=\\"{{xs.b(i.scrollY,false)}}\\" upper-threshold=\\"{{xs.b(i.upperThreshold,50)}}\\" lower-threshold=\\"{{xs.b(i.lowerThreshold,50)}}\\" scroll-top=\\"{{i.scrollTop}}\\" scroll-left=\\"{{i.scrollLeft}}\\" scroll-into-view=\\"{{i.scrollIntoView}}\\" scroll-with-animation=\\"{{xs.b(i.scrollWithAnimation,false)}}\\" enable-back-to-top=\\"{{xs.b(i.enableBackToTop,false)}}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_1_container\\">
  <template is=\\"{{xs.a(1, i.nn, l)}}\\" data=\\"{{i:i,cid:1,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_2_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_2_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_2_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_2_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_2_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_2_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_2_scroll-view\\">
  <scroll-view scroll-x=\\"{{xs.b(i.scrollX,false)}}\\" scroll-y=\\"{{xs.b(i.scrollY,false)}}\\" upper-threshold=\\"{{xs.b(i.upperThreshold,50)}}\\" lower-threshold=\\"{{xs.b(i.lowerThreshold,50)}}\\" scroll-top=\\"{{i.scrollTop}}\\" scroll-left=\\"{{i.scrollLeft}}\\" scroll-into-view=\\"{{i.scrollIntoView}}\\" scroll-with-animation=\\"{{xs.b(i.scrollWithAnimation,false)}}\\" enable-back-to-top=\\"{{xs.b(i.enableBackToTop,false)}}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_2_container\\">
  <template is=\\"{{xs.a(2, i.nn, l)}}\\" data=\\"{{i:i,cid:2,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_3_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_3_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_3_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_3_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_3_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_3_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_3_scroll-view\\">
  <scroll-view scroll-x=\\"{{xs.b(i.scrollX,false)}}\\" scroll-y=\\"{{xs.b(i.scrollY,false)}}\\" upper-threshold=\\"{{xs.b(i.upperThreshold,50)}}\\" lower-threshold=\\"{{xs.b(i.lowerThreshold,50)}}\\" scroll-top=\\"{{i.scrollTop}}\\" scroll-left=\\"{{i.scrollLeft}}\\" scroll-into-view=\\"{{i.scrollIntoView}}\\" scroll-with-animation=\\"{{xs.b(i.scrollWithAnimation,false)}}\\" enable-back-to-top=\\"{{xs.b(i.enableBackToTop,false)}}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_3_container\\">
  <template is=\\"{{xs.a(3, i.nn, l)}}\\" data=\\"{{i:i,cid:3,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_4_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_4_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_4_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_4_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_4_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_4_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_4_container\\">
  <template is=\\"{{xs.a(4, i.nn, l)}}\\" data=\\"{{i:i,cid:4,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_5_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_5_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_5_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_5_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_5_static-text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_5_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_5_container\\">
  <template is=\\"{{xs.a(5, i.nn, l)}}\\" data=\\"{{i:i,cid:5,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_6_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_6_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_6_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_6_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_6_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_6_container\\">
  <template is=\\"{{xs.a(6, i.nn, l)}}\\" data=\\"{{i:i,cid:6,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_7_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_7_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_7_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_7_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_7_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_7_container\\">
  <template is=\\"{{xs.a(7, i.nn, l)}}\\" data=\\"{{i:i,cid:7,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_8_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_8_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_8_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_8_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_8_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_8_container\\">
  <template is=\\"{{xs.a(8, i.nn, l)}}\\" data=\\"{{i:i,cid:8,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_9_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_9_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_9_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_9_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_9_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_9_container\\">
  <template is=\\"{{xs.a(9, i.nn, l)}}\\" data=\\"{{i:i,cid:9,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_10_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_10_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_10_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_10_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_10_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_10_container\\">
  <template is=\\"{{xs.a(10, i.nn, l)}}\\" data=\\"{{i:i,cid:10,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_11_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_11_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_11_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_11_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_11_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_11_container\\">
  <template is=\\"{{xs.a(11, i.nn, l)}}\\" data=\\"{{i:i,cid:11,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_12_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_12_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_12_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_12_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_12_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_12_container\\">
  <template is=\\"{{xs.a(12, i.nn, l)}}\\" data=\\"{{i:i,cid:12,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_13_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_13_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_13_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_13_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_13_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_13_container\\">
  <template is=\\"{{xs.a(13, i.nn, l)}}\\" data=\\"{{i:i,cid:13,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_14_catch-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\" catchtouchmove=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_14_static-view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_14_pure-view\\">
  <view style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_14_view\\">
  <view hover-class=\\"{{xs.b(i.hoverClass,'none')}}\\" hover-stop-propagation=\\"{{xs.b(i.hoverStopPropagation,false)}}\\" hover-start-time=\\"{{xs.b(i.hoverStartTime,50)}}\\" hover-stay-time=\\"{{xs.b(i.hoverStayTime,400)}}\\" animation=\\"{{i.animation}}\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" bindanimationstart=\\"eh\\" bindanimationiteration=\\"eh\\" bindanimationend=\\"eh\\" bindtransitionend=\\"eh\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_14_text\\">
  <text selectable=\\"{{xs.b(i.selectable,false)}}\\" space=\\"{{i.space}}\\" decode=\\"{{xs.b(i.decode,false)}}\\" style=\\"{{i.st}}\\" class=\\"{{i.cl}}\\" bindtap=\\"eh\\"  id=\\"{{i.uid}}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
      <template is=\\"{{xs.e(cid+1)}}\\" data=\\"{{i:item,l:l}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_14_container\\">
  <template is=\\"{{xs.a(14, i.nn, l)}}\\" data=\\"{{i:i,cid:14,l:xs.f(l,i.nn)}}\\" />
</template>

<template name=\\"tmpl_15_container\\">
  <block wx:if=\\"{{i.nn === '#text'}}\\">
    <template is=\\"tmpl_0_#text\\" data=\\"{{i:i}}\\" />
  </block>
  <block wx:else>
    <comp i=\\"{{i}}\\" l=\\"{{l}}\\" />
  </block>
</template>


/** filePath: dist/common.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 2 ], [ function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    __webpack_exports__[\\"default\\"] = \\"react-mock\\";
} ] ]);

/** filePath: dist/comp.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 6 ], {
    13: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var _tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        Component(Object(_tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__[\\"createRecursiveComponentConfig\\"])());
    }
}, [ [ 13, 0, 1 ] ] ]);

/** filePath: dist/comp.json **/
{\\"component\\":true,\\"usingComponents\\":{\\"comp\\":\\"./comp\\",\\"custom-wrapper\\":\\"./custom-wrapper\\"}}

/** filePath: dist/comp.wxml **/
<import src=\\"./base.wxml\\" />
<template is=\\"tmpl_0_container\\" data=\\"{{i:i,l:l}}\\" />

/** filePath: dist/custom-wrapper.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 7 ], {
    14: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var _tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        Component(Object(_tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__[\\"createRecursiveComponentConfig\\"])(\\"custom-wrapper\\"));
    }
}, [ [ 14, 0, 1 ] ] ]);

/** filePath: dist/custom-wrapper.json **/
{\\"component\\":true,\\"usingComponents\\":{\\"comp\\":\\"./comp\\",\\"custom-wrapper\\":\\"./custom-wrapper\\"}}

/** filePath: dist/custom-wrapper.wxml **/
<import src=\\"./base.wxml\\" />
  <block wx:for=\\"{{i.cn}}\\" wx:key=\\"uid\\">
    <template is=\\"tmpl_0_container\\" data=\\"{{i:item,l:''}}\\" />
  </block>

/** filePath: dist/pages/index/index.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 8 ], [ , , , , , , , , function(module, exports, __webpack_require__) {
    module.exports = __webpack_require__(15);
}, , , , , , , function(module, exports, __webpack_require__) {
    var g = function() {
        return this;
    }() || Function(\\"return this\\")();
    var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\\"regeneratorRuntime\\") >= 0;
    var oldRuntime = hadRuntime && g.regeneratorRuntime;
    g.regeneratorRuntime = undefined;
    module.exports = __webpack_require__(16);
    if (hadRuntime) {
        g.regeneratorRuntime = oldRuntime;
    } else {
        try {
            delete g.regeneratorRuntime;
        } catch (e) {
            g.regeneratorRuntime = undefined;
        }
    }
}, function(module, exports, __webpack_require__) {
    (function(module) {
        var _typeof = __webpack_require__(7);
        !function(global) {
            \\"use strict\\";
            var Op = Object.prototype;
            var hasOwn = Op.hasOwnProperty;
            var undefined;
            var $Symbol = typeof Symbol === \\"function\\" ? Symbol : {};
            var iteratorSymbol = $Symbol.iterator || \\"@@iterator\\";
            var asyncIteratorSymbol = $Symbol.asyncIterator || \\"@@asyncIterator\\";
            var toStringTagSymbol = $Symbol.toStringTag || \\"@@toStringTag\\";
            var inModule = (false ? undefined : _typeof(module)) === \\"object\\";
            var runtime = global.regeneratorRuntime;
            if (runtime) {
                if (inModule) {
                    module.exports = runtime;
                }
                return;
            }
            runtime = global.regeneratorRuntime = inModule ? module.exports : {};
            function wrap(innerFn, outerFn, self, tryLocsList) {
                var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                var generator = Object.create(protoGenerator.prototype);
                var context = new Context(tryLocsList || []);
                generator._invoke = makeInvokeMethod(innerFn, self, context);
                return generator;
            }
            runtime.wrap = wrap;
            function tryCatch(fn, obj, arg) {
                try {
                    return {
                        type: \\"normal\\",
                        arg: fn.call(obj, arg)
                    };
                } catch (err) {
                    return {
                        type: \\"throw\\",
                        arg: err
                    };
                }
            }
            var GenStateSuspendedStart = \\"suspendedStart\\";
            var GenStateSuspendedYield = \\"suspendedYield\\";
            var GenStateExecuting = \\"executing\\";
            var GenStateCompleted = \\"completed\\";
            var ContinueSentinel = {};
            function Generator() {}
            function GeneratorFunction() {}
            function GeneratorFunctionPrototype() {}
            var IteratorPrototype = {};
            IteratorPrototype[iteratorSymbol] = function() {
                return this;
            };
            var getProto = Object.getPrototypeOf;
            var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
            if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
                IteratorPrototype = NativeIteratorPrototype;
            }
            var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
            GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
            GeneratorFunctionPrototype.constructor = GeneratorFunction;
            GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \\"GeneratorFunction\\";
            function defineIteratorMethods(prototype) {
                [ \\"next\\", \\"throw\\", \\"return\\" ].forEach((function(method) {
                    prototype[method] = function(arg) {
                        return this._invoke(method, arg);
                    };
                }));
            }
            runtime.isGeneratorFunction = function(genFun) {
                var ctor = typeof genFun === \\"function\\" && genFun.constructor;
                return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === \\"GeneratorFunction\\" : false;
            };
            runtime.mark = function(genFun) {
                if (Object.setPrototypeOf) {
                    Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
                } else {
                    genFun.__proto__ = GeneratorFunctionPrototype;
                    if (!(toStringTagSymbol in genFun)) {
                        genFun[toStringTagSymbol] = \\"GeneratorFunction\\";
                    }
                }
                genFun.prototype = Object.create(Gp);
                return genFun;
            };
            runtime.awrap = function(arg) {
                return {
                    __await: arg
                };
            };
            function AsyncIterator(generator) {
                function invoke(method, arg, resolve, reject) {
                    var record = tryCatch(generator[method], generator, arg);
                    if (record.type === \\"throw\\") {
                        reject(record.arg);
                    } else {
                        var result = record.arg;
                        var value = result.value;
                        if (value && _typeof(value) === \\"object\\" && hasOwn.call(value, \\"__await\\")) {
                            return Promise.resolve(value.__await).then((function(value) {
                                invoke(\\"next\\", value, resolve, reject);
                            }), (function(err) {
                                invoke(\\"throw\\", err, resolve, reject);
                            }));
                        }
                        return Promise.resolve(value).then((function(unwrapped) {
                            result.value = unwrapped;
                            resolve(result);
                        }), reject);
                    }
                }
                var previousPromise;
                function enqueue(method, arg) {
                    function callInvokeWithMethodAndArg() {
                        return new Promise((function(resolve, reject) {
                            invoke(method, arg, resolve, reject);
                        }));
                    }
                    return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
                }
                this._invoke = enqueue;
            }
            defineIteratorMethods(AsyncIterator.prototype);
            AsyncIterator.prototype[asyncIteratorSymbol] = function() {
                return this;
            };
            runtime.AsyncIterator = AsyncIterator;
            runtime.async = function(innerFn, outerFn, self, tryLocsList) {
                var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
                return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then((function(result) {
                    return result.done ? result.value : iter.next();
                }));
            };
            function makeInvokeMethod(innerFn, self, context) {
                var state = GenStateSuspendedStart;
                return function invoke(method, arg) {
                    if (state === GenStateExecuting) {
                        throw new Error(\\"Generator is already running\\");
                    }
                    if (state === GenStateCompleted) {
                        if (method === \\"throw\\") {
                            throw arg;
                        }
                        return doneResult();
                    }
                    context.method = method;
                    context.arg = arg;
                    while (true) {
                        var delegate = context.delegate;
                        if (delegate) {
                            var delegateResult = maybeInvokeDelegate(delegate, context);
                            if (delegateResult) {
                                if (delegateResult === ContinueSentinel) continue;
                                return delegateResult;
                            }
                        }
                        if (context.method === \\"next\\") {
                            context.sent = context._sent = context.arg;
                        } else if (context.method === \\"throw\\") {
                            if (state === GenStateSuspendedStart) {
                                state = GenStateCompleted;
                                throw context.arg;
                            }
                            context.dispatchException(context.arg);
                        } else if (context.method === \\"return\\") {
                            context.abrupt(\\"return\\", context.arg);
                        }
                        state = GenStateExecuting;
                        var record = tryCatch(innerFn, self, context);
                        if (record.type === \\"normal\\") {
                            state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                            if (record.arg === ContinueSentinel) {
                                continue;
                            }
                            return {
                                value: record.arg,
                                done: context.done
                            };
                        } else if (record.type === \\"throw\\") {
                            state = GenStateCompleted;
                            context.method = \\"throw\\";
                            context.arg = record.arg;
                        }
                    }
                };
            }
            function maybeInvokeDelegate(delegate, context) {
                var method = delegate.iterator[context.method];
                if (method === undefined) {
                    context.delegate = null;
                    if (context.method === \\"throw\\") {
                        if (delegate.iterator.return) {
                            context.method = \\"return\\";
                            context.arg = undefined;
                            maybeInvokeDelegate(delegate, context);
                            if (context.method === \\"throw\\") {
                                return ContinueSentinel;
                            }
                        }
                        context.method = \\"throw\\";
                        context.arg = new TypeError(\\"The iterator does not provide a 'throw' method\\");
                    }
                    return ContinueSentinel;
                }
                var record = tryCatch(method, delegate.iterator, context.arg);
                if (record.type === \\"throw\\") {
                    context.method = \\"throw\\";
                    context.arg = record.arg;
                    context.delegate = null;
                    return ContinueSentinel;
                }
                var info = record.arg;
                if (!info) {
                    context.method = \\"throw\\";
                    context.arg = new TypeError(\\"iterator result is not an object\\");
                    context.delegate = null;
                    return ContinueSentinel;
                }
                if (info.done) {
                    context[delegate.resultName] = info.value;
                    context.next = delegate.nextLoc;
                    if (context.method !== \\"return\\") {
                        context.method = \\"next\\";
                        context.arg = undefined;
                    }
                } else {
                    return info;
                }
                context.delegate = null;
                return ContinueSentinel;
            }
            defineIteratorMethods(Gp);
            Gp[toStringTagSymbol] = \\"Generator\\";
            Gp[iteratorSymbol] = function() {
                return this;
            };
            Gp.toString = function() {
                return \\"[object Generator]\\";
            };
            function pushTryEntry(locs) {
                var entry = {
                    tryLoc: locs[0]
                };
                if (1 in locs) {
                    entry.catchLoc = locs[1];
                }
                if (2 in locs) {
                    entry.finallyLoc = locs[2];
                    entry.afterLoc = locs[3];
                }
                this.tryEntries.push(entry);
            }
            function resetTryEntry(entry) {
                var record = entry.completion || {};
                record.type = \\"normal\\";
                delete record.arg;
                entry.completion = record;
            }
            function Context(tryLocsList) {
                this.tryEntries = [ {
                    tryLoc: \\"root\\"
                } ];
                tryLocsList.forEach(pushTryEntry, this);
                this.reset(true);
            }
            runtime.keys = function(object) {
                var keys = [];
                for (var key in object) {
                    keys.push(key);
                }
                keys.reverse();
                return function next() {
                    while (keys.length) {
                        var key = keys.pop();
                        if (key in object) {
                            next.value = key;
                            next.done = false;
                            return next;
                        }
                    }
                    next.done = true;
                    return next;
                };
            };
            function values(iterable) {
                if (iterable) {
                    var iteratorMethod = iterable[iteratorSymbol];
                    if (iteratorMethod) {
                        return iteratorMethod.call(iterable);
                    }
                    if (typeof iterable.next === \\"function\\") {
                        return iterable;
                    }
                    if (!isNaN(iterable.length)) {
                        var i = -1, next = function next() {
                            while (++i < iterable.length) {
                                if (hasOwn.call(iterable, i)) {
                                    next.value = iterable[i];
                                    next.done = false;
                                    return next;
                                }
                            }
                            next.value = undefined;
                            next.done = true;
                            return next;
                        };
                        return next.next = next;
                    }
                }
                return {
                    next: doneResult
                };
            }
            runtime.values = values;
            function doneResult() {
                return {
                    value: undefined,
                    done: true
                };
            }
            Context.prototype = {
                constructor: Context,
                reset: function reset(skipTempReset) {
                    this.prev = 0;
                    this.next = 0;
                    this.sent = this._sent = undefined;
                    this.done = false;
                    this.delegate = null;
                    this.method = \\"next\\";
                    this.arg = undefined;
                    this.tryEntries.forEach(resetTryEntry);
                    if (!skipTempReset) {
                        for (var name in this) {
                            if (name.charAt(0) === \\"t\\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                                this[name] = undefined;
                            }
                        }
                    }
                },
                stop: function stop() {
                    this.done = true;
                    var rootEntry = this.tryEntries[0];
                    var rootRecord = rootEntry.completion;
                    if (rootRecord.type === \\"throw\\") {
                        throw rootRecord.arg;
                    }
                    return this.rval;
                },
                dispatchException: function dispatchException(exception) {
                    if (this.done) {
                        throw exception;
                    }
                    var context = this;
                    function handle(loc, caught) {
                        record.type = \\"throw\\";
                        record.arg = exception;
                        context.next = loc;
                        if (caught) {
                            context.method = \\"next\\";
                            context.arg = undefined;
                        }
                        return !!caught;
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        var record = entry.completion;
                        if (entry.tryLoc === \\"root\\") {
                            return handle(\\"end\\");
                        }
                        if (entry.tryLoc <= this.prev) {
                            var hasCatch = hasOwn.call(entry, \\"catchLoc\\");
                            var hasFinally = hasOwn.call(entry, \\"finallyLoc\\");
                            if (hasCatch && hasFinally) {
                                if (this.prev < entry.catchLoc) {
                                    return handle(entry.catchLoc, true);
                                } else if (this.prev < entry.finallyLoc) {
                                    return handle(entry.finallyLoc);
                                }
                            } else if (hasCatch) {
                                if (this.prev < entry.catchLoc) {
                                    return handle(entry.catchLoc, true);
                                }
                            } else if (hasFinally) {
                                if (this.prev < entry.finallyLoc) {
                                    return handle(entry.finallyLoc);
                                }
                            } else {
                                throw new Error(\\"try statement without catch or finally\\");
                            }
                        }
                    }
                },
                abrupt: function abrupt(type, arg) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \\"finallyLoc\\") && this.prev < entry.finallyLoc) {
                            var finallyEntry = entry;
                            break;
                        }
                    }
                    if (finallyEntry && (type === \\"break\\" || type === \\"continue\\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                        finallyEntry = null;
                    }
                    var record = finallyEntry ? finallyEntry.completion : {};
                    record.type = type;
                    record.arg = arg;
                    if (finallyEntry) {
                        this.method = \\"next\\";
                        this.next = finallyEntry.finallyLoc;
                        return ContinueSentinel;
                    }
                    return this.complete(record);
                },
                complete: function complete(record, afterLoc) {
                    if (record.type === \\"throw\\") {
                        throw record.arg;
                    }
                    if (record.type === \\"break\\" || record.type === \\"continue\\") {
                        this.next = record.arg;
                    } else if (record.type === \\"return\\") {
                        this.rval = this.arg = record.arg;
                        this.method = \\"return\\";
                        this.next = \\"end\\";
                    } else if (record.type === \\"normal\\" && afterLoc) {
                        this.next = afterLoc;
                    }
                    return ContinueSentinel;
                },
                finish: function finish(finallyLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.finallyLoc === finallyLoc) {
                            this.complete(entry.completion, entry.afterLoc);
                            resetTryEntry(entry);
                            return ContinueSentinel;
                        }
                    }
                },
                catch: function _catch(tryLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc === tryLoc) {
                            var record = entry.completion;
                            if (record.type === \\"throw\\") {
                                var thrown = record.arg;
                                resetTryEntry(entry);
                            }
                            return thrown;
                        }
                    }
                    throw new Error(\\"illegal catch attempt\\");
                },
                delegateYield: function delegateYield(iterable, resultName, nextLoc) {
                    this.delegate = {
                        iterator: values(iterable),
                        resultName: resultName,
                        nextLoc: nextLoc
                    };
                    if (this.method === \\"next\\") {
                        this.arg = undefined;
                    }
                    return ContinueSentinel;
                }
            };
        }(function() {
            return this;
        }() || Function(\\"return this\\")());
    }).call(this, __webpack_require__(17)(module));
}, function(module, exports) {
    module.exports = function(module) {
        if (!module.webpackPolyfill) {
            module.deprecate = function() {};
            module.paths = [];
            if (!module.children) module.children = [];
            Object.defineProperty(module, \\"loaded\\", {
                enumerable: true,
                get: function get() {
                    return module.l;
                }
            });
            Object.defineProperty(module, \\"id\\", {
                enumerable: true,
                get: function get() {
                    return module.i;
                }
            });
            module.webpackPolyfill = 1;
        }
        return module;
    };
}, function(module, exports, __webpack_require__) {}, , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    var taro_runtime = __webpack_require__(1);
    var regenerator = __webpack_require__(8);
    var regenerator_default = __webpack_require__.n(regenerator);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
        try {
            var info = gen[key](arg);
            var value = info.value;
        } catch (error) {
            reject(error);
            return;
        }
        if (info.done) {
            resolve(value);
        } else {
            Promise.resolve(value).then(_next, _throw);
        }
    }
    function _asyncToGenerator(fn) {
        return function() {
            var self = this, args = arguments;
            return new Promise((function(resolve, reject) {
                var gen = fn.apply(self, args);
                function _next(value) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"next\\", value);
                }
                function _throw(err) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"throw\\", err);
                }
                _next(undefined);
            }));
        };
    }
    var classCallCheck = __webpack_require__(3);
    var createClass = __webpack_require__(4);
    var inherits = __webpack_require__(6);
    var createSuper = __webpack_require__(5);
    var react = __webpack_require__(0);
    var taro_components = __webpack_require__(2);
    var index = __webpack_require__(18);
    var index_Index = function(_Component) {
        Object(inherits[\\"a\\"])(Index, _Component);
        var _super = Object(createSuper[\\"a\\"])(Index);
        function Index() {
            Object(classCallCheck[\\"a\\"])(this, Index);
            return _super.apply(this, arguments);
        }
        Object(createClass[\\"a\\"])(Index, [ {
            key: \\"componentWillMount\\",
            value: function() {
                var _componentWillMount = _asyncToGenerator(regenerator_default.a.mark((function _callee() {
                    return regenerator_default.a.wrap((function _callee$(_context) {
                        while (1) {
                            switch (_context.prev = _context.next) {
                              case 0:
                                _context.next = 2;
                                return Promise.resolve(1);

                              case 2:
                              case \\"end\\":
                                return _context.stop();
                            }
                        }
                    }), _callee);
                })));
                function componentWillMount() {
                    return _componentWillMount.apply(this, arguments);
                }
                return componentWillMount;
            }()
        }, {
            key: \\"componentDidMount\\",
            value: function componentDidMount() {}
        }, {
            key: \\"componentWillUnmount\\",
            value: function componentWillUnmount() {}
        }, {
            key: \\"componentDidShow\\",
            value: function componentDidShow() {}
        }, {
            key: \\"componentDidHide\\",
            value: function componentDidHide() {}
        }, {
            key: \\"render\\",
            value: function render() {
                return react[\\"default\\"].createElement(taro_components[\\"View\\"], {
                    className: \\"index\\"
                }, react[\\"default\\"].createElement(taro_components[\\"Text\\"], null, \\"Hello world!\\"), react[\\"default\\"].createElement(taro_components[\\"Input\\"], {
                    placeholder: \\"input\\",
                    value: \\"\\"
                }), react[\\"default\\"].createElement(taro_components[\\"Textarea\\"], {
                    value: \\"\\"
                }));
            }
        } ]);
        return Index;
    }(react[\\"Component\\"]);
    var config = {
        navigationBarTitleText: \\"\\\\u9996\\\\u9875\\"
    };
    var inst = Page(Object(taro_runtime[\\"createPageConfig\\"])(index_Index, \\"pages/index/index\\", {
        root: {
            cn: []
        }
    }, config || {}));
} ], [ [ 20, 0, 1, 3, 2 ] ] ]);

/** filePath: dist/pages/index/index.json **/
{\\"navigationBarTitleText\\":\\"首页\\",\\"usingComponents\\":{\\"custom-wrapper\\":\\"../../custom-wrapper\\",\\"comp\\":\\"../../comp\\"}}

/** filePath: dist/pages/index/index.wxml **/
<import src=\\"../../base.wxml\\"/>
<template is=\\"taro_tmpl\\" data=\\"{{root:root}}\\" />

/** filePath: dist/pages/index/index.wxss **/


/** filePath: dist/runtime.js **/
(function(modules) {
    function webpackJsonpCallback(data) {
        var chunkIds = data[0];
        var moreModules = data[1];
        var executeModules = data[2];
        var moduleId, chunkId, i = 0, resolves = [];
        for (;i < chunkIds.length; i++) {
            chunkId = chunkIds[i];
            if (Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
                resolves.push(installedChunks[chunkId][0]);
            }
            installedChunks[chunkId] = 0;
        }
        for (moduleId in moreModules) {
            if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                modules[moduleId] = moreModules[moduleId];
            }
        }
        if (parentJsonpFunction) parentJsonpFunction(data);
        while (resolves.length) {
            resolves.shift()();
        }
        deferredModules.push.apply(deferredModules, executeModules || []);
        return checkDeferredModules();
    }
    function checkDeferredModules() {
        var result;
        for (var i = 0; i < deferredModules.length; i++) {
            var deferredModule = deferredModules[i];
            var fulfilled = true;
            for (var j = 1; j < deferredModule.length; j++) {
                var depId = deferredModule[j];
                if (installedChunks[depId] !== 0) fulfilled = false;
            }
            if (fulfilled) {
                deferredModules.splice(i--, 1);
                result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
            }
        }
        return result;
    }
    var installedModules = {};
    var installedChunks = {
        0: 0
    };
    var deferredModules = [];
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports;
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports;
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                enumerable: true,
                get: getter
            });
        }
    };
    __webpack_require__.r = function(exports) {
        if (typeof Symbol !== \\"undefined\\" && Symbol.toStringTag) {
            Object.defineProperty(exports, Symbol.toStringTag, {
                value: \\"Module\\"
            });
        }
        Object.defineProperty(exports, \\"__esModule\\", {
            value: true
        });
    };
    __webpack_require__.t = function(value, mode) {
        if (mode & 1) value = __webpack_require__(value);
        if (mode & 8) return value;
        if (mode & 4 && typeof value === \\"object\\" && value && value.__esModule) return value;
        var ns = Object.create(null);
        __webpack_require__.r(ns);
        Object.defineProperty(ns, \\"default\\", {
            enumerable: true,
            value: value
        });
        if (mode & 2 && typeof value != \\"string\\") for (var key in value) __webpack_require__.d(ns, key, function(key) {
            return value[key];
        }.bind(null, key));
        return ns;
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module[\\"default\\"];
        } : function getModuleExports() {
            return module;
        };
        __webpack_require__.d(getter, \\"a\\", getter);
        return getter;
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    __webpack_require__.p = \\"/\\";
    var jsonpArray = wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || [];
    var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
    jsonpArray.push = webpackJsonpCallback;
    jsonpArray = jsonpArray.slice();
    for (var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
    var parentJsonpFunction = oldJsonpFunction;
    checkDeferredModules();
})([]);

/** filePath: dist/taro.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 1 ], {
    1: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        var _unused_webpack_default_export = \\"taro-runtime-mock\\";
    },
    2: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        var _unused_webpack_default_export = \\"taro-components-mock\\";
    },
    9: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_exports__[\\"a\\"] = \\"taro-react-mock\\";
    }
} ]);

/** filePath: dist/utils.wxs **/
module.exports = {
  a: function (l, n, s) {
    var a = [\\"view\\",\\"catch-view\\",\\"cover-view\\",\\"static-view\\",\\"pure-view\\",\\"block\\",\\"text\\",\\"static-text\\",\\"slot\\",\\"slot-view\\",\\"label\\",\\"form\\",\\"scroll-view\\",\\"swiper\\",\\"swiper-item\\"]
    var b = [\\"static-text\\",\\"slot\\",\\"slot-view\\",\\"label\\",\\"form\\",\\"scroll-view\\",\\"swiper\\",\\"swiper-item\\"]
    if (a.indexOf(n) === -1) {
      l = 0
    }
    if (b.indexOf(n) > -1) {
      var u = s.split(',')
      var depth = 0
      for (var i = 0; i < u.length; i++) {
        if (u[i] === n) depth++
      }
      l = depth
    }
    return 'tmpl_' + l + '_' + n
  },
  b: function (a, b) {
    return a === undefined ? b : a
  },
  c: function(i, prefix) {
    var s = i.focus !== undefined ? 'focus' : 'blur'
    return prefix + i.nn + '_' + s
  },
  d: function (i, v) {
    return i === undefined ? v : i
  },
  e: function (n) {
    return 'tmpl_' + n + '_container'
  },
  f: function (l, n) {
    var b = [\\"static-text\\",\\"slot\\",\\"slot-view\\",\\"label\\",\\"form\\",\\"scroll-view\\",\\"swiper\\",\\"swiper-item\\"]
    if (b.indexOf(n) > -1) {
      if (l) l += ','
      l += n
    }
    return l
  }
}

/** filePath: dist/vendors.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 3 ], [ , , , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _classCallCheck;
    }));
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError(\\"Cannot call a class as a function\\");
        }
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createClass;
    }));
    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (\\"value\\" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createSuper;
    }));
    function _getPrototypeOf(o) {
        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
        };
        return _getPrototypeOf(o);
    }
    function _isNativeReflectConstruct() {
        if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === \\"function\\") return true;
        try {
            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    var helpers_typeof = __webpack_require__(7);
    var typeof_default = __webpack_require__.n(helpers_typeof);
    function _assertThisInitialized(self) {
        if (self === void 0) {
            throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
        }
        return self;
    }
    function _possibleConstructorReturn(self, call) {
        if (call && (typeof_default()(call) === \\"object\\" || typeof call === \\"function\\")) {
            return call;
        }
        return _assertThisInitialized(self);
    }
    function _createSuper(Derived) {
        var hasNativeReflectConstruct = _isNativeReflectConstruct();
        return function _createSuperInternal() {
            var Super = _getPrototypeOf(Derived), result;
            if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
            } else {
                result = Super.apply(this, arguments);
            }
            return _possibleConstructorReturn(this, result);
        };
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _inherits;
    }));
    function _setPrototypeOf(o, p) {
        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };
        return _setPrototypeOf(o, p);
    }
    function _inherits(subClass, superClass) {
        if (typeof superClass !== \\"function\\" && superClass !== null) {
            throw new TypeError(\\"Super expression must either be null or a function\\");
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true
            }
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
    }
}, function(module, exports) {
    function _typeof(obj) {
        \\"@babel/helpers - typeof\\";
        if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
            module.exports = _typeof = function _typeof(obj) {
                return typeof obj;
            };
            module.exports[\\"default\\"] = module.exports, module.exports.__esModule = true;
        } else {
            module.exports = _typeof = function _typeof(obj) {
                return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
            };
            module.exports[\\"default\\"] = module.exports, module.exports.__esModule = true;
        }
        return _typeof(obj);
    }
    module.exports = _typeof;
    module.exports[\\"default\\"] = module.exports, module.exports.__esModule = true;
} ] ]);
"
`;
