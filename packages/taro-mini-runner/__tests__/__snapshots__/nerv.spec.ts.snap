// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`nerv should build nerv app 1`] = `14`;

exports[`nerv should build nerv app 2`] = `
"
/** filePath: dist/app.js **/
require(\\"./runtime\\");

require(\\"./vendors\\");

require(\\"./taro\\");

(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 3 ], {
    18: function(module, exports, __webpack_require__) {},
    21: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var runtime_esm = __webpack_require__(3);
        var classCallCheck = __webpack_require__(0);
        var createClass = __webpack_require__(1);
        var possibleConstructorReturn = __webpack_require__(4);
        var getPrototypeOf = __webpack_require__(2);
        var inherits = __webpack_require__(5);
        var index_esm = __webpack_require__(6);
        var app = __webpack_require__(18);
        var app_App = function(_Component) {
            Object(inherits[\\"a\\"])(App, _Component);
            function App() {
                Object(classCallCheck[\\"a\\"])(this, App);
                return Object(possibleConstructorReturn[\\"a\\"])(this, Object(getPrototypeOf[\\"a\\"])(App).apply(this, arguments));
            }
            Object(createClass[\\"a\\"])(App, [ {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {}
            }, {
                key: \\"componentDidShow\\",
                value: function componentDidShow() {}
            }, {
                key: \\"componentDidHide\\",
                value: function componentDidHide() {}
            }, {
                key: \\"componentDidCatchError\\",
                value: function componentDidCatchError() {}
            }, {
                key: \\"render\\",
                value: function render() {
                    return this.props.children;
                }
            } ]);
            return App;
        }(index_esm[\\"a\\"]);
        var lib_src_app = app_App;
        var inst = App(Object(runtime_esm[\\"createReactApp\\"])(lib_src_app, index_esm[\\"b\\"], index_esm[\\"b\\"]));
    }
}, [ [ 21, 0, 1, 2 ] ] ]);



/** filePath: dist/app.json **/
{\\"pages\\":[\\"pages/index/index\\"],\\"window\\":{\\"backgroundTextStyle\\":\\"light\\",\\"navigationBarBackgroundColor\\":\\"#fff\\",\\"navigationBarTitleText\\":\\"WeChat\\",\\"navigationBarTextStyle\\":\\"black\\"}}

/** filePath: dist/app.wxss **/


/** filePath: dist/base.wxml **/

<template name=\\"taro_tmpl\\">
  <block wx:for=\\"{{root.cn}}\\" wx:key=\\"id\\">
    <template is=\\"tmpl_0_container\\" data=\\"{{i: item}}\\" />
  </block>
</template>

<template name=\\"tmpl_0_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_1_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_0_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_1_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_0_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_1_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_0_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_1_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_0_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_0_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_0_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_1_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_2_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_1_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_2_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_1_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_2_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_1_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_2_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_1_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_1_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_1_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_2_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_3_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_2_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_3_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_2_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_3_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_2_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_3_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_2_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_2_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_2_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_3_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_4_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_3_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_4_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_3_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_4_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_3_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_4_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_3_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_3_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_3_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_4_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_5_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_4_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_5_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_4_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_5_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_4_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_5_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_4_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_4_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_4_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_5_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_6_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_5_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_6_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_5_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_6_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_5_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_6_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_5_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_5_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_5_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_6_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_7_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_6_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_7_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_6_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_7_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_6_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_7_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_6_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_6_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_6_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_7_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_8_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_7_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_8_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_7_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_8_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_7_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_8_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_7_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_7_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_7_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_8_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_9_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_8_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_9_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_8_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_9_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_8_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_9_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_8_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_8_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_8_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_9_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_10_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_9_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_10_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_9_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_10_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_9_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_10_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_9_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_9_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_9_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_10_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_11_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_10_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_11_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_10_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_11_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_10_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_11_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_10_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_10_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_10_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_11_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_12_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_11_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_12_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_11_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_12_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_11_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_12_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_11_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_11_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_11_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_12_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_13_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_12_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_13_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_12_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_13_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_12_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_13_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_12_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_12_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_12_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_13_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_14_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_13_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_14_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_13_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_14_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_13_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_14_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_13_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_13_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_13_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_14_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_15_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_14_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_15_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_14_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_15_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_14_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_15_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_14_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_14_container\\" data=\\"{{i: i}}\\">
  <template is=\\"{{'tmpl_14_' + i.nn}}\\" data=\\"{{i: i}}\\" />
</template>

<template name=\\"tmpl_15_view\\">
  <view hover-class=\\"{{ i.hoverClass === undefined ? 'none' : i.hoverClass }}\\" hover-stop-propagation=\\"{{ i.hoverStopPropagation === undefined ? false : i.hoverStopPropagation }}\\" hover-start-time=\\"{{ i.hoverStartTime === undefined ? 50 : i.hoverStartTime }}\\" hover-stay-time=\\"{{ i.hoverStayTime === undefined ? 400 : i.hoverStayTime }}\\" animation=\\"{{ i.animation }}\\" bindanimationend=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_16_container\\" data=\\"{{i: item}}\\" />
    </block>
  </view>
</template>

<template name=\\"tmpl_15_text\\">
  <text selectable=\\"{{ i.selectable === undefined ? false : i.selectable }}\\" space=\\"{{ i.space }}\\" decode=\\"{{ i.decode === undefined ? false : i.decode }}\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_16_container\\" data=\\"{{i: item}}\\" />
    </block>
  </text>
</template>

<template name=\\"tmpl_15_scroll-view\\">
  <scroll-view scroll-x=\\"{{ i.scrollX === undefined ? false : i.scrollX }}\\" scroll-y=\\"{{ i.scrollY === undefined ? false : i.scrollY }}\\" upper-threshold=\\"{{ i.upperThreshold === undefined ? 50 : i.upperThreshold }}\\" lower-threshold=\\"{{ i.lowerThreshold === undefined ? 50 : i.lowerThreshold }}\\" scroll-top=\\"{{ i.scrollTop }}\\" scroll-left=\\"{{ i.scrollLeft }}\\" scroll-into-view=\\"{{ i.scrollIntoView }}\\" scroll-with-animation=\\"{{ i.scrollWithAnimation === undefined ? false : i.scrollWithAnimation }}\\" enable-back-to-top=\\"{{ i.enableBackToTop === undefined ? false : i.enableBackToTop }}\\" enable-flex=\\"{{ i.enableFlex === undefined ? false : i.enableFlex }}\\" scroll-anchoring=\\"{{ i.scrollAnchoring === undefined ?  false : i.scrollAnchoring }}\\" bindscrolltoupper=\\"eh\\" bindscrolltolower=\\"eh\\" bindscroll=\\"eh\\" bindtouchstart=\\"eh\\" bindtouchmove=\\"eh\\" bindtouchend=\\"eh\\" bindtouchcancel=\\"eh\\" bindlongpress=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_16_container\\" data=\\"{{i: item}}\\" />
    </block>
  </scroll-view>
</template>

<template name=\\"tmpl_15_image\\">
  <image src=\\"{{ i.src }}\\" mode=\\"{{ i.mode === undefined ? 'scaleToFill' : i.mode }}\\" webp=\\"{{ i.webp === undefined ? false : i.webp }}\\" lazy-load=\\"{{ i.lazyLoad === undefined ? false : i.lazyLoad }}\\" show-menu-by-longpress=\\"{{ i.showMenuByLongpress === undefined ? false : i.showMenuByLongpress }}\\" binderror=\\"eh\\" bindload=\\"eh\\" style=\\"{{ i.st }}\\" class=\\"{{ i.cl }}\\" bindtap=\\"eh\\"  id=\\"{{ i.uid }}\\">
    <block wx:for=\\"{{i.cn}}\\" wx:key=\\"id\\">
      <template is=\\"tmpl_16_container\\" data=\\"{{i: item}}\\" />
    </block>
  </image>
</template>

<template name=\\"tmpl_15_#text\\" data=\\"{{i: i}}\\">
  <block>{{i.v}}</block>
</template>

<template name=\\"tmpl_15_container\\" data=\\"{{i: i}}\\">
  <comp i=\\"{{i}}\\" />
</template>


/** filePath: dist/comp.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 5 ], {
    19: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var _tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
        Component(Object(_tarojs_runtime__WEBPACK_IMPORTED_MODULE_0__[\\"createRecursiveComponentConfig\\"])());
    }
}, [ [ 19, 0, 1, 2 ] ] ]);

/** filePath: dist/comp.json **/
{\\"component\\":true,\\"usingComponents\\":{\\"comp\\":\\"./comp\\"}}

/** filePath: dist/comp.wxml **/
<import src=\\"./base.wxml\\" />
<template is=\\"tmpl_0_container\\" data=\\"{{i: i}}\\" />

/** filePath: dist/pages/index/index.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 6 ], {
    20: function(module, exports, __webpack_require__) {},
    22: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        var runtime_esm = __webpack_require__(3);
        var classCallCheck = __webpack_require__(0);
        var createClass = __webpack_require__(1);
        var possibleConstructorReturn = __webpack_require__(4);
        var getPrototypeOf = __webpack_require__(2);
        var inherits = __webpack_require__(5);
        var index_esm = __webpack_require__(6);
        var mini = __webpack_require__(12);
        var index = __webpack_require__(20);
        var index_Index = function(_Component) {
            Object(inherits[\\"a\\"])(Index, _Component);
            function Index() {
                Object(classCallCheck[\\"a\\"])(this, Index);
                return Object(possibleConstructorReturn[\\"a\\"])(this, Object(getPrototypeOf[\\"a\\"])(Index).apply(this, arguments));
            }
            Object(createClass[\\"a\\"])(Index, [ {
                key: \\"componentDidMount\\",
                value: function componentDidMount() {}
            }, {
                key: \\"componentWillUnmount\\",
                value: function componentWillUnmount() {}
            }, {
                key: \\"componentDidShow\\",
                value: function componentDidShow() {}
            }, {
                key: \\"componentDidHide\\",
                value: function componentDidHide() {}
            }, {
                key: \\"render\\",
                value: function render() {
                    return index_esm[\\"b\\"].createElement(mini[\\"b\\"], {
                        className: \\"index\\"
                    }, index_esm[\\"b\\"].createElement(mini[\\"a\\"], null, \\"Hello world!\\"));
                }
            } ]);
            return Index;
        }(index_esm[\\"a\\"]);
        var inst = Page(Object(runtime_esm[\\"createPageConfig\\"])(index_Index, \\"pages/index/index\\"));
    }
}, [ [ 22, 0, 1, 2 ] ] ]);

/** filePath: dist/pages/index/index.json **/
{\\"navigationBarTitleText\\":\\"首页\\",\\"usingComponents\\":{\\"comp\\":\\"../../comp\\"}}

/** filePath: dist/pages/index/index.wxml **/
<import src=\\"../../base.wxml\\"/>
<template is=\\"taro_tmpl\\" data=\\"{{root: root}}\\" />

/** filePath: dist/pages/index/index.wxss **/


/** filePath: dist/runtime.js **/
(function(modules) {
    function webpackJsonpCallback(data) {
        var chunkIds = data[0];
        var moreModules = data[1];
        var executeModules = data[2];
        var moduleId, chunkId, i = 0, resolves = [];
        for (;i < chunkIds.length; i++) {
            chunkId = chunkIds[i];
            if (Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
                resolves.push(installedChunks[chunkId][0]);
            }
            installedChunks[chunkId] = 0;
        }
        for (moduleId in moreModules) {
            if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                modules[moduleId] = moreModules[moduleId];
            }
        }
        if (parentJsonpFunction) parentJsonpFunction(data);
        while (resolves.length) {
            resolves.shift()();
        }
        deferredModules.push.apply(deferredModules, executeModules || []);
        return checkDeferredModules();
    }
    function checkDeferredModules() {
        var result;
        for (var i = 0; i < deferredModules.length; i++) {
            var deferredModule = deferredModules[i];
            var fulfilled = true;
            for (var j = 1; j < deferredModule.length; j++) {
                var depId = deferredModule[j];
                if (installedChunks[depId] !== 0) fulfilled = false;
            }
            if (fulfilled) {
                deferredModules.splice(i--, 1);
                result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
            }
        }
        return result;
    }
    var installedModules = {};
    var installedChunks = {
        0: 0
    };
    var deferredModules = [];
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports;
        }
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports;
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.d = function(exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {
                enumerable: true,
                get: getter
            });
        }
    };
    __webpack_require__.r = function(exports) {
        if (typeof Symbol !== \\"undefined\\" && Symbol.toStringTag) {
            Object.defineProperty(exports, Symbol.toStringTag, {
                value: \\"Module\\"
            });
        }
        Object.defineProperty(exports, \\"__esModule\\", {
            value: true
        });
    };
    __webpack_require__.t = function(value, mode) {
        if (mode & 1) value = __webpack_require__(value);
        if (mode & 8) return value;
        if (mode & 4 && typeof value === \\"object\\" && value && value.__esModule) return value;
        var ns = Object.create(null);
        __webpack_require__.r(ns);
        Object.defineProperty(ns, \\"default\\", {
            enumerable: true,
            value: value
        });
        if (mode & 2 && typeof value != \\"string\\") for (var key in value) __webpack_require__.d(ns, key, function(key) {
            return value[key];
        }.bind(null, key));
        return ns;
    };
    __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module[\\"default\\"];
        } : function getModuleExports() {
            return module;
        };
        __webpack_require__.d(getter, \\"a\\", getter);
        return getter;
    };
    __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    };
    __webpack_require__.p = \\"/\\";
    var jsonpArray = wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || [];
    var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
    jsonpArray.push = webpackJsonpCallback;
    jsonpArray = jsonpArray.slice();
    for (var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
    var parentJsonpFunction = oldJsonpFunction;
    checkDeferredModules();
})([]);

/** filePath: dist/taro.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 1 ], {
    12: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.d(__webpack_exports__, \\"b\\", (function() {
            return View;
        }));
        __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
            return Text;
        }));
        var View = \\"view\\";
        var Icon = \\"icon\\";
        var Progress = \\"progress\\";
        var RichText = \\"rich-text\\";
        var Text = \\"text\\";
        var Button = \\"button\\";
        var Checkbox = \\"checkbox\\";
        var CheckboxGroup = \\"checkbox-group\\";
        var Editor = \\"editor\\";
        var Form = \\"form\\";
        var Input = \\"input\\";
        var Label = \\"label\\";
        var Picker = \\"picker\\";
        var PickerView = \\"picker-view\\";
        var PickerViewColumn = \\"picker-view-column\\";
        var Radio = \\"radio\\";
        var RadioGroup = \\"radio-group\\";
        var Slider = \\"slider\\";
        var Switch = \\"switch\\";
        var CoverImage = \\"cover-image\\";
        var Textarea = \\"textarea\\";
        var CoverView = \\"cover-view\\";
        var MoveableArea = \\"moveable-area\\";
        var MoveableView = \\"moveable-view\\";
        var ScrollView = \\"scroll-view\\";
        var Swiper = \\"swiper\\";
        var SwiperItem = \\"swiper-item\\";
        var FunctionalPageNavigator = \\"functional-page-navigator\\";
        var Navigator = \\"navigator\\";
        var Audio = \\"audio\\";
        var Camera = \\"camera\\";
        var Image = \\"image\\";
        var LivePlayer = \\"live-player\\";
        var LivePusher = \\"live-pusher\\";
        var Video = \\"video\\";
        var Map = \\"map\\";
        var Canvas = \\"canvas\\";
        var Ad = \\"ad\\";
        var OfficialAccount = \\"official-account\\";
        var OpenData = \\"open-data\\";
        var WebView = \\"web-view\\";
        var NavigationBar = \\"navigation-bar\\";
        var Block = \\"block\\";
        var MovableArea = \\"movable-area\\";
        var MovableView = \\"movable-view\\";
    },
    3: function(module, __webpack_exports__, __webpack_require__) {
        \\"use strict\\";
        __webpack_require__.r(__webpack_exports__);
        (function(document, window, requestAnimationFrame, cancelAnimationFrame) {
            __webpack_require__.d(__webpack_exports__, \\"Current\\", (function() {
                return Current;
            }));
            __webpack_require__.d(__webpack_exports__, \\"Events\\", (function() {
                return Events;
            }));
            __webpack_require__.d(__webpack_exports__, \\"FormElement\\", (function() {
                return FormElement;
            }));
            __webpack_require__.d(__webpack_exports__, \\"Style\\", (function() {
                return Style;
            }));
            __webpack_require__.d(__webpack_exports__, \\"TaroElement\\", (function() {
                return TaroElement;
            }));
            __webpack_require__.d(__webpack_exports__, \\"TaroEvent\\", (function() {
                return TaroEvent;
            }));
            __webpack_require__.d(__webpack_exports__, \\"TaroNode\\", (function() {
                return TaroNode;
            }));
            __webpack_require__.d(__webpack_exports__, \\"TaroRootElement\\", (function() {
                return TaroRootElement;
            }));
            __webpack_require__.d(__webpack_exports__, \\"TaroText\\", (function() {
                return TaroText;
            }));
            __webpack_require__.d(__webpack_exports__, \\"cancelAnimationFrame\\", (function() {
                return caf;
            }));
            __webpack_require__.d(__webpack_exports__, \\"connectReactPage\\", (function() {
                return connectReactPage;
            }));
            __webpack_require__.d(__webpack_exports__, \\"connectVuePage\\", (function() {
                return connectVuePage;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createComponentConfig\\", (function() {
                return createComponentConfig;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createDocument\\", (function() {
                return createDocument;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createEvent\\", (function() {
                return createEvent;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createPageConfig\\", (function() {
                return createPageConfig;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createReactApp\\", (function() {
                return createReactApp;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createRecursiveComponentConfig\\", (function() {
                return createRecursiveComponentConfig;
            }));
            __webpack_require__.d(__webpack_exports__, \\"createVueApp\\", (function() {
                return createVueApp;
            }));
            __webpack_require__.d(__webpack_exports__, \\"document\\", (function() {
                return document$1;
            }));
            __webpack_require__.d(__webpack_exports__, \\"eventCenter\\", (function() {
                return eventCenter;
            }));
            __webpack_require__.d(__webpack_exports__, \\"hydrate\\", (function() {
                return hydrate;
            }));
            __webpack_require__.d(__webpack_exports__, \\"injectPageInstance\\", (function() {
                return injectPageInstance;
            }));
            __webpack_require__.d(__webpack_exports__, \\"navigator\\", (function() {
                return navigator;
            }));
            __webpack_require__.d(__webpack_exports__, \\"nextTick\\", (function() {
                return nextTick;
            }));
            __webpack_require__.d(__webpack_exports__, \\"now\\", (function() {
                return now;
            }));
            __webpack_require__.d(__webpack_exports__, \\"options\\", (function() {
                return options;
            }));
            __webpack_require__.d(__webpack_exports__, \\"requestAnimationFrame\\", (function() {
                return raf;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useDidHide\\", (function() {
                return useDidHide;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useDidShow\\", (function() {
                return useDidShow;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useOptionMenuClick\\", (function() {
                return useOptionMenuClick;
            }));
            __webpack_require__.d(__webpack_exports__, \\"usePageScroll\\", (function() {
                return usePageScroll;
            }));
            __webpack_require__.d(__webpack_exports__, \\"usePullDownRefresh\\", (function() {
                return usePullDownRefresh;
            }));
            __webpack_require__.d(__webpack_exports__, \\"usePullIntercept\\", (function() {
                return usePullIntercept;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useReachBottom\\", (function() {
                return useReachBottom;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useReady\\", (function() {
                return useReady;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useResize\\", (function() {
                return useResize;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useRouter\\", (function() {
                return useRouter;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useScope\\", (function() {
                return useScope;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useShareAppMessage\\", (function() {
                return useShareAppMessage;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useTabItemTap\\", (function() {
                return useTabItemTap;
            }));
            __webpack_require__.d(__webpack_exports__, \\"useTitleClick\\", (function() {
                return useTitleClick;
            }));
            __webpack_require__.d(__webpack_exports__, \\"window\\", (function() {
                return window$1;
            }));
            var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
            var _babel_runtime_helpers_esm_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);
            var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
            var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
            var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9);
            var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5);
            var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13);
            var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7);
            var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(0);
            var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(1);
            var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(11);
            function isString(o) {
                return typeof o === \\"string\\";
            }
            function isUndefined(o) {
                return typeof o === \\"undefined\\";
            }
            function isObject(o) {
                return o !== null && Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_10__[\\"a\\"])(o) === \\"object\\";
            }
            function isFunction(o) {
                return typeof o === \\"function\\";
            }
            function isBooleanStringLiteral(o) {
                return o === \\"true\\" || o === \\"false\\";
            }
            var isArray = Array.isArray;
            var EMPTY_OBJ = {};
            var noop = function noop() {};
            function toDashed(s) {
                return s.replace(/([a-z0-9])([A-Z])/g, \\"$1-$2\\").toLowerCase();
            }
            function toCamelCase(s) {
                var camel = \\"\\";
                var nextCap = false;
                for (var i = 0; i < s.length; i++) {
                    if (s[i] !== \\"-\\") {
                        camel += nextCap ? s[i].toUpperCase() : s[i];
                        nextCap = false;
                    } else {
                        nextCap = true;
                    }
                }
                return camel;
            }
            function capitalize(s) {
                return s.charAt(0).toUpperCase() + s.slice(1);
            }
            var hasOwnProperty = Object.prototype.hasOwnProperty;
            var hasOwn = function hasOwn(val, key) {
                return hasOwnProperty.call(val, key);
            };
            var reportIssue = \\"\\\\u5982\\\\u6709\\\\u7591\\\\u95ee\\\\uff0c\\\\u8bf7\\\\u63d0\\\\u4ea4 issue \\\\u81f3\\\\uff1ahttps://github.com/nervjs/taro/issues\\";
            function ensure(condition, msg) {
                if (condition) {
                    return;
                }
                throw new Error(msg + \\"\\\\n\\" + reportIssue);
            }
            function warn(condition, msg) {
                if (false) {}
            }
            var touchEvents = {
                bindTouchStart: \\"\\",
                bindTouchMove: \\"\\",
                bindTouchEnd: \\"\\",
                bindTouchCancel: \\"\\",
                bindLongTap: \\"\\"
            };
            var View = Object.assign({
                \\"hover-class\\": singleQuote(\\"none\\"),
                \\"hover-stop-propagation\\": \\"false\\",
                \\"hover-start-time\\": \\"50\\",
                \\"hover-stay-time\\": \\"400\\",
                animation: \\"\\",
                bindAnimationEnd: \\"\\"
            }, touchEvents);
            var Icon = {
                type: \\"\\",
                size: \\"23\\",
                color: \\"\\"
            };
            var Map$1 = Object.assign({
                longitude: \\"\\",
                latitude: \\"\\",
                scale: \\"16\\",
                markers: \\"\\",
                covers: \\"\\",
                polyline: \\"\\",
                circles: \\"\\",
                controls: \\"\\",
                \\"include-point\\": \\"false\\",
                \\"show-location\\": \\"\\",
                polygons: \\"\\",
                subkey: \\"\\",
                \\"layer-style\\": \\"1\\",
                rotate: \\"0\\",
                skew: \\"skew\\",
                \\"enable-3D\\": \\"false\\",
                \\"show-compass\\": \\"false\\",
                \\"show-scale\\": \\"false\\",
                \\"enable-overlooking\\": \\"false\\",
                \\"enable-zoom\\": \\"true\\",
                \\"enable-scroll\\": \\"true\\",
                \\"enable-rotate\\": \\"false\\",
                \\"enable-satellite\\": \\"false\\",
                \\"enable-traffic\\": \\"false\\",
                setting: \\"\\",
                bindMarkerTap: \\"\\",
                bindLabelTap: \\"\\",
                bindControlTap: \\"\\",
                bindCalloutTap: \\"\\",
                bindUpdated: \\"\\",
                bindRegionChange: \\"\\",
                bindPoiTap: \\"\\"
            }, touchEvents);
            var Progress = {
                percent: \\"\\",
                \\"show-info\\": \\"false\\",
                \\"border-radius\\": \\"0\\",
                \\"font-size\\": \\"16\\",
                \\"stroke-width\\": \\"6\\",
                color: singleQuote(\\"#09BB07\\"),
                activeColor: singleQuote(\\"#09BB07\\"),
                backgroundColor: singleQuote(\\"#EBEBEB\\"),
                active: \\"false\\",
                \\"active-mode\\": singleQuote(\\"backwards\\"),
                duration: \\"30\\",
                bindActiveEnd: \\"\\"
            };
            var RichText = {
                nodes: \\"[]\\",
                space: \\"\\"
            };
            var Text = {
                selectable: \\"false\\",
                space: \\"\\",
                decode: \\"false\\"
            };
            var Button = {
                size: singleQuote(\\"default\\"),
                type: \\"\\",
                plain: \\"false\\",
                disabled: \\"\\",
                loading: \\"false\\",
                \\"form-type\\": \\"\\",
                \\"open-type\\": \\"\\",
                \\"hover-class\\": singleQuote(\\"button-hover\\"),
                \\"hover-stop-propagation\\": \\"false\\",
                \\"hover-start-time\\": \\"20\\",
                \\"hover-stay-time\\": \\"70\\",
                lang: \\"en\\",
                \\"session-from\\": \\"\\",
                \\"send-message-title\\": \\"\\",
                \\"send-message-path\\": \\"\\",
                \\"send-message-img\\": \\"\\",
                \\"app-parameter\\": \\"\\",
                \\"show-message-card\\": \\"false\\",
                bindGetUserInfo: \\"\\",
                bindContact: \\"\\",
                bindGetPhoneNumber: \\"\\",
                bindError: \\"\\",
                bindOpenSetting: \\"\\",
                bindLaunchApp: \\"\\",
                name: \\"\\"
            };
            if (false) {}
            var Checkbox = {
                value: \\"\\",
                disabled: \\"\\",
                checked: \\"false\\",
                color: singleQuote(\\"#09BB07\\"),
                name: \\"\\"
            };
            var CheckboxGroup = {
                bindChange: \\"\\",
                name: \\"\\"
            };
            var Editor = {
                \\"read-only\\": \\"false\\",
                placeholder: \\"\\",
                \\"show-img-size\\": \\"false\\",
                \\"show-img-toolbar\\": \\"false\\",
                \\"show-img-resize\\": \\"false\\",
                focus: \\"false\\",
                bindReady: \\"\\",
                bindFocus: \\"\\",
                bindBlur: \\"\\",
                bindInput: \\"\\",
                bindStatusChange: \\"\\",
                name: \\"\\"
            };
            var Form = {
                \\"report-submit\\": \\"false\\",
                \\"report-submit-timeout\\": \\"0\\",
                bindSubmit: \\"\\",
                bindReset: \\"\\",
                name: \\"\\"
            };
            var Input = {
                value: \\"\\",
                type: singleQuote(\\"\\"),
                password: \\"false\\",
                placeholder: \\"\\",
                \\"placeholder-style\\": \\"\\",
                \\"placeholder-class\\": singleQuote(\\"input-placeholder\\"),
                disabled: \\"\\",
                maxlength: \\"140\\",
                \\"cursor-spacing\\": \\"0\\",
                \\"auto-focus\\": \\"false\\",
                focus: \\"false\\",
                \\"confirm-type\\": singleQuote(\\"done\\"),
                \\"confirm-hold\\": \\"false\\",
                cursor: \\"\\",
                \\"selection-start\\": \\"-1\\",
                \\"selection-end\\": \\"-1\\",
                \\"adjust-position\\": \\"true\\",
                \\"hold-keyboard\\": \\"false\\",
                bindInput: \\"\\",
                bindFocus: \\"\\",
                bindBlur: \\"\\",
                bindConfirm: \\"\\",
                bindKeyboardHeightChange: \\"\\",
                name: \\"\\"
            };
            var Label = {
                for: \\"\\",
                name: \\"\\"
            };
            var Picker = {
                mode: singleQuote(\\"selector\\"),
                disabled: \\"\\",
                bindCancel: \\"\\",
                range: \\"\\",
                \\"range-key\\": \\"\\",
                value: \\"\\",
                bindChange: \\"\\",
                bindColumnChange: \\"\\",
                start: \\"\\",
                end: \\"\\",
                fields: singleQuote(\\"day\\"),
                \\"custom-item\\": \\"\\",
                name: \\"\\"
            };
            var PickerView = {
                value: \\"\\",
                \\"indicator-style\\": \\"\\",
                \\"indicator-class\\": \\"\\",
                \\"mask-style\\": \\"\\",
                \\"mask-class\\": \\"\\",
                bindChange: \\"\\",
                bindPickStart: \\"\\",
                bindPickEnd: \\"\\",
                name: \\"\\"
            };
            var PickerViewColumn = {
                name: \\"\\"
            };
            var Radio = {
                value: \\"\\",
                checked: \\"false\\",
                disabled: \\"\\",
                color: singleQuote(\\"#09BB07\\"),
                name: \\"\\"
            };
            var RadioGroup = {
                bindChange: \\"\\",
                name: \\"\\"
            };
            var Slider = {
                min: \\"0\\",
                max: \\"100\\",
                step: \\"1\\",
                disabled: \\"\\",
                value: \\"0\\",
                color: singleQuote(\\"#e9e9e9\\"),
                \\"selected-color\\": singleQuote(\\"#1aad19\\"),
                activeColor: singleQuote(\\"#1aad19\\"),
                backgroundColor: singleQuote(\\"#e9e9e9\\"),
                \\"block-size\\": \\"28\\",
                \\"block-color\\": singleQuote(\\"#ffffff\\"),
                \\"show-value\\": \\"false\\",
                bindChange: \\"\\",
                bindChanging: \\"\\",
                name: \\"\\"
            };
            var Switch = {
                checked: \\"false\\",
                disabled: \\"\\",
                type: singleQuote(\\"switch\\"),
                color: singleQuote(\\"#04BE02\\"),
                bindChange: \\"\\",
                name: \\"\\"
            };
            var CoverImage = {
                src: \\"\\",
                bindLoad: \\"eh\\",
                bindError: \\"eh\\"
            };
            var Textarea = {
                value: \\"\\",
                placeholder: \\"\\",
                \\"placeholder-style\\": \\"\\",
                \\"placeholder-class\\": singleQuote(\\"textarea-placeholder\\"),
                disabled: \\"\\",
                maxlength: \\"140\\",
                \\"auto-focus\\": \\"false\\",
                focus: \\"false\\",
                \\"auto-height\\": \\"false\\",
                fixed: \\"false\\",
                \\"cursor-spacing\\": \\"0\\",
                cursor: \\"-1\\",
                \\"show-confirm-bar\\": \\"true\\",
                \\"selection-start\\": \\"-1\\",
                \\"selection-end\\": \\"-1\\",
                \\"adjust-position\\": \\"true\\",
                \\"hold-keyboard\\": \\"false\\",
                bindFocus: \\"\\",
                bindBlur: \\"\\",
                bindLineChange: \\"\\",
                bindInput: \\"\\",
                bindConfirm: \\"\\",
                bindKeyboardHeightChange: \\"\\",
                name: \\"\\"
            };
            var CoverView = Object.assign({
                \\"scroll-top\\": \\"false\\"
            }, touchEvents);
            var MovableArea = {
                \\"scale-area\\": \\"false\\"
            };
            var MovableView = Object.assign({
                direction: \\"none\\",
                inertia: \\"false\\",
                \\"out-of-bounds\\": \\"false\\",
                x: \\"\\",
                y: \\"\\",
                damping: \\"20\\",
                friction: \\"2\\",
                disabled: \\"\\",
                scale: \\"false\\",
                \\"scale-min\\": \\"0.5\\",
                \\"scale-max\\": \\"10\\",
                \\"scale-value\\": \\"1\\",
                animation: \\"true\\",
                bindAnimationEnd: \\"\\",
                bindChange: \\"\\",
                bindScale: \\"\\",
                htouchmove: \\"\\",
                vtouchmove: \\"\\",
                width: singleQuote(\\"10px\\"),
                height: singleQuote(\\"10px\\")
            }, touchEvents);
            var ScrollView = Object.assign({
                \\"scroll-x\\": \\"false\\",
                \\"scroll-y\\": \\"false\\",
                \\"upper-threshold\\": \\"50\\",
                \\"lower-threshold\\": \\"50\\",
                \\"scroll-top\\": \\"\\",
                \\"scroll-left\\": \\"\\",
                \\"scroll-into-view\\": \\"\\",
                \\"scroll-with-animation\\": \\"false\\",
                \\"enable-back-to-top\\": \\"false\\",
                \\"enable-flex\\": \\"false\\",
                \\"scroll-anchoring\\": \\" false\\",
                bindScrolltoUpper: \\"\\",
                bindScrolltoLower: \\"\\",
                bindScroll: \\"\\"
            }, touchEvents);
            function singleQuote(s) {
                return \\"'\\".concat(s, \\"'\\");
            }
            var Swiper = {
                \\"indicator-dots\\": \\"false\\",
                \\"indicator-color\\": singleQuote(\\"rgba(0, 0, 0, .3)\\"),
                \\"indicator-active-color\\": singleQuote(\\"#000000\\"),
                autoplay: \\"false\\",
                current: \\"0\\",
                interval: \\"5000\\",
                duration: \\"500\\",
                circular: \\"false\\",
                vertical: \\"false\\",
                \\"previous-margin\\": \\"'0px'\\",
                \\"next-margin\\": \\"'0px'\\",
                \\"display-multiple-items\\": \\"1\\",
                \\"skip-hidden-item-layout\\": \\"false\\",
                \\"easing-function\\": singleQuote(\\"default\\"),
                bindChange: \\"\\",
                bindTransition: \\"\\",
                bindAnimationFinish: \\"\\"
            };
            var SwiperItem = {
                \\"item-id\\": \\"\\"
            };
            var FunctionalPageNavigator = {
                version: singleQuote(\\"release\\"),
                name: \\"\\",
                args: \\"\\",
                bindSuccess: \\"\\",
                bindFail: \\"\\",
                bindCancel: \\"\\"
            };
            var Navigator = {
                target: singleQuote(\\"self\\"),
                url: \\"\\",
                \\"open-type\\": singleQuote(\\"navigate\\"),
                delta: \\"1\\",
                \\"app-id\\": \\"\\",
                path: \\"\\",
                \\"extra-data\\": \\"\\",
                version: singleQuote(\\"version\\"),
                \\"hover-class\\": singleQuote(\\"navigator-hover\\"),
                \\"hover-stop-propagation\\": \\"false\\",
                \\"hover-start-time\\": \\"50\\",
                \\"hover-stay-time\\": \\"600\\",
                bindSuccess: \\"\\",
                bindFail: \\"\\",
                bindComplete: \\"\\"
            };
            var Audio = {
                id: \\"\\",
                src: \\"\\",
                loop: \\"false\\",
                controls: \\"false\\",
                poster: \\"\\",
                name: \\"\\",
                author: \\"\\",
                bindError: \\"\\",
                bindPlay: \\"\\",
                bindPause: \\"\\",
                bindTimeUpdate: \\"\\",
                bindEnded: \\"\\"
            };
            var Camera = {
                mode: singleQuote(\\"normal\\"),
                \\"device-position\\": singleQuote(\\"back\\"),
                flash: singleQuote(\\"auto\\"),
                \\"frame-size\\": singleQuote(\\"medium\\"),
                bindStop: \\"\\",
                bindError: \\"\\",
                bindInitDone: \\"\\",
                bindScanCode: \\"\\"
            };
            var Image = {
                src: \\"\\",
                mode: singleQuote(\\"scaleToFill\\"),
                webp: \\"false\\",
                \\"lazy-load\\": \\"false\\",
                \\"show-menu-by-longpress\\": \\"false\\",
                bindError: \\"\\",
                bindLoad: \\"\\"
            };
            var LivePlayer = {
                src: \\"\\",
                mode: singleQuote(\\"live\\"),
                autoplay: \\"false\\",
                muted: \\"false\\",
                orientation: singleQuote(\\"vertical\\"),
                \\"object-fit\\": singleQuote(\\"contain\\"),
                \\"background-mute\\": \\"false\\",
                \\"min-cache\\": \\"1\\",
                \\"max-cache\\": \\"3\\",
                \\"sound-mode\\": singleQuote(\\"speaker\\"),
                \\"auto-pause-if-navigate\\": \\"true\\",
                \\"auto-pause-if-open-native\\": \\"true\\",
                bindStateChange: \\"\\",
                bindFullScreenChange: \\"\\",
                bindNetStatus: \\"\\"
            };
            var LivePusher = {
                url: \\"\\",
                mode: singleQuote(\\"RTC\\"),
                autopush: \\"false\\",
                muted: \\"false\\",
                \\"enable-camera\\": \\"true\\",
                \\"auto-focus\\": \\"true\\",
                orientation: singleQuote(\\"vertical\\"),
                beauty: \\"0\\",
                whiteness: \\"0\\",
                aspect: singleQuote(\\"9:16\\"),
                \\"min-bitrate\\": \\"200\\",
                \\"max-bitrate\\": \\"1000\\",
                \\"audio-quality\\": singleQuote(\\"high\\"),
                \\"waiting-image\\": \\"\\",
                \\"waiting-image-hash\\": \\"\\",
                zoom: \\"false\\",
                \\"device-position\\": singleQuote(\\"front\\"),
                \\"background-mute\\": \\"false\\",
                mirror: \\"false\\",
                \\"remote-mirror\\": \\"false\\",
                \\"local-mirror\\": \\"false\\",
                \\"audio-reverb-type\\": \\"0\\",
                \\"enable-mic\\": \\"true\\",
                \\"enable-agc\\": \\"false\\",
                \\"enable-ans\\": \\"false\\",
                \\"audio-volume-type\\": singleQuote(\\"voicecall\\"),
                \\"video-width\\": \\"360\\",
                \\"video-height\\": \\"640\\",
                bindStateChange: \\"\\",
                bindNetStatus: \\"\\",
                bindBgmStart: \\"\\",
                bindBgmProgress: \\"\\",
                bindBgmComplete: \\"\\"
            };
            var Video = {
                src: \\"\\",
                duration: \\"\\",
                controls: \\"true\\",
                \\"danmu-list\\": \\"\\",
                \\"danmu-btn\\": \\"\\",
                \\"enable-danmu\\": \\"\\",
                autoplay: \\"false\\",
                loop: \\"false\\",
                muted: \\"false\\",
                \\"initial-time\\": \\"0\\",
                \\"page-gesture\\": \\"false\\",
                direction: \\"\\",
                \\"show-progress\\": \\"true\\",
                \\"show-fullscreen-btn\\": \\"true\\",
                \\"show-play-btn\\": \\"true\\",
                \\"show-center-play-btn\\": \\"true\\",
                \\"enable-progress-gesture\\": \\"true\\",
                \\"object-fit\\": singleQuote(\\"contain\\"),
                poster: \\"\\",
                \\"show-mute-btn\\": \\"false\\",
                title: \\"\\",
                \\"play-btn-position\\": singleQuote(\\"bottom\\"),
                \\"enable-play-gesture\\": \\"false\\",
                \\"auto-pause-if-navigate\\": \\"true\\",
                \\"auto-pause-if-open-native\\": \\"true\\",
                \\"vslide-gesture\\": \\"false\\",
                \\"vslide-gesture-in-fullscreen\\": \\"true\\",
                \\"ad-unit-id\\": \\"\\",
                bindPlay: \\"\\",
                bindPause: \\"\\",
                bindEnded: \\"\\",
                bindTimeUpdate: \\"\\",
                bindFullScreenChange: \\"\\",
                bindWaiting: \\"\\",
                bindError: \\"\\",
                bindProgress: \\"\\",
                bindLoadedMetadata: \\"\\"
            };
            var Canvas = {
                type: \\"\\",
                \\"canvas-id\\": \\"\\",
                \\"disable-scroll\\": \\"false\\",
                bindTouchStart: \\"\\",
                bindTouchMove: \\"\\",
                bindTouchEnd: \\"\\",
                bindTouchCancel: \\"\\",
                bindLongtap: \\"\\",
                bindError: \\"\\"
            };
            var Ad = {
                \\"unit-id\\": \\"\\",
                \\"ad-intervals\\": \\"\\",
                bindLoad: \\"\\",
                bindError: \\"\\",
                bindClose: \\"\\"
            };
            var OfficialAccount = {
                bindLoad: \\"\\",
                bindError: \\"\\"
            };
            var OpenData = {
                type: \\"\\",
                \\"open-gid\\": \\"\\",
                lang: singleQuote(\\"en\\"),
                \\"default-text\\": \\"\\",
                \\"default-avatar\\": \\"\\",
                bindError: \\"\\"
            };
            var WebView = {
                src: \\"\\",
                bindMessage: \\"\\",
                bindLoad: \\"\\"
            };
            var NavigationBar = {
                title: \\"\\",
                loading: \\"false\\",
                \\"front-color\\": \\"\\",
                \\"background-color\\": \\"\\",
                \\"color-animation-duration\\": \\"0\\",
                \\"color-animation-timing-func\\": singleQuote(\\"linear\\")
            };
            var PageMeta = {
                \\"background-text-style\\": \\"\\",
                \\"background-color\\": \\"\\",
                \\"background-color-top\\": \\"\\",
                \\"background-color-bottom\\": \\"\\",
                \\"scroll-top\\": singleQuote(\\"\\"),
                \\"scroll-duration\\": \\"300\\",
                \\"page-style\\": singleQuote(\\"\\"),
                \\"root-font-size\\": singleQuote(\\"\\"),
                bindResize: \\"\\",
                bindScroll: \\"\\",
                bindScrollDone: \\"\\"
            };
            var Block = {};
            var internalComponents = {
                View: View,
                Icon: Icon,
                Progress: Progress,
                RichText: RichText,
                Text: Text,
                Button: Button,
                Checkbox: Checkbox,
                CheckboxGroup: CheckboxGroup,
                Editor: Editor,
                Form: Form,
                Input: Input,
                Label: Label,
                Picker: Picker,
                PickerView: PickerView,
                PickerViewColumn: PickerViewColumn,
                Radio: Radio,
                RadioGroup: RadioGroup,
                Slider: Slider,
                Switch: Switch,
                CoverImage: CoverImage,
                Textarea: Textarea,
                CoverView: CoverView,
                MovableArea: MovableArea,
                MovableView: MovableView,
                ScrollView: ScrollView,
                Swiper: Swiper,
                SwiperItem: SwiperItem,
                FunctionalPageNavigator: FunctionalPageNavigator,
                Navigator: Navigator,
                Audio: Audio,
                Camera: Camera,
                Image: Image,
                LivePlayer: LivePlayer,
                LivePusher: LivePusher,
                Video: Video,
                Canvas: Canvas,
                Ad: Ad,
                OfficialAccount: OfficialAccount,
                OpenData: OpenData,
                WebView: WebView,
                NavigationBar: NavigationBar,
                PageMeta: PageMeta,
                Block: Block,
                Map: Map$1
            };
            var controlledComponent = new Set([ \\"input\\", \\"checkbox\\", \\"picker-view\\", \\"radio\\", \\"slider\\", \\"textarea\\" ]);
            var incrementId = function incrementId() {
                var id = 0;
                return function() {
                    return (id++).toString();
                };
            };
            function isElement(node) {
                return node.nodeType === 1;
            }
            function isText(node) {
                return node.nodeType === 3;
            }
            var TaroEventTarget = function() {
                function TaroEventTarget() {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroEventTarget);
                    this.__handlers = {};
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroEventTarget, [ {
                    key: \\"addEventListener\\",
                    value: function addEventListener(type, handler, options) {
                        warn(type === \\"regionchange\\", \\"map \\\\u7ec4\\\\u4ef6\\\\u7684 regionchange \\\\u4e8b\\\\u4ef6\\\\u975e\\\\u5e38\\\\u7279\\\\u6b8a\\\\uff0c\\\\u8bf7\\\\u4f7f\\\\u7528 begin/end \\\\u4e8b\\\\u4ef6\\\\u66ff\\\\u4ee3\\\\u3002\\\\u8be6\\\\u60c5\\\\uff1ahttps://github.com/NervJS/taro/issues/5766\\");
                        type = type.toLowerCase();
                        var handlers = this.__handlers[type];
                        var isCapture = Boolean(options);
                        var isOnce = false;
                        if (isObject(options)) {
                            isCapture = Boolean(options.capture);
                            isOnce = Boolean(options.once);
                        }
                        if (isOnce) {
                            var wrapper = function wrapper() {
                                handler.apply(this, arguments);
                                this.removeEventListener(type, wrapper);
                            };
                            this.addEventListener(type, wrapper, Object.assign(Object.assign({}, options), {
                                once: false
                            }));
                            return;
                        }
                        warn(isCapture, \\"The event capture feature is unimplemented.\\");
                        if (isArray(handlers)) {
                            handlers.push(handler);
                        } else {
                            this.__handlers[type] = [ handler ];
                        }
                    }
                }, {
                    key: \\"removeEventListener\\",
                    value: function removeEventListener(type, handler) {
                        type = type.toLowerCase();
                        if (handler == null) {
                            return;
                        }
                        var handlers = this.__handlers[type];
                        if (!isArray(handlers)) {
                            return;
                        }
                        var index = handlers.indexOf(handler);
                        warn(index === -1, \\"\\\\u4e8b\\\\u4ef6: '\\".concat(type, \\"' \\\\u6ca1\\\\u6709\\\\u6ce8\\\\u518c\\\\u5728 DOM \\\\u4e2d\\\\uff0c\\\\u56e0\\\\u6b64\\\\u4e0d\\\\u4f1a\\\\u88ab\\\\u79fb\\\\u9664\\\\u3002\\"));
                        handlers.splice(index, 1);
                    }
                } ]);
                return TaroEventTarget;
            }();
            var eventSource = new Map;
            var TaroEvent = function() {
                function TaroEvent(type, opts, event) {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroEvent);
                    this._stop = false;
                    this._end = false;
                    this.defaultPrevented = false;
                    this.type = type.toLowerCase();
                    this.mpEvent = event;
                    this.bubbles = Boolean(opts && opts.bubbles);
                    this.cancelable = Boolean(opts && opts.cancelable);
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroEvent, [ {
                    key: \\"stopPropagation\\",
                    value: function stopPropagation() {
                        this._stop = true;
                    }
                }, {
                    key: \\"stopImmediatePropagation\\",
                    value: function stopImmediatePropagation() {
                        this._end = this._stop = true;
                    }
                }, {
                    key: \\"preventDefault\\",
                    value: function preventDefault() {
                        this.defaultPrevented = true;
                    }
                }, {
                    key: \\"target\\",
                    get: function get() {
                        var element = document$1.getElementById(this.mpEvent.target.id);
                        return Object.assign(Object.assign(Object.assign({}, this.mpEvent.target), this.mpEvent.detail), {
                            dataset: element !== null ? element.dataset : EMPTY_OBJ
                        });
                    }
                }, {
                    key: \\"currentTarget\\",
                    get: function get() {
                        var element = document$1.getElementById(this.mpEvent.currentTarget.id);
                        if (element === null) {
                            return this.target;
                        }
                        return Object.assign(Object.assign(Object.assign({}, this.mpEvent.currentTarget), this.mpEvent.detail), {
                            dataset: element.dataset
                        });
                    }
                } ]);
                return TaroEvent;
            }();
            function createEvent(event, _) {
                var domEv = new TaroEvent(event.type, {
                    bubbles: true,
                    cancelable: true
                }, event);
                for (var key in event) {
                    if (key === \\"currentTarget\\" || key === \\"target\\" || key === \\"type\\") {
                        continue;
                    } else {
                        domEv[key] = event[key];
                    }
                }
                return domEv;
            }
            function eventHandler(event) {
                if (event.currentTarget == null) {
                    event.currentTarget = event.target;
                }
                var node = document$1.getElementById(event.currentTarget.id);
                if (node != null) {
                    node.dispatchEvent(createEvent(event));
                }
            }
            function hydrate(node) {
                var _data;
                if (isText(node)) {
                    var _ref;
                    return _ref = {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\\"a\\"])(_ref, \\"v\\", node.nodeValue), 
                    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\\"a\\"])(_ref, \\"nn\\", node.nodeName), 
                    _ref;
                }
                var data = (_data = {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\\"a\\"])(_data, \\"nn\\", node.nodeName), 
                Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\\"a\\"])(_data, \\"uid\\", node.uid), 
                _data);
                var props = node.props, childNodes = node.childNodes;
                for (var prop in props) {
                    if (!prop.startsWith(\\"data-\\") && prop !== \\"class\\" && prop !== \\"style\\" && prop !== \\"id\\") {
                        data[false ? undefined : prop] = props[prop];
                    }
                }
                if (childNodes.length > 0) {
                    data[\\"cn\\"] = childNodes.map(hydrate);
                }
                if (node.className !== \\"\\") {
                    data[\\"cl\\"] = node.className;
                }
                if (node.cssText !== \\"\\") {
                    data[\\"st\\"] = node.cssText;
                }
                return data;
            }
            var options = {
                prerender: true,
                debug: false,
                html: {
                    skipElements: new Set([ \\"style\\", \\"script\\" ]),
                    voidElements: new Set([ \\"!doctype\\", \\"area\\", \\"base\\", \\"br\\", \\"col\\", \\"command\\", \\"embed\\", \\"hr\\", \\"img\\", \\"input\\", \\"keygen\\", \\"link\\", \\"meta\\", \\"param\\", \\"source\\", \\"track\\", \\"wbr\\" ]),
                    closingElements: new Set([ \\"html\\", \\"head\\", \\"body\\", \\"p\\", \\"dt\\", \\"dd\\", \\"li\\", \\"option\\", \\"thead\\", \\"th\\", \\"tbody\\", \\"tr\\", \\"td\\", \\"tfoot\\", \\"colgroup\\" ])
                }
            };
            function initPosition() {
                return {
                    index: 0,
                    column: 0,
                    line: 0
                };
            }
            function feedPosition(position, str, len) {
                var start = position.index;
                var end = position.index = start + len;
                for (var i = start; i < end; i++) {
                    var char = str.charAt(i);
                    if (char === \\"\\\\n\\") {
                        position.line++;
                        position.column = 0;
                    } else {
                        position.column++;
                    }
                }
            }
            function jumpPosition(position, str, end) {
                var len = end - position.index;
                return feedPosition(position, str, len);
            }
            function copyPosition(position) {
                return {
                    index: position.index,
                    line: position.line,
                    column: position.column
                };
            }
            var whitespace = /\\\\s/;
            function isWhitespaceChar(char) {
                return whitespace.test(char);
            }
            function shouldBeIgnore(tagName) {
                var name = tagName.toLowerCase();
                if (options.html.skipElements.has(name)) {
                    return true;
                }
                return false;
            }
            var alphanumeric = /[A-Za-z0-9]/;
            function findTextEnd(str, index) {
                while (true) {
                    var textEnd = str.indexOf(\\"<\\", index);
                    if (textEnd === -1) {
                        return textEnd;
                    }
                    var char = str.charAt(textEnd + 1);
                    if (char === \\"/\\" || char === \\"!\\" || alphanumeric.test(char)) {
                        return textEnd;
                    }
                    index = textEnd + 1;
                }
            }
            var Scaner = function() {
                function Scaner(html) {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, Scaner);
                    this.tokens = [];
                    this.position = initPosition();
                    this.html = html;
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(Scaner, [ {
                    key: \\"scan\\",
                    value: function scan() {
                        var html = this.html, position = this.position;
                        var len = html.length;
                        while (position.index < len) {
                            var start = position.index;
                            this.scanText();
                            if (position.index === start) {
                                var isComment = html.startsWith(\\"!--\\", start + 1);
                                if (isComment) {
                                    this.scanComment();
                                } else {
                                    var tagName = this.scanTag();
                                    if (shouldBeIgnore(tagName)) {
                                        this.scanSkipTag(tagName);
                                    }
                                }
                            }
                        }
                        return this.tokens;
                    }
                }, {
                    key: \\"scanText\\",
                    value: function scanText() {
                        var type = \\"text\\";
                        var html = this.html, position = this.position;
                        var textEnd = findTextEnd(html, position.index);
                        if (textEnd === position.index) {
                            return;
                        }
                        if (textEnd === -1) {
                            textEnd = html.length;
                        }
                        var start = copyPosition(position);
                        var content = html.slice(position.index, textEnd);
                        jumpPosition(position, html, textEnd);
                        var end = copyPosition(position);
                        this.tokens.push({
                            type: type,
                            content: content,
                            position: {
                                start: start,
                                end: end
                            }
                        });
                    }
                }, {
                    key: \\"scanComment\\",
                    value: function scanComment() {
                        var type = \\"comment\\";
                        var html = this.html, position = this.position;
                        var start = copyPosition(position);
                        feedPosition(position, html, 4);
                        var contentEnd = html.indexOf(\\"--\\\\x3e\\", position.index);
                        var commentEnd = contentEnd + 3;
                        if (contentEnd === -1) {
                            contentEnd = commentEnd = html.length;
                        }
                        var content = html.slice(position.index, contentEnd);
                        jumpPosition(position, html, commentEnd);
                        this.tokens.push({
                            type: type,
                            content: content,
                            position: {
                                start: start,
                                end: copyPosition(position)
                            }
                        });
                    }
                }, {
                    key: \\"scanTag\\",
                    value: function scanTag() {
                        this.scanTagStart();
                        var tagName = this.scanTagName();
                        this.scanAttrs();
                        this.scanTagEnd();
                        return tagName;
                    }
                }, {
                    key: \\"scanTagStart\\",
                    value: function scanTagStart() {
                        var type = \\"tag-start\\";
                        var html = this.html, position = this.position;
                        var secondChar = html.charAt(position.index + 1);
                        var close = secondChar === \\"/\\";
                        var start = copyPosition(position);
                        feedPosition(position, html, close ? 2 : 1);
                        this.tokens.push({
                            type: type,
                            close: close,
                            position: {
                                start: start
                            }
                        });
                    }
                }, {
                    key: \\"scanTagEnd\\",
                    value: function scanTagEnd() {
                        var type = \\"tag-end\\";
                        var html = this.html, position = this.position;
                        var firstChar = html.charAt(position.index);
                        var close = firstChar === \\"/\\";
                        feedPosition(position, html, close ? 2 : 1);
                        var end = copyPosition(position);
                        this.tokens.push({
                            type: type,
                            close: close,
                            position: {
                                end: end
                            }
                        });
                    }
                }, {
                    key: \\"scanTagName\\",
                    value: function scanTagName() {
                        var type = \\"tag\\";
                        var html = this.html, position = this.position;
                        var len = html.length;
                        var start = position.index;
                        while (start < len) {
                            var char = html.charAt(start);
                            var isTagChar = !(isWhitespaceChar(char) || char === \\"/\\" || char === \\">\\");
                            if (isTagChar) break;
                            start++;
                        }
                        var end = start + 1;
                        while (end < len) {
                            var _char = html.charAt(end);
                            var _isTagChar = !(isWhitespaceChar(_char) || _char === \\"/\\" || _char === \\">\\");
                            if (!_isTagChar) break;
                            end++;
                        }
                        jumpPosition(position, html, end);
                        var tagName = html.slice(start, end);
                        this.tokens.push({
                            type: type,
                            content: tagName
                        });
                        return tagName;
                    }
                }, {
                    key: \\"scanAttrs\\",
                    value: function scanAttrs() {
                        var html = this.html, position = this.position, tokens = this.tokens;
                        var cursor = position.index;
                        var quote = null;
                        var wordBegin = cursor;
                        var words = [];
                        var len = html.length;
                        while (cursor < len) {
                            var char = html.charAt(cursor);
                            if (quote) {
                                var isQuoteEnd = char === quote;
                                if (isQuoteEnd) {
                                    quote = null;
                                }
                                cursor++;
                                continue;
                            }
                            var isTagEnd = char === \\"/\\" || char === \\">\\";
                            if (isTagEnd) {
                                if (cursor !== wordBegin) {
                                    words.push(html.slice(wordBegin, cursor));
                                }
                                break;
                            }
                            var isWordEnd = isWhitespaceChar(char);
                            if (isWordEnd) {
                                if (cursor !== wordBegin) {
                                    words.push(html.slice(wordBegin, cursor));
                                }
                                wordBegin = cursor + 1;
                                cursor++;
                                continue;
                            }
                            var isQuoteStart = char === \\"'\\" || char === '\\"';
                            if (isQuoteStart) {
                                quote = char;
                                cursor++;
                                continue;
                            }
                            cursor++;
                        }
                        jumpPosition(position, html, cursor);
                        var wLen = words.length;
                        var type = \\"attribute\\";
                        for (var i = 0; i < wLen; i++) {
                            var word = words[i];
                            var isNotPair = word.includes(\\"=\\");
                            if (isNotPair) {
                                var secondWord = words[i + 1];
                                if (secondWord && secondWord.startsWith(\\"=\\")) {
                                    if (secondWord.length > 1) {
                                        var newWord = word + secondWord;
                                        tokens.push({
                                            type: type,
                                            content: newWord
                                        });
                                        i += 1;
                                        continue;
                                    }
                                    var thirdWord = words[i + 2];
                                    i += 1;
                                    if (thirdWord) {
                                        var _newWord = word + \\"=\\" + thirdWord;
                                        tokens.push({
                                            type: type,
                                            content: _newWord
                                        });
                                        i += 1;
                                        continue;
                                    }
                                }
                            }
                            if (word.endsWith(\\"=\\")) {
                                var _secondWord = words[i + 1];
                                if (_secondWord && !_secondWord.includes(\\"=\\")) {
                                    var _newWord3 = word + _secondWord;
                                    tokens.push({
                                        type: type,
                                        content: _newWord3
                                    });
                                    i += 1;
                                    continue;
                                }
                                var _newWord2 = word.slice(0, -1);
                                tokens.push({
                                    type: type,
                                    content: _newWord2
                                });
                                continue;
                            }
                            tokens.push({
                                type: type,
                                content: word
                            });
                        }
                    }
                }, {
                    key: \\"scanSkipTag\\",
                    value: function scanSkipTag(tagName) {
                        var html = this.html, position = this.position, tokens = this.tokens;
                        var safeTagName = tagName.toLowerCase();
                        var len = html.length;
                        var index = position.index;
                        while (index < len) {
                            var nextTag = html.indexOf(\\"</\\", index);
                            if (nextTag === -1) {
                                this.scanText();
                                break;
                            }
                            var tagStartPosition = copyPosition(position);
                            jumpPosition(tagStartPosition, html, nextTag);
                            var tagState = {
                                html: html,
                                position: tagStartPosition,
                                tokens: []
                            };
                            var name = this.scanTag();
                            if (safeTagName !== name.toLowerCase()) {
                                index = tagState.position.index;
                                continue;
                            }
                            if (nextTag !== position.index) {
                                var textStart = copyPosition(position);
                                jumpPosition(position, html, nextTag);
                                tokens.push({
                                    type: \\"text\\",
                                    content: html.slice(textStart.index, nextTag),
                                    position: {
                                        start: textStart,
                                        end: copyPosition(position)
                                    }
                                });
                            }
                            tokens.push.apply(tokens, tagState.tokens);
                            jumpPosition(position, html, tagState.position.index);
                            break;
                        }
                    }
                } ]);
                return Scaner;
            }();
            function makeMap(str, expectsLowerCase) {
                var map = Object.create(null);
                var list = str.split(\\",\\");
                for (var i = 0; i < list.length; i++) {
                    map[list[i]] = true;
                }
                return expectsLowerCase ? function(val) {
                    return !!map[val.toLowerCase()];
                } : function(val) {
                    return !!map[val];
                };
            }
            var specialMiniElements = {
                img: \\"image\\",
                iframe: \\"web-view\\"
            };
            var isMiniElements = makeMap(\\"input,canvas,progress,video,audio,form\\", true);
            var isInlineElements = makeMap(\\"a,i,abbr,iframe,select,acronym,slot,small,bdi,kbd,strong,big,map,sup,br,mark,mark,meter,template,canvas,textarea,cite,object,time,code,output,u,data,picture,tt,datalist,var,dfn,del,q,em,s,embed,samp\\", true);
            var isBlockElements = makeMap(\\"address,fieldset,li,article,figcaption,main,aside,figure,nav,blockquote,footer,ol,details,form,p,dialog,h1,h2,h3,h4,h5,h6,pre,dd,header,section,div,hgroup,table,dl,hr,ul,dt\\", true);
            var closingTagAncestorBreakers = {
                li: [ \\"ul\\", \\"ol\\", \\"menu\\" ],
                dt: [ \\"dl\\" ],
                dd: [ \\"dl\\" ],
                tbody: [ \\"table\\" ],
                thead: [ \\"table\\" ],
                tfoot: [ \\"table\\" ],
                tr: [ \\"table\\" ],
                td: [ \\"table\\" ]
            };
            function hasTerminalParent(tagName, stack) {
                var tagParents = closingTagAncestorBreakers[tagName];
                if (tagParents) {
                    var currentIndex = stack.length - 1;
                    while (currentIndex >= 0) {
                        var parentTagName = stack[currentIndex].tagName;
                        if (parentTagName === tagName) {
                            break;
                        }
                        if (tagParents && tagParents.includes(parentTagName)) {
                            return true;
                        }
                        currentIndex--;
                    }
                }
                return false;
            }
            function unquote(str) {
                var car = str.charAt(0);
                var end = str.length - 1;
                var isQuoteStart = car === '\\"' || car === \\"'\\";
                if (isQuoteStart && car === str.charAt(end)) {
                    return str.slice(1, end);
                }
                return str;
            }
            function getTagName(tag) {
                if (specialMiniElements[tag]) {
                    return specialMiniElements[tag];
                } else if (isMiniElements(tag)) {
                    return tag;
                } else if (isBlockElements(tag)) {
                    return \\"view\\";
                } else if (isInlineElements(tag)) {
                    return \\"text\\";
                }
                return \\"view\\";
            }
            function splitEqual(str) {
                var sep = \\"=\\";
                var idx = str.indexOf(sep);
                if (idx === -1) return [ str ];
                return [ str.slice(0, idx), str.slice(idx + sep.length) ];
            }
            function format(children) {
                return children.filter((function(child) {
                    if (child.type === \\"comment\\") {
                        return false;
                    } else if (child.type === \\"text\\") {
                        return child.content !== \\"\\";
                    }
                    return true;
                })).map((function(child) {
                    if (child.type === \\"text\\") {
                        var text = document$1.createTextNode(child.content);
                        if (isFunction(options.html.transformText)) {
                            return options.html.transformText(text, child);
                        }
                        return text;
                    }
                    var el = document$1.createElement(getTagName(child.tagName));
                    el.className = child.tagName;
                    for (var i = 0; i < child.attributes.length; i++) {
                        var attr = child.attributes[i];
                        var _splitEqual = splitEqual(attr), _splitEqual2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_6__[\\"a\\"])(_splitEqual, 2), key = _splitEqual2[0], value = _splitEqual2[1];
                        if (key === \\"class\\") {
                            el.className += el.className;
                        } else if (key[0] === \\"o\\" && key[1] === \\"n\\") {
                            continue;
                        } else {
                            el.setAttribute(key, value == null ? true : unquote(value));
                        }
                    }
                    var ch = format(child.children);
                    for (var _i = 0; _i < ch.length; _i++) {
                        el.appendChild(ch[_i]);
                    }
                    if (isFunction(options.html.transformElement)) {
                        return options.html.transformElement(el, child);
                    }
                    return el;
                }));
            }
            function parser(html) {
                var tokens = new Scaner(html).scan();
                var root = {
                    tagName: \\"\\",
                    children: [],
                    type: \\"element\\",
                    attributes: []
                };
                var state = {
                    tokens: tokens,
                    options: options,
                    cursor: 0,
                    stack: [ root ]
                };
                parse(state);
                return format(root.children);
            }
            function parse(state) {
                var tokens = state.tokens, stack = state.stack;
                var cursor = state.cursor;
                var len = tokens.length;
                var nodes = stack[stack.length - 1].children;
                while (cursor < len) {
                    var token = tokens[cursor];
                    if (token.type !== \\"tag-start\\") {
                        nodes.push(token);
                        cursor++;
                        continue;
                    }
                    var tagToken = tokens[++cursor];
                    cursor++;
                    var tagName = tagToken.content.toLowerCase();
                    if (token.close) {
                        var index = stack.length;
                        var shouldRewind = false;
                        while (--index > -1) {
                            if (stack[index].tagName === tagName) {
                                shouldRewind = true;
                                break;
                            }
                        }
                        while (cursor < len) {
                            var endToken = tokens[cursor];
                            if (endToken.type !== \\"tag-end\\") break;
                            cursor++;
                        }
                        if (shouldRewind) {
                            stack.splice(index);
                            break;
                        } else {
                            continue;
                        }
                    }
                    var isClosingTag = options.html.closingElements.has(tagName);
                    var shouldRewindToAutoClose = isClosingTag;
                    if (shouldRewindToAutoClose) {
                        shouldRewindToAutoClose = !hasTerminalParent(tagName, stack);
                    }
                    if (shouldRewindToAutoClose) {
                        var currentIndex = stack.length - 1;
                        while (currentIndex > 0) {
                            if (tagName === stack[currentIndex].tagName) {
                                stack.splice(currentIndex);
                                var previousIndex = currentIndex - 1;
                                nodes = stack[previousIndex].children;
                                break;
                            }
                            currentIndex = currentIndex - 1;
                        }
                    }
                    var attributes = [];
                    var attrToken = void 0;
                    while (cursor < len) {
                        attrToken = tokens[cursor];
                        if (attrToken.type === \\"tag-end\\") break;
                        attributes.push(attrToken.content);
                        cursor++;
                    }
                    cursor++;
                    var children = [];
                    var element = {
                        type: \\"element\\",
                        tagName: tagToken.content,
                        attributes: attributes,
                        children: children
                    };
                    nodes.push(element);
                    var hasChildren = !(attrToken.close || options.html.voidElements.has(tagName));
                    if (hasChildren) {
                        stack.push({
                            tagName: tagName,
                            children: children
                        });
                        var innerState = {
                            tokens: tokens,
                            cursor: cursor,
                            stack: stack
                        };
                        parse(innerState);
                        cursor = innerState.cursor;
                    }
                }
                state.cursor = cursor;
            }
            function setInnerHTML(element, html) {
                element.textContent = \\"\\";
                var children = parser(html);
                for (var i = 0; i < children.length; i++) {
                    element.appendChild(children[i]);
                }
            }
            var nodeId = incrementId();
            var TaroNode = function(_TaroEventTarget) {
                Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(TaroNode, _TaroEventTarget);
                function TaroNode(nodeType, nodeName) {
                    var _this;
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroNode);
                    _this = Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(TaroNode).call(this));
                    _this.parentNode = null;
                    _this.childNodes = [];
                    _this.hydrate = function(node) {
                        return function() {
                            return hydrate(node);
                        };
                    };
                    _this.nodeType = nodeType;
                    _this.nodeName = nodeName;
                    _this.uid = \\"_n_\\".concat(nodeId());
                    eventSource.set(_this.uid, Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\\"a\\"])(_this));
                    return _this;
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroNode, [ {
                    key: \\"insertBefore\\",
                    value: function insertBefore(newChild, refChild, isReplace) {
                        var _this2 = this;
                        newChild.remove();
                        newChild.parentNode = this;
                        var payload;
                        if (refChild) {
                            var index = this.findIndex(this.childNodes, refChild);
                            this.childNodes.splice(index, 0, newChild);
                            if (isReplace === true) {
                                payload = {
                                    path: newChild._path,
                                    value: this.hydrate(newChild)
                                };
                            } else {
                                payload = {
                                    path: \\"\\".concat(this._path, \\".\\", \\"cn\\"),
                                    value: function value() {
                                        return _this2.childNodes.map(hydrate);
                                    }
                                };
                            }
                        } else {
                            this.childNodes.push(newChild);
                            payload = {
                                path: newChild._path,
                                value: this.hydrate(newChild)
                            };
                        }
                        this.enqueueUpdate(payload);
                        return newChild;
                    }
                }, {
                    key: \\"appendChild\\",
                    value: function appendChild(child) {
                        this.insertBefore(child);
                    }
                }, {
                    key: \\"replaceChild\\",
                    value: function replaceChild(newChild, oldChild) {
                        if (oldChild.parentNode === this) {
                            this.insertBefore(newChild, oldChild, true);
                            oldChild.remove(true);
                            return oldChild;
                        }
                    }
                }, {
                    key: \\"removeChild\\",
                    value: function removeChild(child, isReplace) {
                        var _this3 = this;
                        var index = this.findIndex(this.childNodes, child);
                        this.childNodes.splice(index, 1);
                        if (isReplace !== true) {
                            this.enqueueUpdate({
                                path: \\"\\".concat(this._path, \\".\\", \\"cn\\"),
                                value: function value() {
                                    return _this3.childNodes.map(hydrate);
                                }
                            });
                        }
                        child.parentNode = null;
                        eventSource.delete(child.uid);
                        child._empty();
                        return child;
                    }
                }, {
                    key: \\"remove\\",
                    value: function remove(isReplace) {
                        if (this.parentNode) {
                            this.parentNode.removeChild(this, isReplace);
                        }
                    }
                }, {
                    key: \\"hasChildNodes\\",
                    value: function hasChildNodes() {
                        return this.childNodes.length > 0;
                    }
                }, {
                    key: \\"enqueueUpdate\\",
                    value: function enqueueUpdate(payload) {
                        if (this._root === null) {
                            return;
                        }
                        this._root.enqueueUpdate(payload);
                    }
                }, {
                    key: \\"_empty\\",
                    value: function _empty() {
                        while (this.childNodes.length > 0) {
                            var child = this.childNodes[0];
                            child.parentNode = null;
                            eventSource.delete(child.uid);
                            this.childNodes.shift();
                        }
                    }
                }, {
                    key: \\"findIndex\\",
                    value: function findIndex(childeNodes, refChild) {
                        var index = childeNodes.indexOf(refChild);
                        ensure(index !== -1, \\"The node to be replaced is not a child of this node.\\");
                        return index;
                    }
                }, {
                    key: \\"_path\\",
                    get: function get() {
                        if (this.parentNode !== null) {
                            var index = false ? undefined : \\"[\\" + this.parentNode.childNodes.indexOf(this) + \\"]\\";
                            return \\"\\".concat(this.parentNode._path, \\".\\", \\"cn\\", \\".\\").concat(index);
                        }
                        return \\"\\";
                    }
                }, {
                    key: \\"_root\\",
                    get: function get() {
                        if (this.parentNode !== null) {
                            return this.parentNode._root;
                        }
                        return null;
                    }
                }, {
                    key: \\"nextSibling\\",
                    get: function get() {
                        var parentNode = this.parentNode;
                        if (parentNode) {
                            return parentNode.childNodes[this.findIndex(parentNode.childNodes, this) + 1] || null;
                        }
                        return null;
                    }
                }, {
                    key: \\"previousSibling\\",
                    get: function get() {
                        var parentNode = this.parentNode;
                        if (parentNode) {
                            return parentNode.childNodes[this.findIndex(parentNode.childNodes, this) - 1] || null;
                        }
                        return null;
                    }
                }, {
                    key: \\"firstChild\\",
                    get: function get() {
                        return this.childNodes[0] || null;
                    }
                }, {
                    key: \\"lastChild\\",
                    get: function get() {
                        var c = this.childNodes;
                        return c[c.length - 1] || null;
                    }
                }, {
                    key: \\"textContent\\",
                    set: function set(text) {
                        if (text === \\"\\") {
                            this._empty();
                            this.enqueueUpdate({
                                path: \\"\\".concat(this._path, \\".\\", \\"cn\\"),
                                value: function value() {
                                    return [];
                                }
                            });
                        }
                    }
                }, {
                    key: \\"innerHTML\\",
                    set: function set(html) {
                        setInnerHTML(this, html);
                    },
                    get: function get() {
                        return \\"\\";
                    }
                } ]);
                return TaroNode;
            }(TaroEventTarget);
            var TaroText = function(_TaroNode) {
                Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(TaroText, _TaroNode);
                function TaroText(text) {
                    var _this4;
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroText);
                    _this4 = Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(TaroText).call(this, 3, \\"#text\\"));
                    _this4._value = text;
                    return _this4;
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroText, [ {
                    key: \\"textContent\\",
                    set: function set(text) {
                        this._value = text;
                        this.enqueueUpdate({
                            path: \\"\\".concat(this._path, \\".\\", \\"v\\"),
                            value: text
                        });
                    },
                    get: function get() {
                        return this._value;
                    }
                }, {
                    key: \\"nodeValue\\",
                    set: function set(text) {
                        this.textContent = text;
                    },
                    get: function get() {
                        return this._value;
                    }
                } ]);
                return TaroText;
            }(TaroNode);
            var styleProperties = [ \\"alignContent\\", \\"alignItems\\", \\"alignSelf\\", \\"alignmentAdjust\\", \\"alignmentBaseline\\", \\"all\\", \\"animation\\", \\"animationDelay\\", \\"animationDirection\\", \\"animationDuration\\", \\"animationFillMode\\", \\"animationIterationCount\\", \\"animationName\\", \\"animationPlayState\\", \\"animationTimingFunction\\", \\"appearance\\", \\"azimuth\\", \\"backfaceVisibility\\", \\"background\\", \\"backgroundAttachment\\", \\"backgroundBlendMode\\", \\"backgroundClip\\", \\"backgroundColor\\", \\"backgroundImage\\", \\"backgroundOrigin\\", \\"backgroundPosition\\", \\"backgroundRepeat\\", \\"backgroundSize\\", \\"baselineShift\\", \\"blockOverflow\\", \\"blockSize\\", \\"bookmarkLabel\\", \\"bookmarkLevel\\", \\"bookmarkState\\", \\"border\\", \\"borderBlock\\", \\"borderBlockColor\\", \\"borderBlockEnd\\", \\"borderBlockEndColor\\", \\"borderBlockEndStyle\\", \\"borderBlockEndWidth\\", \\"borderBlockStart\\", \\"borderBlockStartColor\\", \\"borderBlockStartStyle\\", \\"borderBlockStartWidth\\", \\"borderBlockStyle\\", \\"borderBlockWidth\\", \\"borderBottom\\", \\"borderBottomColor\\", \\"borderBottomFitLength\\", \\"borderBottomFitWidth\\", \\"borderBottomImage\\", \\"borderBottomLeftFitWidth\\", \\"borderBottomLeftImage\\", \\"borderBottomLeftRadius\\", \\"borderBottomRightFitLength\\", \\"borderBottomRightFitWidth\\", \\"borderBottomRightImage\\", \\"borderBottomRightRadius\\", \\"borderBottomStyle\\", \\"borderBottomWidth\\", \\"borderBottomlEftFitLength\\", \\"borderBoundary\\", \\"borderBreak\\", \\"borderCollapse\\", \\"borderColor\\", \\"borderCornerFit\\", \\"borderCornerImage\\", \\"borderCornerImageTransform\\", \\"borderEndEndRadius\\", \\"borderEndStartRadius\\", \\"borderFit\\", \\"borderFitLength\\", \\"borderFitWidth\\", \\"borderImage\\", \\"borderImageOutset\\", \\"borderImageRepeat\\", \\"borderImageSlice\\", \\"borderImageSource\\", \\"borderImageTransform\\", \\"borderImageWidth\\", \\"borderInline\\", \\"borderInlineColor\\", \\"borderInlineEnd\\", \\"borderInlineEndColor\\", \\"borderInlineEndStyle\\", \\"borderInlineEndWidth\\", \\"borderInlineStart\\", \\"borderInlineStartColor\\", \\"borderInlineStartStyle\\", \\"borderInlineStartWidth\\", \\"borderInlineStyle\\", \\"borderInlineWidth\\", \\"borderLeft\\", \\"borderLeftColor\\", \\"borderLeftFitLength\\", \\"borderLeftFitWidth\\", \\"borderLeftImage\\", \\"borderLeftStyle\\", \\"borderLeftWidth\\", \\"borderRadius\\", \\"borderRight\\", \\"borderRightColor\\", \\"borderRightFitLength\\", \\"borderRightFitWidth\\", \\"borderRightImage\\", \\"borderRightStyle\\", \\"borderRightWidth\\", \\"borderSpacing\\", \\"borderStartEndRadius\\", \\"borderStartStartRadius\\", \\"borderStyle\\", \\"borderTop\\", \\"borderTopColor\\", \\"borderTopFitLength\\", \\"borderTopFitWidth\\", \\"borderTopImage\\", \\"borderTopLeftFitLength\\", \\"borderTopLeftFitWidth\\", \\"borderTopLeftImage\\", \\"borderTopLeftRadius\\", \\"borderTopRightFitLength\\", \\"borderTopRightFitWidth\\", \\"borderTopRightImage\\", \\"borderTopRightRadius\\", \\"borderTopStyle\\", \\"borderTopWidth\\", \\"borderWidth\\", \\"bottom\\", \\"boxDecorationBreak\\", \\"boxShadow\\", \\"boxSizing\\", \\"boxSnap\\", \\"breakAfter\\", \\"breakBefore\\", \\"breakInside\\", \\"captionSide\\", \\"caret\\", \\"caretColor\\", \\"caretShape\\", \\"chains\\", \\"clear\\", \\"clip\\", \\"clipPath\\", \\"clipRule\\", \\"color\\", \\"colorAdjust\\", \\"colorInterpolationFilters\\", \\"colorScheme\\", \\"columnCount\\", \\"columnFill\\", \\"columnGap\\", \\"columnRule\\", \\"columnRuleColor\\", \\"columnRuleStyle\\", \\"columnRuleWidth\\", \\"columnSpan\\", \\"columnWidth\\", \\"columns\\", \\"contain\\", \\"content\\", \\"continue\\", \\"counterIncrement\\", \\"counterReset\\", \\"counterSet\\", \\"cue\\", \\"cueAfter\\", \\"cueBefore\\", \\"cursor\\", \\"direction\\", \\"display\\", \\"dominantBaseline\\", \\"dropInitialAfterAdjust\\", \\"dropInitialAfterAlign\\", \\"dropInitialBeforeAdjust\\", \\"dropInitialBeforeAlign\\", \\"dropInitialSize\\", \\"dropInitialValue\\", \\"elevation\\", \\"emptyCells\\", \\"filter\\", \\"flex\\", \\"flexBasis\\", \\"flexDirection\\", \\"flexFlow\\", \\"flexGrow\\", \\"flexShrink\\", \\"flexWrap\\", \\"float\\", \\"floodColor\\", \\"floodOpacity\\", \\"flow\\", \\"flowFrom\\", \\"flowInto\\", \\"font\\", \\"fontFamily\\", \\"fontFeatureSettings\\", \\"fontKerning\\", \\"fontLanguageOverride\\", \\"fontMaxSize\\", \\"fontMinSize\\", \\"fontOpticalSizing\\", \\"fontPalette\\", \\"fontSize\\", \\"fontSizeAdjust\\", \\"fontStretch\\", \\"fontStyle\\", \\"fontSynthesis\\", \\"fontSynthesisSmallCaps\\", \\"fontSynthesisStyle\\", \\"fontSynthesisWeight\\", \\"fontVariant\\", \\"fontVariantAlternates\\", \\"fontVariantCaps\\", \\"fontVariantEastAsian\\", \\"fontVariantEmoji\\", \\"fontVariantLigatures\\", \\"fontVariantNumeric\\", \\"fontVariantPosition\\", \\"fontVariationSettings\\", \\"fontWeight\\", \\"footnoteDisplay\\", \\"footnotePolicy\\", \\"forcedColorAdjust\\", \\"gap\\", \\"glyphOrientationVertical\\", \\"grid\\", \\"gridArea\\", \\"gridAutoColumns\\", \\"gridAutoFlow\\", \\"gridAutoRows\\", \\"gridColumn\\", \\"gridColumnEnd\\", \\"gridColumnStart\\", \\"gridRow\\", \\"gridRowEnd\\", \\"gridRowStart\\", \\"gridTemplate\\", \\"gridTemplateAreas\\", \\"gridTemplateColumns\\", \\"gridTemplateRows\\", \\"hangingPunctuation\\", \\"height\\", \\"hyphenateCharacter\\", \\"hyphenateLimitChars\\", \\"hyphenateLimitLast\\", \\"hyphenateLimitLines\\", \\"hyphenateLimitZone\\", \\"hyphens\\", \\"imageOrientation\\", \\"imageResolution\\", \\"initialLetters\\", \\"initialLettersAlign\\", \\"initialLettersWrap\\", \\"inlineBoxAlign\\", \\"inlineSize\\", \\"inlineSizing\\", \\"inset\\", \\"insetBlock\\", \\"insetBlockEnd\\", \\"insetBlockStart\\", \\"insetInline\\", \\"insetInlineEnd\\", \\"insetInlineStart\\", \\"isolation\\", \\"justifyContent\\", \\"justifyItems\\", \\"justifySelf\\", \\"left\\", \\"letterSpacing\\", \\"lightingColor\\", \\"lineBreak\\", \\"lineClamp\\", \\"lineGrid\\", \\"lineHeight\\", \\"linePadding\\", \\"lineSnap\\", \\"lineStacking\\", \\"lineStackingRuby\\", \\"lineStackingShift\\", \\"lineStackingStrategy\\", \\"listStyle\\", \\"listStyleImage\\", \\"listStylePosition\\", \\"listStyleType\\", \\"margin\\", \\"marginBlock\\", \\"marginBlockEnd\\", \\"marginBlockStart\\", \\"marginBottom\\", \\"marginInline\\", \\"marginInlineEnd\\", \\"marginInlineStart\\", \\"marginLeft\\", \\"marginRight\\", \\"marginTop\\", \\"marginTrim\\", \\"markerSide\\", \\"mask\\", \\"maskBorder\\", \\"maskBorderMode\\", \\"maskBorderOutset\\", \\"maskBorderRepeat\\", \\"maskBorderSlice\\", \\"maskBorderSource\\", \\"maskBorderWidth\\", \\"maskClip\\", \\"maskComposite\\", \\"maskImage\\", \\"maskMode\\", \\"maskOrigin\\", \\"maskPosition\\", \\"maskRepeat\\", \\"maskSize\\", \\"maskType\\", \\"maxBlockSize\\", \\"maxHeight\\", \\"maxInlineSize\\", \\"maxLines\\", \\"maxWidth\\", \\"minBlockSize\\", \\"minHeight\\", \\"minInlineSize\\", \\"minWidth\\", \\"mixBlendMode\\", \\"navDown\\", \\"navLeft\\", \\"navRight\\", \\"navUp\\", \\"objectFit\\", \\"objectPosition\\", \\"offset\\", \\"offsetAfter\\", \\"offsetAnchor\\", \\"offsetBefore\\", \\"offsetDistance\\", \\"offsetEnd\\", \\"offsetPath\\", \\"offsetPosition\\", \\"offsetRotate\\", \\"offsetStart\\", \\"opacity\\", \\"order\\", \\"orphans\\", \\"outline\\", \\"outlineColor\\", \\"outlineOffset\\", \\"outlineStyle\\", \\"outlineWidth\\", \\"overflow\\", \\"overflowBlock\\", \\"overflowInline\\", \\"overflowWrap\\", \\"overflowX\\", \\"overflowY\\", \\"padding\\", \\"paddingBlock\\", \\"paddingBlockEnd\\", \\"paddingBlockStart\\", \\"paddingBottom\\", \\"paddingInline\\", \\"paddingInlineEnd\\", \\"paddingInlineStart\\", \\"paddingLeft\\", \\"paddingRight\\", \\"paddingTop\\", \\"page\\", \\"pageBreakAfter\\", \\"pageBreakBefore\\", \\"pageBreakInside\\", \\"pause\\", \\"pauseAfter\\", \\"pauseBefore\\", \\"perspective\\", \\"perspectiveOrigin\\", \\"pitch\\", \\"pitchRange\\", \\"placeContent\\", \\"placeItems\\", \\"placeSelf\\", \\"playDuring\\", \\"position\\", \\"quotes\\", \\"regionFragment\\", \\"resize\\", \\"richness\\", \\"right\\", \\"rowGap\\", \\"rubyAlign\\", \\"rubyMerge\\", \\"rubyPosition\\", \\"running\\", \\"scrollBehavior\\", \\"scrollMargin\\", \\"scrollMarginBlock\\", \\"scrollMarginBlockEnd\\", \\"scrollMarginBlockStart\\", \\"scrollMarginBottom\\", \\"scrollMarginInline\\", \\"scrollMarginInlineEnd\\", \\"scrollMarginInlineStart\\", \\"scrollMarginLeft\\", \\"scrollMarginRight\\", \\"scrollMarginTop\\", \\"scrollPadding\\", \\"scrollPaddingBlock\\", \\"scrollPaddingBlockEnd\\", \\"scrollPaddingBlockStart\\", \\"scrollPaddingBottom\\", \\"scrollPaddingInline\\", \\"scrollPaddingInlineEnd\\", \\"scrollPaddingInlineStart\\", \\"scrollPaddingLeft\\", \\"scrollPaddingRight\\", \\"scrollPaddingTop\\", \\"scrollSnapAlign\\", \\"scrollSnapStop\\", \\"scrollSnapType\\", \\"shapeImageThreshold\\", \\"shapeInside\\", \\"shapeMargin\\", \\"shapeOutside\\", \\"speak\\", \\"speakHeader\\", \\"speakNumeral\\", \\"speakPunctuation\\", \\"speechRate\\", \\"stress\\", \\"stringSet\\", \\"tabSize\\", \\"tableLayout\\", \\"textAlign\\", \\"textAlignAll\\", \\"textAlignLast\\", \\"textCombineUpright\\", \\"textDecoration\\", \\"textDecorationColor\\", \\"textDecorationLine\\", \\"textDecorationStyle\\", \\"textEmphasis\\", \\"textEmphasisColor\\", \\"textEmphasisPosition\\", \\"textEmphasisStyle\\", \\"textGroupAlign\\", \\"textHeight\\", \\"textIndent\\", \\"textJustify\\", \\"textOrientation\\", \\"textOverflow\\", \\"textShadow\\", \\"textSpaceCollapse\\", \\"textSpaceTrim\\", \\"textSpacing\\", \\"textTransform\\", \\"textUnderlinePosition\\", \\"textWrap\\", \\"top\\", \\"transform\\", \\"transformBox\\", \\"transformOrigin\\", \\"transformStyle\\", \\"transition\\", \\"transitionDelay\\", \\"transitionDuration\\", \\"transitionProperty\\", \\"transitionTimingFunction\\", \\"unicodeBidi\\", \\"userSelect\\", \\"verticalAlign\\", \\"visibility\\", \\"voiceFamily\\", \\"volume\\", \\"whiteSpace\\", \\"widows\\", \\"width\\", \\"willChange\\", \\"wordBreak\\", \\"wordSpacing\\", \\"wordWrap\\", \\"wrapAfter\\", \\"wrapBefore\\", \\"wrapFlow\\", \\"wrapInside\\", \\"wrapThrough\\", \\"writingMode\\", \\"zIndex\\" ];
            var PROPERTY_THRESHOLD = 2046;
            var SET_DATA = \\"\\\\u5c0f\\\\u7a0b\\\\u5e8f setData\\";
            var PAGE_INIT = \\"\\\\u9875\\\\u9762\\\\u521d\\\\u59cb\\\\u5316\\";
            function setStyle(newVal, styleKey) {
                var old = this[styleKey];
                if (newVal) {
                    this._usedStyleProp.add(styleKey);
                }
                warn(isString(newVal) && newVal.length > PROPERTY_THRESHOLD, \\"Style \\\\u5c5e\\\\u6027 \\".concat(styleKey, \\" \\\\u7684\\\\u503c\\\\u6570\\\\u636e\\\\u91cf\\\\u8fc7\\\\u5927\\\\uff0c\\\\u53ef\\\\u80fd\\\\u4f1a\\\\u5f71\\\\u54cd\\\\u6e32\\\\u67d3\\\\u6027\\\\u80fd\\\\uff0c\\\\u8003\\\\u8651\\\\u4f7f\\\\u7528 CSS \\\\u7c7b\\\\u6216\\\\u5176\\\\u5b83\\\\u65b9\\\\u6848\\\\u66ff\\\\u4ee3\\\\u3002\\"));
                if (old !== newVal) {
                    this._value[styleKey] = newVal;
                    this._element.enqueueUpdate({
                        path: \\"\\".concat(this._element._path, \\".\\", \\"st\\"),
                        value: this.cssText
                    });
                }
            }
            function initStyle(ctor) {
                var properties = {};
                var _loop = function _loop(i) {
                    var styleKey = styleProperties[i];
                    properties[styleKey] = {
                        get: function get() {
                            return this._value[styleKey] || \\"\\";
                        },
                        set: function set(newVal) {
                            setStyle.call(this, newVal, styleKey);
                        }
                    };
                };
                for (var i = 0; i < styleProperties.length; i++) {
                    _loop(i);
                }
                Object.defineProperties(ctor.prototype, properties);
            }
            var Style = function() {
                function Style(element) {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, Style);
                    this._element = element;
                    this._usedStyleProp = new Set;
                    this._value = {};
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(Style, [ {
                    key: \\"setCssVariables\\",
                    value: function setCssVariables(styleKey) {
                        var _this5 = this;
                        this.hasOwnProperty(styleKey) || Object.defineProperty(this, styleKey, {
                            enumerable: true,
                            configurable: true,
                            get: function get() {
                                return _this5._value[styleKey] || \\"\\";
                            },
                            set: function set(newVal) {
                                setStyle.call(_this5, newVal, styleKey);
                            }
                        });
                    }
                }, {
                    key: \\"setProperty\\",
                    value: function setProperty(propertyName, value) {
                        if (propertyName[0] === \\"-\\") {
                            this.setCssVariables(propertyName);
                        } else {
                            propertyName = toCamelCase(propertyName);
                        }
                        if (isUndefined(value)) {
                            return;
                        }
                        if (value === null || value === \\"\\") {
                            this.removeProperty(propertyName);
                        } else {
                            this[propertyName] = value;
                        }
                    }
                }, {
                    key: \\"removeProperty\\",
                    value: function removeProperty(propertyName) {
                        propertyName = toCamelCase(propertyName);
                        if (!this._usedStyleProp.has(propertyName)) {
                            return \\"\\";
                        }
                        var value = this[propertyName];
                        this[propertyName] = \\"\\";
                        this._usedStyleProp.delete(propertyName);
                        return value;
                    }
                }, {
                    key: \\"getPropertyValue\\",
                    value: function getPropertyValue(propertyName) {
                        propertyName = toCamelCase(propertyName);
                        var value = this[propertyName];
                        if (!value) {
                            return \\"\\";
                        }
                        return value;
                    }
                }, {
                    key: \\"cssText\\",
                    get: function get() {
                        var _this6 = this;
                        var text = \\"\\";
                        this._usedStyleProp.forEach((function(key) {
                            var val = _this6[key];
                            if (!val) return;
                            text += \\"\\".concat(toDashed(key), \\": \\").concat(val, \\";\\");
                        }));
                        return text;
                    },
                    set: function set(str) {
                        var _this7 = this;
                        if (str == null) {
                            str = \\"\\";
                        }
                        this._usedStyleProp.forEach((function(prop) {
                            _this7.removeProperty(prop);
                        }));
                        if (str === \\"\\") {
                            return;
                        }
                        var rules = str.split(\\";\\");
                        for (var i = 0; i < rules.length; i++) {
                            var rule = rules[i].trim();
                            if (rule === \\"\\") {
                                continue;
                            }
                            var _rule$split = rule.split(\\":\\"), _rule$split2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_6__[\\"a\\"])(_rule$split, 2), propName = _rule$split2[0], val = _rule$split2[1];
                            if (isUndefined(val)) {
                                continue;
                            }
                            this.setProperty(propName.trim(), val.trim());
                        }
                    }
                } ]);
                return Style;
            }();
            initStyle(Style);
            var TaroElement = function(_TaroNode2) {
                Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(TaroElement, _TaroNode2);
                function TaroElement(nodeType, nodeName) {
                    var _this8;
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroElement);
                    _this8 = Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(TaroElement).call(this, nodeType || 1, nodeName));
                    _this8.props = {};
                    _this8.dataset = EMPTY_OBJ;
                    _this8.tagName = nodeName.toUpperCase();
                    _this8.style = new Style(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__[\\"a\\"])(_this8));
                    warn(_this8.tagName === \\"MAP\\" && \\"weapp\\" === \\"weapp\\", \\"\\\\u5fae\\\\u4fe1\\\\u5c0f\\\\u7a0b\\\\u5e8f map \\\\u7ec4\\\\u4ef6\\\\u7684 \`setting\` \\\\u5c5e\\\\u6027\\\\u9700\\\\u8981\\\\u4f20\\\\u9012\\\\u4e00\\\\u4e2a\\\\u9ed8\\\\u8ba4\\\\u503c\\\\u3002\\\\u8be6\\\\u60c5\\\\uff1a\\\\n https://developers.weixin.qq.com/miniprogram/dev/component/map.html\\");
                    return _this8;
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroElement, [ {
                    key: \\"hasAttribute\\",
                    value: function hasAttribute(qualifiedName) {
                        return !isUndefined(this.props[qualifiedName]);
                    }
                }, {
                    key: \\"hasAttributes\\",
                    value: function hasAttributes() {
                        return this.attributes.length > 0;
                    }
                }, {
                    key: \\"focus\\",
                    value: function focus() {
                        this.setAttribute(\\"focus\\", true);
                    }
                }, {
                    key: \\"blur\\",
                    value: function blur() {
                        this.setAttribute(\\"focus\\", false);
                    }
                }, {
                    key: \\"setAttribute\\",
                    value: function setAttribute(qualifiedName, value) {
                        warn(isString(value) && value.length > PROPERTY_THRESHOLD, \\"\\\\u5143\\\\u7d20 \\".concat(this.nodeName, \\" \\\\u7684 \\\\u5c5e\\\\u6027 \\").concat(qualifiedName, \\" \\\\u7684\\\\u503c\\\\u6570\\\\u636e\\\\u91cf\\\\u8fc7\\\\u5927\\\\uff0c\\\\u53ef\\\\u80fd\\\\u4f1a\\\\u5f71\\\\u54cd\\\\u6e32\\\\u67d3\\\\u6027\\\\u80fd\\\\u3002\\\\u8003\\\\u8651\\\\u964d\\\\u4f4e\\\\u56fe\\\\u7247\\\\u8f6c\\\\u4e3a base64 \\\\u7684\\\\u9608\\\\u503c\\\\u6216\\\\u5728 CSS \\\\u4e2d\\\\u4f7f\\\\u7528 base64\\\\u3002\\"));
                        if (qualifiedName === \\"style\\") {
                            this.style.cssText = value;
                            qualifiedName = \\"st\\";
                        } else if (qualifiedName === \\"id\\") {
                            eventSource.delete(this.uid);
                            this.props[qualifiedName] = this.uid = value;
                            eventSource.set(value, this);
                            qualifiedName = \\"uid\\";
                        } else {
                            this.props[qualifiedName] = value;
                            if (qualifiedName === \\"class\\") {
                                qualifiedName = \\"cl\\";
                            }
                            if (qualifiedName.startsWith(\\"data-\\")) {
                                if (this.dataset === EMPTY_OBJ) {
                                    this.dataset = Object.create(null);
                                }
                                this.dataset[toCamelCase(qualifiedName.replace(/^data-/, \\"\\"))] = value;
                            }
                        }
                        this.enqueueUpdate({
                            path: \\"\\".concat(this._path, \\".\\").concat(false ? undefined : qualifiedName),
                            value: value
                        });
                    }
                }, {
                    key: \\"removeAttribute\\",
                    value: function removeAttribute(qualifiedName) {
                        if (qualifiedName === \\"style\\") {
                            this.style.cssText = \\"\\";
                        } else if (false) {
                            var compName;
                        } else {
                            delete this.props[qualifiedName];
                        }
                        this.enqueueUpdate({
                            path: \\"\\".concat(this._path, \\".\\").concat(false ? undefined : qualifiedName),
                            value: \\"\\"
                        });
                    }
                }, {
                    key: \\"getAttribute\\",
                    value: function getAttribute(qualifiedName) {
                        var attr = qualifiedName === \\"style\\" ? this.style.cssText : this.props[qualifiedName];
                        return attr !== null && attr !== void 0 ? attr : \\"\\";
                    }
                }, {
                    key: \\"dispatchEvent\\",
                    value: function dispatchEvent(event) {
                        var cancelable = event.cancelable;
                        var listeners = this.__handlers[event.type];
                        if (!isArray(listeners)) {
                            return;
                        }
                        for (var i = listeners.length; i--; ) {
                            var listener = listeners[i];
                            var result = void 0;
                            if (listener._stop) {
                                listener._stop = false;
                            } else {
                                result = listener.call(this, event);
                            }
                            if ((result === false || event._end) && cancelable) {
                                event.defaultPrevented = true;
                            }
                            if (event._end && event._stop) {
                                break;
                            }
                        }
                        if (event._stop) {
                            this._stopPropagation(event);
                        } else {
                            event._stop = true;
                        }
                        return listeners != null;
                    }
                }, {
                    key: \\"_stopPropagation\\",
                    value: function _stopPropagation(event) {
                        var target = this;
                        while (target = target.parentNode) {
                            var listeners = target.__handlers[event.type];
                            if (!isArray(listeners)) {
                                continue;
                            }
                            for (var i = listeners.length; i--; ) {
                                var l = listeners[i];
                                l._stop = true;
                            }
                        }
                    }
                }, {
                    key: \\"id\\",
                    get: function get() {
                        return this.getAttribute(\\"id\\");
                    },
                    set: function set(val) {
                        this.setAttribute(\\"id\\", val);
                    }
                }, {
                    key: \\"className\\",
                    get: function get() {
                        return this.getAttribute(\\"class\\") || \\"\\";
                    },
                    set: function set(val) {
                        this.setAttribute(\\"class\\", val);
                    }
                }, {
                    key: \\"cssText\\",
                    get: function get() {
                        return this.getAttribute(\\"style\\") || \\"\\";
                    }
                }, {
                    key: \\"children\\",
                    get: function get() {
                        return this.childNodes.filter(isElement);
                    }
                }, {
                    key: \\"attributes\\",
                    get: function get() {
                        var _this9 = this;
                        var propKeys = Object.keys(this.props);
                        var style = this.style.cssText;
                        var attrs = propKeys.map((function(p) {
                            return {
                                name: p,
                                value: _this9.props[p]
                            };
                        }));
                        return attrs.concat(style ? {
                            name: \\"style\\",
                            value: style
                        } : []);
                    }
                }, {
                    key: \\"parentElement\\",
                    get: function get() {
                        if (this.parentNode instanceof TaroElement) {
                            return this.parentNode;
                        }
                        return null;
                    }
                }, {
                    key: \\"textContent\\",
                    get: function get() {
                        var text = \\"\\";
                        for (var i = 0; i < this.childNodes.length; i++) {
                            var element = this.childNodes[i];
                            text += element.textContent;
                        }
                        return text;
                    },
                    set: function set(text) {
                        Object(_babel_runtime_helpers_esm_set__WEBPACK_IMPORTED_MODULE_1__[\\"a\\"])(Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(TaroElement.prototype), \\"textContent\\", text, this, true);
                    }
                } ]);
                return TaroElement;
            }(TaroNode);
            var FormElement = function(_TaroElement) {
                Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(FormElement, _TaroElement);
                function FormElement() {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, FormElement);
                    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(FormElement).apply(this, arguments));
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(FormElement, [ {
                    key: \\"value\\",
                    get: function get() {
                        var val = this.props[\\"value\\"];
                        return val == null ? \\"\\" : val;
                    },
                    set: function set(val) {
                        this.setAttribute(\\"value\\", val);
                    }
                } ]);
                return FormElement;
            }(TaroElement);
            var Performance = function() {
                function Performance() {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, Performance);
                    this.recorder = new Map;
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(Performance, [ {
                    key: \\"start\\",
                    value: function start(id) {
                        if (!options.debug) {
                            return;
                        }
                        this.recorder.set(id, Date.now());
                    }
                }, {
                    key: \\"stop\\",
                    value: function stop(id) {
                        if (!options.debug) {
                            return;
                        }
                        var now = Date.now();
                        var prev = this.recorder.get(id);
                        var time = now - prev;
                        console.log(\\"\\".concat(id, \\" \\\\u65f6\\\\u957f\\\\uff1a \\").concat(time, \\"ms\\"));
                    }
                } ]);
                return Performance;
            }();
            var perf = new Performance;
            var TaroRootElement = function(_TaroElement2) {
                Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(TaroRootElement, _TaroElement2);
                function TaroRootElement() {
                    var _this10;
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroRootElement);
                    _this10 = Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(TaroRootElement).call(this, 1, \\"root\\"));
                    _this10.pendingUpdate = false;
                    _this10.updatePayloads = [];
                    _this10.pendingFlush = false;
                    _this10.updateCallbacks = [];
                    _this10.ctx = null;
                    return _this10;
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroRootElement, [ {
                    key: \\"enqueueUpdate\\",
                    value: function enqueueUpdate(payload) {
                        this.updatePayloads.push(payload);
                        if (this.pendingUpdate || this.ctx === null) {
                            return;
                        }
                        this.performUpdate();
                    }
                }, {
                    key: \\"performUpdate\\",
                    value: function performUpdate() {
                        var _this11 = this;
                        var initRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
                        var prerender = arguments.length > 1 ? arguments[1] : undefined;
                        this.pendingUpdate = true;
                        var ctx = this.ctx;
                        setTimeout((function() {
                            perf.start(SET_DATA);
                            var data = Object.create(null);
                            var resetPaths = new Set(initRender ? [ \\"root.cn.[0]\\", \\"root.cn[0]\\" ] : []);
                            while (_this11.updatePayloads.length > 0) {
                                var _this11$updatePayload = _this11.updatePayloads.shift(), path = _this11$updatePayload.path, value = _this11$updatePayload.value;
                                if (path.endsWith(\\"cn\\")) {
                                    resetPaths.add(path);
                                }
                                data[path] = value;
                            }
                            var _loop2 = function _loop2(_path) {
                                resetPaths.forEach((function(p) {
                                    if (_path.includes(p) && _path !== p) {
                                        delete data[_path];
                                    }
                                }));
                                var value = data[_path];
                                if (isFunction(value)) {
                                    data[_path] = value();
                                }
                            };
                            for (var _path in data) {
                                _loop2(_path);
                            }
                            if (isFunction(prerender)) {
                                prerender(data);
                            } else {
                                _this11.pendingUpdate = false;
                                ctx.setData(data, (function() {
                                    perf.stop(SET_DATA);
                                    if (!_this11.pendingFlush) {
                                        _this11.flushUpdateCallback();
                                    }
                                    if (initRender) {
                                        perf.stop(PAGE_INIT);
                                    }
                                }));
                            }
                        }), 0);
                    }
                }, {
                    key: \\"enqueueUpdateCallbak\\",
                    value: function enqueueUpdateCallbak(cb, ctx) {
                        this.updateCallbacks.push((function() {
                            ctx ? cb.call(ctx) : cb();
                        }));
                    }
                }, {
                    key: \\"flushUpdateCallback\\",
                    value: function flushUpdateCallback() {
                        this.pendingFlush = false;
                        var copies = this.updateCallbacks.slice(0);
                        this.updateCallbacks.length = 0;
                        for (var i = 0; i < copies.length; i++) {
                            copies[i]();
                        }
                    }
                }, {
                    key: \\"_path\\",
                    get: function get() {
                        return \\"root\\";
                    }
                }, {
                    key: \\"_root\\",
                    get: function get() {
                        return this;
                    }
                } ]);
                return TaroRootElement;
            }(TaroElement);
            var isBrowser = typeof document !== \\"undefined\\" && !!document.scripts;
            var doc = isBrowser ? document : EMPTY_OBJ;
            var win = isBrowser ? window : EMPTY_OBJ;
            var TaroDocument = function(_TaroElement3) {
                Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(TaroDocument, _TaroElement3);
                function TaroDocument() {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, TaroDocument);
                    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(TaroDocument).call(this, 9, \\"#document\\"));
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(TaroDocument, [ {
                    key: \\"createElement\\",
                    value: function createElement(type) {
                        if (type === \\"root\\") {
                            return new TaroRootElement;
                        }
                        if (controlledComponent.has(type)) {
                            return new FormElement(1, type);
                        }
                        return new TaroElement(1, type);
                    }
                }, {
                    key: \\"createTextNode\\",
                    value: function createTextNode(text) {
                        return new TaroText(text);
                    }
                }, {
                    key: \\"getElementById\\",
                    value: function getElementById(id) {
                        var el = eventSource.get(id);
                        return isUndefined(el) ? null : el;
                    }
                }, {
                    key: \\"createComment\\",
                    value: function createComment() {
                        return new TaroText(\\"\\");
                    }
                } ]);
                return TaroDocument;
            }(TaroElement);
            function createDocument() {
                var doc = new TaroDocument;
                doc.appendChild(doc.documentElement = doc.createElement(\\"html\\"));
                doc.documentElement.appendChild(doc.head = doc.createElement(\\"head\\"));
                doc.documentElement.appendChild(doc.createElement(\\"body\\"));
                var app = doc.createElement(\\"app\\");
                app.id = \\"app\\";
                var container = doc.createElement(\\"container\\");
                container.appendChild(app);
                doc.documentElement.lastChild.appendChild(container);
                return doc;
            }
            var document$1 = isBrowser ? doc : createDocument();
            var machine = \\"Macintosh\\";
            var arch = \\"Intel Mac OS X 10_14_5\\";
            var engine = \\"AppleWebKit/534.36 (KHTML, like Gecko) NodeJS/v4.1.0 Chrome/76.0.3809.132 Safari/534.36\\";
            var navigator = isBrowser ? win.navigator : {
                appCodeName: \\"Mozilla\\",
                appName: \\"Netscape\\",
                appVersion: \\"5.0 (\\" + machine + \\"; \\" + arch + \\") \\" + engine,
                cookieEnabled: true,
                mimeTypes: [],
                onLine: true,
                platform: \\"MacIntel\\",
                plugins: [],
                product: \\"Taro\\",
                productSub: \\"20030107\\",
                userAgent: \\"Mozilla/5.0 (\\" + machine + \\"; \\" + arch + \\") \\" + engine,
                vendor: \\"Joyent\\",
                vendorSub: \\"\\"
            };
            var now;
            (function() {
                var loadTime;
                if (typeof performance !== \\"undefined\\" && performance !== null && performance.now) {
                    now = function now() {
                        return performance.now();
                    };
                } else if (Date.now) {
                    now = function now() {
                        return Date.now() - loadTime;
                    };
                    loadTime = Date.now();
                } else {
                    now = function now() {
                        return (new Date).getTime() - loadTime;
                    };
                    loadTime = (new Date).getTime();
                }
            })();
            var lastTime = 0;
            var raf = typeof requestAnimationFrame !== \\"undefined\\" && requestAnimationFrame !== null ? requestAnimationFrame : function(callback) {
                var _now = now();
                var nextTime = Math.max(lastTime + 16, _now);
                return setTimeout((function() {
                    callback(lastTime = nextTime);
                }), nextTime - _now);
            };
            var caf = typeof cancelAnimationFrame !== \\"undefined\\" && cancelAnimationFrame !== null ? cancelAnimationFrame : clearTimeout;
            var window$1 = isBrowser ? win : {
                navigator: navigator,
                document: document$1
            };
            if (false) {}
            var Current = {
                app: null,
                router: null,
                page: null
            };
            var Events = function() {
                function Events(opts) {
                    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, Events);
                    if (typeof opts !== \\"undefined\\" && opts.callbacks) {
                        this.callbacks = opts.callbacks;
                    } else {
                        this.callbacks = {};
                    }
                }
                Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(Events, [ {
                    key: \\"on\\",
                    value: function on(eventName, callback, context) {
                        var event, node, tail, list;
                        if (!callback) {
                            return this;
                        }
                        eventName = eventName.split(Events.eventSplitter);
                        var calls = this.callbacks;
                        while (event = eventName.shift()) {
                            list = calls[event];
                            node = list ? list.tail : {};
                            node.next = tail = {};
                            node.context = context;
                            node.callback = callback;
                            calls[event] = {
                                tail: tail,
                                next: list ? list.next : node
                            };
                        }
                        return this;
                    }
                }, {
                    key: \\"once\\",
                    value: function once(events, callback, context) {
                        var _this12 = this;
                        var wrapper = function wrapper() {
                            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                                args[_key] = arguments[_key];
                            }
                            callback.apply(_this12, args);
                            _this12.off(events, wrapper, context);
                        };
                        this.on(events, wrapper, context);
                        return this;
                    }
                }, {
                    key: \\"off\\",
                    value: function off(events, callback, context) {
                        var event, calls, node, tail, cb, ctx;
                        if (!(calls = this.callbacks)) {
                            return this;
                        }
                        if (!(events || callback || context)) {
                            delete this.callbacks;
                            return this;
                        }
                        events = events ? events.split(Events.eventSplitter) : Object.keys(calls);
                        while (event = events.shift()) {
                            node = calls[event];
                            delete calls[event];
                            if (!node || !(callback || context)) {
                                continue;
                            }
                            tail = node.tail;
                            while ((node = node.next) !== tail) {
                                cb = node.callback;
                                ctx = node.context;
                                if (callback && cb !== callback || context && ctx !== context) {
                                    this.on(event, cb, ctx);
                                }
                            }
                        }
                        return this;
                    }
                }, {
                    key: \\"trigger\\",
                    value: function trigger(events) {
                        var event, node, calls, tail;
                        if (!(calls = this.callbacks)) {
                            return this;
                        }
                        events = events.split(Events.eventSplitter);
                        var rest = [].slice.call(arguments, 1);
                        while (event = events.shift()) {
                            if (node = calls[event]) {
                                tail = node.tail;
                                while ((node = node.next) !== tail) {
                                    node.callback.apply(node.context || this, rest);
                                }
                            }
                        }
                        return this;
                    }
                } ]);
                return Events;
            }();
            Events.eventSplitter = /\\\\s+/;
            var eventCenter;
            if (false) {} else {
                eventCenter = new Events;
            }
            var instances = new Map;
            function injectPageInstance(inst, id) {
                instances.set(id, inst);
            }
            function getPageInstance(id) {
                return instances.get(id);
            }
            function addLeadingSlash(path) {
                if (path == null) {
                    return \\"\\";
                }
                return path.charAt(0) === \\"/\\" ? path : \\"/\\" + path;
            }
            var pageId = incrementId();
            function safeExecute(path, lifecycle) {
                var isReact = \\"nerv\\" !== \\"vue\\";
                var instance = instances.get(path);
                if (instance == null) {
                    return;
                }
                if (isReact) {
                    if (lifecycle === \\"onShow\\") {
                        lifecycle = \\"componentDidShow\\";
                    } else if (lifecycle === \\"onHide\\") {
                        lifecycle = \\"componentDidHide\\";
                    }
                }
                var func = isReact ? instance[lifecycle] : instance.$options[lifecycle];
                for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                    args[_key2 - 2] = arguments[_key2];
                }
                if (isArray(func)) {
                    for (var i = 0; i < func.length; i++) {
                        func[i].apply(instance, args);
                    }
                    return;
                }
                if (!isFunction(func)) {
                    return;
                }
                return func.apply(instance, args);
            }
            function stringify(obj) {
                if (obj == null) {
                    return \\"\\";
                }
                return \\"?\\" + Object.keys(obj).map((function(key) {
                    return key + \\"=\\" + obj[key];
                })).join(\\"&\\");
            }
            function getPath(id, options) {
                var path = id;
                if (!isBrowser) {
                    path = id + stringify(options);
                }
                return path;
            }
            function getOnReadyEventKey(path) {
                return path + \\".\\" + \\"onReady\\";
            }
            function getOnShowEventKey(path) {
                return path + \\".\\" + \\"onShow\\";
            }
            function getOnHideEventKey(path) {
                return path + \\".\\" + \\"onHide\\";
            }
            function createPageConfig(component, pageName, data) {
                var id = pageName !== null && pageName !== void 0 ? pageName : \\"taro_page_\\".concat(pageId());
                var pageElement = null;
                var config = {
                    onLoad: function onLoad(options, cb) {
                        var _this13 = this;
                        perf.start(PAGE_INIT);
                        var path = getPath(id, options);
                        Current.router = {
                            params: options,
                            path: addLeadingSlash(this.route || this.__route__),
                            onReady: getOnReadyEventKey(id),
                            onShow: getOnShowEventKey(id),
                            onHide: getOnHideEventKey(id)
                        };
                        Current.app.mount(component, path, (function() {
                            pageElement = document$1.getElementById(path);
                            ensure(pageElement !== null, \\"\\\\u6ca1\\\\u6709\\\\u627e\\\\u5230\\\\u9875\\\\u9762\\\\u5b9e\\\\u4f8b\\\\u3002\\");
                            safeExecute(path, \\"onLoad\\", options);
                            if (!isBrowser) {
                                pageElement.ctx = _this13;
                                pageElement.performUpdate(true, cb);
                            }
                        }));
                    },
                    onReady: function onReady() {
                        var path = getPath(id, this.options);
                        raf((function() {
                            eventCenter.trigger(getOnReadyEventKey(id));
                        }));
                        safeExecute(path, \\"onReady\\");
                    },
                    onUnload: function onUnload() {
                        var path = getPath(id, this.options);
                        Current.app.unmount(path, (function() {
                            instances.delete(path);
                            if (pageElement) {
                                pageElement.ctx = null;
                            }
                        }));
                    },
                    onShow: function onShow() {
                        Current.page = this;
                        var path = getPath(id, this.options);
                        Current.router = {
                            params: this.options,
                            path: addLeadingSlash(this.route || this.__route__),
                            onReady: getOnReadyEventKey(id),
                            onShow: getOnShowEventKey(id),
                            onHide: getOnHideEventKey(id)
                        };
                        raf((function() {
                            eventCenter.trigger(getOnShowEventKey(id));
                        }));
                        safeExecute(path, \\"onShow\\");
                    },
                    onHide: function onHide() {
                        Current.page = null;
                        Current.router = null;
                        var path = getPath(id, this.options);
                        raf((function() {
                            eventCenter.trigger(getOnHideEventKey(id));
                        }));
                        safeExecute(path, \\"onHide\\");
                    },
                    onPullDownRefresh: function onPullDownRefresh() {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onPullDownRefresh\\");
                    },
                    onReachBottom: function onReachBottom() {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onReachBottom\\");
                    },
                    onPageScroll: function onPageScroll(options) {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onPageScroll\\", options);
                    },
                    onShareAppMessage: function onShareAppMessage(options) {
                        var target = options.target;
                        if (target != null) {
                            var _id = target.id;
                            var element = document$1.getElementById(_id);
                            if (element != null) {
                                options.target.dataset = element.dataset;
                            }
                        }
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onShareAppMessage\\", options);
                    },
                    onResize: function onResize(options) {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onResize\\", options);
                    },
                    onTabItemTap: function onTabItemTap(options) {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onTabItemTap\\", options);
                    },
                    onTitleClick: function onTitleClick() {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onTitleClick\\");
                    },
                    onOptionMenuClick: function onOptionMenuClick() {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onOptionMenuClick\\");
                    },
                    onPopMenuClick: function onPopMenuClick() {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onPopMenuClick\\");
                    },
                    onPullIntercept: function onPullIntercept() {
                        var path = getPath(id, this.options);
                        return safeExecute(path, \\"onPullIntercept\\");
                    }
                };
                config.eh = eventHandler;
                if (!isUndefined(data)) {
                    config.data = data;
                }
                if (isBrowser) {
                    config.path = id;
                }
                return config;
            }
            function createComponentConfig(component, componentName, data) {
                var _a, _b, _c;
                var id = componentName !== null && componentName !== void 0 ? componentName : \\"taro_component_\\".concat(pageId());
                var componentElement = null;
                var config = {
                    attached: function attached() {
                        var _this14 = this;
                        perf.start(PAGE_INIT);
                        Current.app.mount(component, id, (function() {
                            componentElement = document$1.getElementById(id);
                            ensure(componentElement !== null, \\"\\\\u6ca1\\\\u6709\\\\u627e\\\\u5230\\\\u7ec4\\\\u4ef6\\\\u5b9e\\\\u4f8b\\\\u3002\\");
                            safeExecute(id, \\"onLoad\\");
                            if (!isBrowser) {
                                componentElement.ctx = _this14;
                                componentElement.performUpdate(true);
                            }
                        }));
                    },
                    detached: function detached() {
                        Current.app.unmount(id, (function() {
                            if (componentElement) {
                                componentElement.ctx = null;
                            }
                        }));
                    },
                    pageLifetimes: {
                        show: function show() {
                            safeExecute(id, \\"onShow\\");
                        },
                        hide: function hide() {
                            safeExecute(id, \\"onHide\\");
                        }
                    },
                    methods: {
                        eh: eventHandler
                    }
                };
                if (!isUndefined(data)) {
                    config.data = data;
                }
                config[\\"options\\"] = (_a = component === null || component === void 0 ? void 0 : component[\\"options\\"]) !== null && _a !== void 0 ? _a : EMPTY_OBJ;
                config[\\"externalClasses\\"] = (_b = component === null || component === void 0 ? void 0 : component[\\"externalClasses\\"]) !== null && _b !== void 0 ? _b : EMPTY_OBJ;
                config[\\"behaviors\\"] = (_c = component === null || component === void 0 ? void 0 : component[\\"behaviors\\"]) !== null && _c !== void 0 ? _c : EMPTY_OBJ;
                return config;
            }
            function createRecursiveComponentConfig() {
                return {
                    properties: {
                        i: {
                            type: Object,
                            value: Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\\"a\\"])({}, \\"nn\\", \\"view\\")
                        }
                    },
                    observers: {
                        i: function i(val) {
                            warn(val[\\"nn\\"] === \\"#text\\", \\"\\\\u8bf7\\\\u5728\\\\u6b64\\\\u5143\\\\u7d20\\\\u5916\\\\u518d\\\\u5957\\\\u4e00\\\\u5c42\\\\u975e Text \\\\u5143\\\\u7d20\\\\uff1a<text>\\".concat(val[\\"v\\"], \\"</text>\\\\uff0c\\\\u8be6\\\\u60c5\\\\uff1ahttps://github.com/NervJS/taro/issues/6054\\"));
                        }
                    },
                    options: {
                        addGlobalClass: true
                    },
                    methods: {
                        eh: eventHandler
                    }
                };
            }
            function connectReactPage(R, id) {
                var h = R.createElement;
                return function(component) {
                    var _a;
                    var isReactComponent = isFunction(component[\\"render\\"]) || !!((_a = component.prototype) === null || _a === void 0 ? void 0 : _a.isReactComponent) || component.prototype instanceof R.Component;
                    var inject = function inject(node) {
                        return node && injectPageInstance(node, id);
                    };
                    var refs = isReactComponent ? {
                        ref: inject
                    } : {
                        forwardedRef: inject
                    };
                    if (PageContext === EMPTY_OBJ) {
                        PageContext = R.createContext(\\"\\");
                    }
                    return (function(_R$Component) {
                        Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(Page, _R$Component);
                        function Page() {
                            var _this15;
                            Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, Page);
                            _this15 = Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(Page).apply(this, arguments));
                            _this15.state = {
                                hasError: false
                            };
                            return _this15;
                        }
                        Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(Page, [ {
                            key: \\"componentDidCatch\\",
                            value: function componentDidCatch(error, info) {
                                console.warn(error);
                                console.error(info.componentStack);
                            }
                        }, {
                            key: \\"render\\",
                            value: function render() {
                                var children = this.state.hasError ? [] : h(PageContext.Provider, {
                                    value: id
                                }, h(component, Object.assign(Object.assign({}, this.props), refs)));
                                if (isBrowser) {
                                    return h(\\"div\\", {
                                        id: id,
                                        className: \\"taro_page\\"
                                    }, children);
                                }
                                return h(\\"root\\", {
                                    id: id
                                }, children);
                            }
                        } ], [ {
                            key: \\"getDerivedStateFromError\\",
                            value: function getDerivedStateFromError(error) {
                                console.warn(error);
                                return {
                                    hasError: true
                                };
                            }
                        } ]);
                        return Page;
                    }(R.Component));
                };
            }
            var R = EMPTY_OBJ;
            var PageContext = EMPTY_OBJ;
            var ReactDOM;
            function createReactApp(App, react, reactdom) {
                R = react;
                ReactDOM = reactdom;
                ensure(!!ReactDOM, \\"\\\\u6784\\\\u5efa React/Nerv \\\\u9879\\\\u76ee\\\\u8bf7\\\\u628a process.env.FRAMEWORK \\\\u8bbe\\\\u7f6e\\\\u4e3a 'react'/'nerv' \\");
                var ref = R.createRef();
                var wrapper;
                var AppWrapper = function(_R$Component2) {
                    Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\\"a\\"])(AppWrapper, _R$Component2);
                    function AppWrapper() {
                        var _this16;
                        Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, AppWrapper);
                        _this16 = Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\\"a\\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\\"a\\"])(AppWrapper).apply(this, arguments));
                        _this16.pages = [];
                        _this16.elements = [];
                        return _this16;
                    }
                    Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(AppWrapper, [ {
                        key: \\"mount\\",
                        value: function mount(component, id, cb) {
                            var page = function page() {
                                return R.createElement(component, {
                                    key: id,
                                    tid: id
                                });
                            };
                            this.pages.push(page);
                            this.forceUpdate(cb);
                        }
                    }, {
                        key: \\"unmount\\",
                        value: function unmount(id, cb) {
                            for (var i = 0; i < this.elements.length; i++) {
                                var element = this.elements[i];
                                if (element.key === id) {
                                    this.elements.splice(i, 1);
                                    break;
                                }
                            }
                            this.forceUpdate(cb);
                        }
                    }, {
                        key: \\"render\\",
                        value: function render() {
                            while (this.pages.length > 0) {
                                var page = this.pages.pop();
                                this.elements.push(page());
                            }
                            return R.createElement(App, {
                                ref: ref
                            }, isBrowser ? R.createElement(\\"div\\", null, this.elements.slice()) : this.elements.slice());
                        }
                    } ]);
                    return AppWrapper;
                }(R.Component);
                var AppConfig = function() {
                    function AppConfig() {
                        Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, AppConfig);
                    }
                    Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(AppConfig, [ {
                        key: \\"onLaunch\\",
                        value: function onLaunch(options) {
                            wrapper = ReactDOM.render(R.createElement(AppWrapper), document$1.getElementById(\\"app\\"));
                            var app = ref.current;
                            Current.router = Object.assign({
                                params: options === null || options === void 0 ? void 0 : options.query
                            }, options);
                            if (app != null && isFunction(app.onLaunch)) {
                                app.onLaunch(options);
                            }
                        }
                    }, {
                        key: \\"onShow\\",
                        value: function onShow(options) {
                            var app = ref.current;
                            Current.router = Object.assign({
                                params: options === null || options === void 0 ? void 0 : options.query
                            }, options);
                            if (app != null && isFunction(app.componentDidShow)) {
                                app.componentDidShow(options);
                            }
                        }
                    }, {
                        key: \\"onHide\\",
                        value: function onHide(options) {
                            var app = ref.current;
                            if (app != null && isFunction(app.componentDidHide)) {
                                app.componentDidHide(options);
                            }
                        }
                    }, {
                        key: \\"render\\",
                        value: function render(cb) {
                            wrapper.forceUpdate(cb);
                        }
                    }, {
                        key: \\"mount\\",
                        value: function mount(component, id, cb) {
                            var page = connectReactPage(R, id)(component);
                            wrapper.mount(page, id, cb);
                        }
                    }, {
                        key: \\"unmount\\",
                        value: function unmount(id, cb) {
                            wrapper.unmount(id, cb);
                        }
                    } ]);
                    return AppConfig;
                }();
                Current.app = new AppConfig;
                return Current.app;
            }
            function connectVuePage(Vue, id) {
                return function(component) {
                    var injectedPage = Vue.extend({
                        props: {
                            tid: String
                        },
                        mixins: [ component, {
                            created: function created() {
                                injectPageInstance(this, id);
                            }
                        } ]
                    });
                    var options = {
                        render: function render(h) {
                            return h(isBrowser ? \\"div\\" : \\"root\\", {
                                attrs: {
                                    id: id,
                                    class: isBrowser ? \\"taro_page\\" : \\"\\"
                                }
                            }, [ h(injectedPage, {
                                props: {
                                    tid: id
                                }
                            }) ]);
                        }
                    };
                    return options;
                };
            }
            var Vue;
            function createVueApp(App, vue) {
                Vue = vue;
                ensure(!!Vue, \\"\\\\u6784\\\\u5efa Vue \\\\u9879\\\\u76ee\\\\u8bf7\\\\u628a process.env.FRAMEWORK \\\\u8bbe\\\\u7f6e\\\\u4e3a 'vue'\\");
                Vue.config.getTagNamespace = noop;
                var elements = [];
                var pages = [];
                var appInstance;
                var wrapper = new Vue({
                    render: function render(h) {
                        while (pages.length > 0) {
                            var page = pages.pop();
                            elements.push(page(h));
                        }
                        return h(App.$options, {
                            ref: \\"app\\"
                        }, elements.slice());
                    },
                    methods: {
                        mount: function mount(component, id, cb) {
                            pages.push((function(h) {
                                return h(component, {
                                    key: id
                                });
                            }));
                            this.updateSync(cb);
                        },
                        updateSync: function updateSync(cb) {
                            this._update(this._render(), false);
                            this.$children.forEach((function(child) {
                                return child._update(child._render(), false);
                            }));
                            cb();
                        },
                        unmount: function unmount(id, cb) {
                            for (var i = 0; i < elements.length; i++) {
                                var element = elements[i];
                                if (element.key === id) {
                                    elements.splice(i, 1);
                                    break;
                                }
                            }
                            this.updateSync(cb);
                        }
                    }
                });
                var AppConfig = function() {
                    function AppConfig() {
                        Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__[\\"a\\"])(this, AppConfig);
                    }
                    Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__[\\"a\\"])(AppConfig, [ {
                        key: \\"onLaunch\\",
                        value: function onLaunch(options) {
                            wrapper.$mount(document$1.getElementById(\\"app\\"));
                            appInstance = wrapper.$refs.app;
                            Current.router = Object.assign({
                                params: options === null || options === void 0 ? void 0 : options.query
                            }, options);
                            if (appInstance != null && isFunction(appInstance.$options.onLaunch)) {
                                appInstance.$options.onLaunch.call(appInstance, options);
                            }
                        }
                    }, {
                        key: \\"onShow\\",
                        value: function onShow(options) {
                            Current.router = Object.assign({
                                params: options === null || options === void 0 ? void 0 : options.query
                            }, options);
                            if (appInstance != null && isFunction(appInstance.$options.onShow)) {
                                appInstance.$options.onShow.call(appInstance, options);
                            }
                        }
                    }, {
                        key: \\"onHide\\",
                        value: function onHide(options) {
                            if (appInstance != null && isFunction(appInstance.$options.onHide)) {
                                appInstance.$options.onHide.call(appInstance, options);
                            }
                        }
                    }, {
                        key: \\"mount\\",
                        value: function mount(component, id, cb) {
                            var page = connectVuePage(Vue, id)(component);
                            wrapper.mount(page, id, cb);
                        }
                    }, {
                        key: \\"unmount\\",
                        value: function unmount(id, cb) {
                            wrapper.unmount(id, cb);
                        }
                    } ]);
                    return AppConfig;
                }();
                Current.app = new AppConfig;
                return Current.app;
            }
            var taroHooks = function taroHooks(lifecycle) {
                return function(fn) {
                    var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
                    var id = R.useContext(PageContext);
                    R.useLayoutEffect((function() {
                        var inst = getPageInstance(id);
                        var first = false;
                        if (inst == null) {
                            first = true;
                            inst = Object.create(null);
                        }
                        if (lifecycle !== \\"onShareAppMessage\\") {
                            inst[lifecycle] = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\\"a\\"])(inst[lifecycle] || []), [ fn.bind(null) ]);
                        } else {
                            inst[lifecycle] = fn.bind(null);
                        }
                        if (first) {
                            injectPageInstance(inst, id);
                        }
                    }), deps);
                };
            };
            var useDidShow = taroHooks(\\"componentDidShow\\");
            var useDidHide = taroHooks(\\"componentDidHide\\");
            var usePullDownRefresh = taroHooks(\\"onPullDownRefresh\\");
            var useReachBottom = taroHooks(\\"onReachBottom\\");
            var usePageScroll = taroHooks(\\"onPageScroll\\");
            var useResize = taroHooks(\\"onResize\\");
            var useShareAppMessage = taroHooks(\\"onShareAppMessage\\");
            var useTabItemTap = taroHooks(\\"onTabItemTap\\");
            var useTitleClick = taroHooks(\\"onTitleClick\\");
            var useOptionMenuClick = taroHooks(\\"onOptionMenuClick\\");
            var usePullIntercept = taroHooks(\\"onPullIntercept\\");
            var useReady = taroHooks(\\"onReady\\");
            var useRouter = function useRouter() {
                var dynamic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
                return dynamic ? Current.router : R.useMemo((function() {
                    return Current.router;
                }), []);
            };
            var useScope = function useScope() {
                return undefined;
            };
            function removeLeadingSlash(path) {
                if (path == null) {
                    return \\"\\";
                }
                return path.charAt(0) === \\"/\\" ? path.slice(1) : path;
            }
            var nextTick = function nextTick(cb, ctx) {
                var router = Current.router;
                var timerFunc = function timerFunc() {
                    setTimeout((function() {
                        ctx ? cb.call(ctx) : cb();
                    }), 1);
                };
                if (!isBrowser && router !== null) {
                    var pageElement = null;
                    var path = getPath(removeLeadingSlash(router.path), router.params);
                    pageElement = document$1.getElementById(path);
                    if (pageElement !== null) {
                        pageElement.enqueueUpdateCallbak(cb, ctx);
                    } else {
                        timerFunc();
                    }
                } else {
                    timerFunc();
                }
            };
        }).call(this, __webpack_require__(3)[\\"document\\"], __webpack_require__(3)[\\"window\\"], __webpack_require__(3)[\\"requestAnimationFrame\\"], __webpack_require__(3)[\\"cancelAnimationFrame\\"]);
    }
} ]);

/** filePath: dist/vendors.js **/
(wx[\\"webpackJsonp\\"] = wx[\\"webpackJsonp\\"] || []).push([ [ 2 ], [ function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _classCallCheck;
    }));
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError(\\"Cannot call a class as a function\\");
        }
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _createClass;
    }));
    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if (\\"value\\" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _getPrototypeOf;
    }));
    function _getPrototypeOf(o) {
        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
            return o.__proto__ || Object.getPrototypeOf(o);
        };
        return _getPrototypeOf(o);
    }
}, , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _possibleConstructorReturn;
    }));
    var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
    var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
    function _possibleConstructorReturn(self, call) {
        if (call && (Object(_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[\\"a\\"])(call) === \\"object\\" || typeof call === \\"function\\")) {
            return call;
        }
        return Object(_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__[\\"a\\"])(self);
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _inherits;
    }));
    function _setPrototypeOf(o, p) {
        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        };
        return _setPrototypeOf(o, p);
    }
    function _inherits(subClass, superClass) {
        if (typeof superClass !== \\"function\\" && superClass !== null) {
            throw new TypeError(\\"Super expression must either be null or a function\\");
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true
            }
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    (function(window, document, requestAnimationFrame) {
        __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
            return Component;
        }));
        var global = function() {
            var local;
            if (typeof global !== \\"undefined\\") {
                local = global;
            } else if (typeof self !== \\"undefined\\") {
                local = self;
            } else {
                try {
                    local = Function(\\"return this\\")();
                } catch (e) {
                    throw new Error(\\"global object is unavailable in this environment\\");
                }
            }
            return local;
        }();
        var isBrowser = typeof window !== \\"undefined\\";
        function noop() {}
        var fakeDoc = {
            createElement: noop,
            createElementNS: noop,
            createTextNode: noop
        };
        var doc = isBrowser ? document : fakeDoc;
        var UA = isBrowser && window.navigator.userAgent.toLowerCase();
        var isMacSafari = isBrowser && UA && window.navigator.platform && /mac/i.test(window.navigator.platform) && /^((?!chrome|android).)*safari/i.test(UA);
        var isTaro = isBrowser && !document.scripts;
        var isIE9 = UA && UA.indexOf(\\"msie 9.0\\") > 0;
        var isiOS = UA && /iphone|ipad|ipod|ios/.test(UA);
        function isNumber(arg) {
            return typeof arg === \\"number\\";
        }
        var isSupportSVG = isFunction(doc.createAttributeNS);
        function isString(arg) {
            return typeof arg === \\"string\\";
        }
        function isFunction(arg) {
            return typeof arg === \\"function\\";
        }
        function isBoolean(arg) {
            return arg === true || arg === false;
        }
        var isArray = Array.isArray;
        function isObject(arg) {
            return arg === Object(arg) && !isFunction(arg);
        }
        function isUndefined(o) {
            return o === undefined;
        }
        function objectIs(x, y) {
            if (x === y) {
                return x !== 0 || 1 / x === 1 / y;
            }
            return x !== x && y !== y;
        }
        var canUsePromise = \\"Promise\\" in global && !isMacSafari;
        var resolved;
        if (canUsePromise) {
            resolved = Promise.resolve();
        }
        var nextTick = function nextTick(fn) {
            var args = [], len = arguments.length - 1;
            while (len-- > 0) {
                args[len] = arguments[len + 1];
            }
            fn = isFunction(fn) ? fn.bind.apply(fn, [ null ].concat(args)) : fn;
            if (canUsePromise) {
                return resolved.then(fn);
            }
            var timerFunc = \\"requestAnimationFrame\\" in global && !isMacSafari ? requestAnimationFrame : setTimeout;
            timerFunc(fn);
        };
        Object.is = Object.is || function(x, y) {
            if (x === y) {
                return x !== 0 || 1 / x === 1 / y;
            }
            return x !== x && y !== y;
        };
        function shallowEqual(obj1, obj2) {
            if (obj1 === null || obj2 === null) {
                return false;
            }
            if (Object.is(obj1, obj2)) {
                return true;
            }
            var obj1Keys = obj1 ? Object.keys(obj1) : [];
            var obj2Keys = obj2 ? Object.keys(obj2) : [];
            if (obj1Keys.length !== obj2Keys.length) {
                return false;
            }
            for (var i = 0; i < obj1Keys.length; i++) {
                var obj1KeyItem = obj1Keys[i];
                if (!obj2.hasOwnProperty(obj1KeyItem) || !Object.is(obj1[obj1KeyItem], obj2[obj1KeyItem])) {
                    return false;
                }
            }
            return true;
        }
        var SimpleMap = function SimpleMap() {
            this.cache = [];
            this.size = 0;
        };
        SimpleMap.prototype.set = function set(k, v) {
            var this$1 = this;
            var len = this.cache.length;
            if (!len) {
                this.cache.push({
                    k: k,
                    v: v
                });
                this.size += 1;
                return;
            }
            for (var i = 0; i < len; i++) {
                var item = this$1.cache[i];
                if (item.k === k) {
                    item.v = v;
                    return;
                }
            }
            this.cache.push({
                k: k,
                v: v
            });
            this.size += 1;
        };
        SimpleMap.prototype.get = function get(k) {
            var this$1 = this;
            var len = this.cache.length;
            if (!len) {
                return;
            }
            for (var i = 0; i < len; i++) {
                var item = this$1.cache[i];
                if (item.k === k) {
                    return item.v;
                }
            }
        };
        SimpleMap.prototype.has = function has(k) {
            var this$1 = this;
            var len = this.cache.length;
            if (!len) {
                return false;
            }
            for (var i = 0; i < len; i++) {
                var item = this$1.cache[i];
                if (item.k === k) {
                    return true;
                }
            }
            return false;
        };
        SimpleMap.prototype[\\"delete\\"] = function delete$1(k) {
            var this$1 = this;
            var len = this.cache.length;
            for (var i = 0; i < len; i++) {
                var item = this$1.cache[i];
                if (item.k === k) {
                    this$1.cache.splice(i, 1);
                    this$1.size -= 1;
                    return true;
                }
            }
            return false;
        };
        SimpleMap.prototype.clear = function clear() {
            var this$1 = this;
            var len = this.cache.length;
            this.size = 0;
            if (!len) {
                return;
            }
            while (len) {
                this$1.cache.pop();
                len--;
            }
        };
        var MapClass = \\"Map\\" in global ? Map : SimpleMap;
        function isAttrAnEvent(attr) {
            return attr[0] === \\"o\\" && attr[1] === \\"n\\";
        }
        var extend = function() {
            if (\\"assign\\" in Object) {
                return function(source, from) {
                    if (!from) {
                        return source;
                    }
                    Object.assign(source, from);
                    return source;
                };
            } else {
                return function(source, from) {
                    if (!from) {
                        return source;
                    }
                    for (var key in from) {
                        if (from.hasOwnProperty(key)) {
                            source[key] = from[key];
                        }
                    }
                    return source;
                };
            }
        }();
        function clone(obj) {
            return extend({}, obj);
        }
        var Current = {
            current: null,
            index: 0
        };
        var EMPTY_CHILDREN = [];
        var EMPTY_OBJ = {};
        function isNullOrUndef(o) {
            return o === undefined || o === null;
        }
        function isInvalid(o) {
            return isNullOrUndef(o) || o === true || o === false;
        }
        function isVNode(node) {
            return !isNullOrUndef(node) && node.vtype === 2;
        }
        function isVText(node) {
            return !isNullOrUndef(node) && node.vtype === 1;
        }
        function isComponent(instance) {
            return !isInvalid(instance) && instance.isReactComponent === EMPTY_OBJ;
        }
        function isPortal(vtype, node) {
            return (vtype & 32) > 0;
        }
        function isComposite(node) {
            return !isNullOrUndef(node) && node.vtype === 4;
        }
        function isValidElement(node) {
            return !isNullOrUndef(node) && node.vtype;
        }
        function noop$1() {}
        var VType;
        (function(VType) {
            VType[VType[\\"Text\\"] = 1] = \\"Text\\";
            VType[VType[\\"Node\\"] = 2] = \\"Node\\";
            VType[VType[\\"Composite\\"] = 4] = \\"Composite\\";
            VType[VType[\\"Void\\"] = 16] = \\"Void\\";
            VType[VType[\\"Portal\\"] = 32] = \\"Portal\\";
        })(VType || (VType = {}));
        var Ref = {
            update: function update(lastVnode, nextVnode, domNode) {
                var prevRef = lastVnode != null && lastVnode.ref;
                var nextRef = nextVnode != null && nextVnode.ref;
                if (prevRef !== nextRef) {
                    this.detach(lastVnode, prevRef, lastVnode.dom);
                    this.attach(nextVnode, nextRef, domNode);
                }
            },
            attach: function attach(vnode, ref, domNode) {
                var node = isComposite(vnode) ? vnode.component : domNode;
                if (isFunction(ref)) {
                    var componentForCatcher = isComposite(vnode) ? vnode.component : vnode;
                    errorCatcher((function() {
                        ref(node);
                    }), componentForCatcher);
                } else if (isString(ref)) {
                    var inst = vnode._owner;
                    if (inst && isFunction(inst.render)) {
                        inst.refs[ref] = node;
                    }
                } else if (isObject(ref)) {
                    ref.current = node;
                }
            },
            detach: function detach(vnode, ref, domNode) {
                var node = isComposite(vnode) ? vnode.component : domNode;
                if (isFunction(ref)) {
                    var componentForCatcher = isComposite(vnode) ? vnode.component : vnode;
                    errorCatcher((function() {
                        ref(null);
                    }), componentForCatcher);
                } else if (isString(ref)) {
                    var inst = vnode._owner;
                    if (inst.refs[ref] === node && isFunction(inst.render)) {
                        delete inst.refs[ref];
                    }
                } else if (isObject(ref)) {
                    ref.current = null;
                }
            }
        };
        var defaultOptions = {
            passive: false,
            capture: false
        };
        var eventListenerOptionsSupported = function eventListenerOptionsSupported() {
            var supported = false;
            try {
                var opts = Object.defineProperty({}, \\"passive\\", {
                    get: function get() {
                        supported = true;
                    }
                });
                window.addEventListener(\\"test\\", null, opts);
                window.removeEventListener(\\"test\\", null, opts);
            } catch (e) {
                supported = false;
            }
            return supported;
        };
        function getDefaultPassiveOption() {
            var passiveOption = !eventListenerOptionsSupported() ? false : defaultOptions;
            return function() {
                return passiveOption;
            };
        }
        var getPassiveOption = getDefaultPassiveOption();
        var supportedPassiveEventMap = {
            scroll: getPassiveOption(),
            wheel: getPassiveOption(),
            touchstart: getPassiveOption(),
            touchmove: getPassiveOption(),
            touchenter: getPassiveOption(),
            touchend: getPassiveOption(),
            touchleave: getPassiveOption(),
            mouseout: getPassiveOption(),
            mouseleave: getPassiveOption(),
            mouseup: getPassiveOption(),
            mousedown: getPassiveOption(),
            mousemove: getPassiveOption(),
            mouseenter: getPassiveOption(),
            mousewheel: getPassiveOption(),
            mouseover: getPassiveOption()
        };
        var ONINPUT = \\"oninput\\";
        var ONPROPERTYCHANGE = \\"onpropertychange\\";
        var delegatedEvents = new MapClass;
        var unbubbleEvents = {
            onmousemove: 1,
            ontouchmove: 1,
            onmouseleave: 1,
            onmouseenter: 1,
            onload: 1,
            onunload: 1,
            onscroll: 1,
            onfocus: 1,
            onblur: 1,
            onrowexit: 1,
            onbeforeunload: 1,
            onstop: 1,
            ondragdrop: 1,
            ondragenter: 1,
            ondragexit: 1,
            ondraggesture: 1,
            ondragover: 1,
            oncontextmenu: 1,
            onerror: 1,
            onabort: 1,
            oncanplay: 1,
            oncanplaythrough: 1,
            ondurationchange: 1,
            onemptied: 1,
            onended: 1,
            onloadeddata: 1,
            onloadedmetadata: 1,
            onloadstart: 1,
            onencrypted: 1,
            onpause: 1,
            onplay: 1,
            onplaying: 1,
            onprogress: 1,
            onratechange: 1,
            onseeking: 1,
            onseeked: 1,
            onstalled: 1,
            onsuspend: 1,
            ontimeupdate: 1,
            onvolumechange: 1,
            onwaiting: 1
        };
        unbubbleEvents[ONPROPERTYCHANGE] = 1;
        var bindFocus = false;
        if (isIE9) {
            var elements = [];
            var values = [];
            doc.addEventListener(\\"selectionchange\\", (function() {
                var el = doc.activeElement;
                if (detectCanUseOnInputNode(el)) {
                    var index = elements.indexOf(el);
                    var element = elements[index] || elements.push(el);
                    if (element.value !== values[index]) {
                        var ev = doc.createEvent(\\"CustomEvent\\");
                        ev.initCustomEvent(\\"input\\", true, true, undefined);
                        values[index] = element.value;
                        el.dispatchEvent(ev);
                    }
                }
            }));
        }
        if (typeof Event !== \\"undefined\\" && !Event.prototype.persist) {
            Event.prototype.persist = noop$1;
        }
        function attachEvent(domNode, eventName, handler) {
            eventName = fixEvent(domNode, eventName);
            if (eventName === ONPROPERTYCHANGE) {
                processOnPropertyChangeEvent(domNode, handler);
                return;
            }
            var delegatedRoots = delegatedEvents.get(eventName);
            if (unbubbleEvents[eventName] === 1 || isTaro) {
                if (!delegatedRoots) {
                    delegatedRoots = new MapClass;
                }
                var event = attachEventToNode(domNode, eventName, delegatedRoots);
                delegatedEvents.set(eventName, delegatedRoots);
                if (isFunction(handler)) {
                    delegatedRoots.set(domNode, {
                        eventHandler: handler,
                        event: event
                    });
                }
            } else {
                if (!delegatedRoots) {
                    delegatedRoots = {
                        items: new MapClass
                    };
                    delegatedRoots.event = attachEventToDocument(doc, eventName, delegatedRoots);
                    delegatedEvents.set(eventName, delegatedRoots);
                }
                if (isFunction(handler)) {
                    if (isiOS) {
                        domNode.onclick = noop$1;
                    }
                    delegatedRoots.items.set(domNode, handler);
                }
            }
        }
        function detachEvent(domNode, eventName, handler) {
            eventName = fixEvent(domNode, eventName);
            if (eventName === ONPROPERTYCHANGE) {
                return;
            }
            var delegatedRoots = delegatedEvents.get(eventName);
            if (unbubbleEvents[eventName] === 1 && delegatedRoots || isTaro) {
                var event = delegatedRoots.get(domNode);
                if (event) {
                    domNode.removeEventListener(parseEventName(eventName), event.event, false);
                    var delegatedRootsSize = delegatedRoots.size;
                    if (delegatedRoots[\\"delete\\"](domNode) && delegatedRootsSize === 0) {
                        delegatedEvents[\\"delete\\"](eventName);
                    }
                }
            } else if (delegatedRoots && delegatedRoots.items) {
                var items = delegatedRoots.items;
                if (items[\\"delete\\"](domNode) && items.size === 0) {
                    doc.removeEventListener(parseEventName(eventName), delegatedRoots.event, false);
                    delegatedEvents[\\"delete\\"](eventName);
                }
            }
        }
        var propertyChangeActiveElement;
        var propertyChangeActiveElementValue;
        var propertyChangeActiveElementValueProp;
        var propertyChangeActiveHandlers = {};
        function propertyChangeHandler(event) {
            if (event.propertyName !== \\"value\\") {
                return;
            }
            var target = event.target || event.srcElement;
            var val = target.value;
            if (val === propertyChangeActiveElementValue) {
                return;
            }
            propertyChangeActiveElementValue = val;
            var handler = propertyChangeActiveHandlers[target.name];
            if (isFunction(handler)) {
                handler.call(target, event);
            }
        }
        function processOnPropertyChangeEvent(node, handler) {
            propertyChangeActiveHandlers[node.name] = handler;
            if (!bindFocus) {
                node.addEventListener(\\"focusin\\", (function() {
                    unbindOnPropertyChange();
                    bindOnPropertyChange(node);
                }), false);
                node.addEventListener(\\"focusout\\", unbindOnPropertyChange, false);
            }
        }
        function bindOnPropertyChange(node) {
            propertyChangeActiveElement = node;
            propertyChangeActiveElementValue = node.value;
            propertyChangeActiveElementValueProp = Object.getOwnPropertyDescriptor(node.constructor.prototype, \\"value\\");
            Object.defineProperty(propertyChangeActiveElement, \\"value\\", {
                get: function get() {
                    return propertyChangeActiveElementValueProp.get.call(this);
                },
                set: function set(val) {
                    propertyChangeActiveElementValue = val;
                    propertyChangeActiveElementValueProp.set.call(this, val);
                }
            });
            propertyChangeActiveElement.addEventListener(\\"propertychange\\", propertyChangeHandler, false);
        }
        function unbindOnPropertyChange() {
            if (!propertyChangeActiveElement) {
                return;
            }
            delete propertyChangeActiveElement.value;
            propertyChangeActiveElement.removeEventListener(\\"propertychange\\", propertyChangeHandler, false);
            propertyChangeActiveElement = null;
            propertyChangeActiveElementValue = null;
            propertyChangeActiveElementValueProp = null;
        }
        function detectCanUseOnInputNode(node) {
            var nodeName = node.nodeName && node.nodeName.toLowerCase();
            var type = node.type;
            return nodeName === \\"input\\" && /text|password/.test(type) || nodeName === \\"textarea\\";
        }
        function fixEvent(node, eventName) {
            if (isTaro && eventName === \\"onClick\\") {
                eventName = \\"onTap\\";
            }
            if (eventName === \\"onDoubleClick\\") {
                eventName = \\"ondblclick\\";
            } else if (eventName === \\"onTouchTap\\") {
                eventName = \\"onclick\\";
            } else if (eventName === \\"onChange\\" && detectCanUseOnInputNode(node)) {
                eventName = ONINPUT in window ? ONINPUT : ONPROPERTYCHANGE;
            } else {
                eventName = eventName.toLowerCase();
            }
            return eventName;
        }
        function parseEventName(name) {
            return name.substr(2);
        }
        function stopPropagation() {
            this.cancelBubble = true;
            this.stopImmediatePropagation();
        }
        function dispatchEvent(event, target, items, count, eventData) {
            var eventsToTrigger = items.get(target);
            if (eventsToTrigger) {
                count--;
                eventData.currentTarget = target;
                Object.defineProperties(event, {
                    nativeEvent: {
                        value: event
                    }
                });
                eventsToTrigger(event);
                if (event.cancelBubble) {
                    return;
                }
            }
            if (count > 0) {
                var parentDom = target.parentNode;
                if (parentDom === null || event.type === \\"click\\" && parentDom.nodeType === 1 && parentDom.disabled) {
                    return;
                }
                dispatchEvent(event, parentDom, items, count, eventData);
            }
        }
        function attachEventToDocument(d, eventName, delegatedRoots) {
            var eventHandler = function eventHandler(event) {
                var items = delegatedRoots.items;
                var count = items.size;
                if (count > 0) {
                    var eventData = {
                        currentTarget: event.target
                    };
                    try {
                        Object.defineProperties(event, {
                            currentTarget: {
                                configurable: true,
                                get: function get() {
                                    return eventData.currentTarget;
                                }
                            },
                            stopPropagation: {
                                value: stopPropagation
                            }
                        });
                    } catch (error) {}
                    dispatchEvent(event, event.target, delegatedRoots.items, count, eventData);
                }
            };
            var parsedEventName = parseEventName(eventName);
            d.addEventListener(parsedEventName, eventHandler, supportedPassiveEventMap[parsedEventName] || false);
            return eventHandler;
        }
        function attachEventToNode(node, eventName, delegatedRoots) {
            var eventHandler = function eventHandler(event) {
                var eventToTrigger = delegatedRoots.get(node);
                if (eventToTrigger && eventToTrigger.eventHandler) {
                    var eventData = {
                        currentTarget: node
                    };
                    Object.defineProperties(event, {
                        currentTarget: {
                            configurable: true,
                            get: function get() {
                                return eventData.currentTarget;
                            }
                        }
                    });
                    eventToTrigger.eventHandler(event);
                }
            };
            var parsedEventName = parseEventName(eventName);
            node.addEventListener(parsedEventName, eventHandler, supportedPassiveEventMap[parsedEventName] || false);
            return eventHandler;
        }
        function unmountChildren(children, parentDom) {
            if (isArray(children)) {
                for (var i = 0, len = children.length; i < len; i++) {
                    unmount(children[i], parentDom);
                }
            } else {
                unmount(children, parentDom);
            }
        }
        function unmount(vnode, parentDom) {
            if (isInvalid(vnode)) {
                return;
            }
            var vtype = vnode.vtype;
            var dom = vnode.dom;
            if ((vtype & 4) > 0) {
                vnode.destroy();
            } else if ((vtype & 2) > 0) {
                var props = vnode.props;
                var children = vnode.children;
                var ref = vnode.ref;
                unmountChildren(children);
                for (var propName in props) {
                    if (isAttrAnEvent(propName)) {
                        detachEvent(dom, propName, props[propName]);
                    }
                }
                if (ref !== null) {
                    Ref.detach(vnode, ref, dom);
                }
            } else if (vtype & 32) {
                unmountChildren(vnode.children, vnode.type);
            }
            if (!isNullOrUndef(parentDom) && !isNullOrUndef(dom)) {
                if (isArray(dom)) {
                    for (var i = 0; i < dom.length; i++) {
                        parentDom.removeChild(dom[i]);
                    }
                } else {
                    parentDom.removeChild(dom);
                }
            }
        }
        var NS = {
            ev: \\"http://www.w3.org/2001/xml-events\\",
            xlink: \\"http://www.w3.org/1999/xlink\\",
            xml: \\"http://www.w3.org/XML/1998/namespace\\"
        };
        var ATTRS = {
            accentHeight: \\"accent-height\\",
            accumulate: 0,
            additive: 0,
            alignmentBaseline: \\"alignment-baseline\\",
            allowReorder: \\"allowReorder\\",
            alphabetic: 0,
            amplitude: 0,
            arabicForm: \\"arabic-form\\",
            ascent: 0,
            attributeName: \\"attributeName\\",
            attributeType: \\"attributeType\\",
            autoReverse: \\"autoReverse\\",
            azimuth: 0,
            baseFrequency: \\"baseFrequency\\",
            baseProfile: \\"baseProfile\\",
            baselineShift: \\"baseline-shift\\",
            bbox: 0,
            begin: 0,
            bias: 0,
            by: 0,
            calcMode: \\"calcMode\\",
            capHeight: \\"cap-height\\",
            clip: 0,
            clipPath: \\"clip-path\\",
            clipRule: \\"clip-rule\\",
            clipPathUnits: \\"clipPathUnits\\",
            colorInterpolation: \\"color-interpolation\\",
            colorInterpolationFilters: \\"color-interpolation-filters\\",
            colorProfile: \\"color-profile\\",
            colorRendering: \\"color-rendering\\",
            contentScriptType: \\"contentScriptType\\",
            contentStyleType: \\"contentStyleType\\",
            cursor: 0,
            cx: 0,
            cy: 0,
            d: 0,
            decelerate: 0,
            descent: 0,
            diffuseConstant: \\"diffuseConstant\\",
            direction: 0,
            display: 0,
            divisor: 0,
            dominantBaseline: \\"dominant-baseline\\",
            dur: 0,
            dx: 0,
            dy: 0,
            edgeMode: \\"edgeMode\\",
            elevation: 0,
            enableBackground: \\"enable-background\\",
            end: 0,
            evEvent: \\"ev:event\\",
            exponent: 0,
            externalResourcesRequired: \\"externalResourcesRequired\\",
            fill: 0,
            fillOpacity: \\"fill-opacity\\",
            fillRule: \\"fill-rule\\",
            filter: 0,
            filterRes: \\"filterRes\\",
            filterUnits: \\"filterUnits\\",
            floodColor: \\"flood-color\\",
            floodOpacity: \\"flood-opacity\\",
            focusable: 0,
            fontFamily: \\"font-family\\",
            fontSize: \\"font-size\\",
            fontSizeAdjust: \\"font-size-adjust\\",
            fontStretch: \\"font-stretch\\",
            fontStyle: \\"font-style\\",
            fontVariant: \\"font-variant\\",
            fontWeight: \\"font-weight\\",
            format: 0,
            from: 0,
            fx: 0,
            fy: 0,
            g1: 0,
            g2: 0,
            glyphName: \\"glyph-name\\",
            glyphOrientationHorizontal: \\"glyph-orientation-horizontal\\",
            glyphOrientationVertical: \\"glyph-orientation-vertical\\",
            glyphRef: \\"glyphRef\\",
            gradientTransform: \\"gradientTransform\\",
            gradientUnits: \\"gradientUnits\\",
            hanging: 0,
            horizAdvX: \\"horiz-adv-x\\",
            horizOriginX: \\"horiz-origin-x\\",
            ideographic: 0,
            imageRendering: \\"image-rendering\\",
            in: 0,
            in2: 0,
            intercept: 0,
            k: 0,
            k1: 0,
            k2: 0,
            k3: 0,
            k4: 0,
            kernelMatrix: \\"kernelMatrix\\",
            kernelUnitLength: \\"kernelUnitLength\\",
            kerning: 0,
            keyPoints: \\"keyPoints\\",
            keySplines: \\"keySplines\\",
            keyTimes: \\"keyTimes\\",
            lengthAdjust: \\"lengthAdjust\\",
            letterSpacing: \\"letter-spacing\\",
            lightingColor: \\"lighting-color\\",
            limitingConeAngle: \\"limitingConeAngle\\",
            local: 0,
            markerEnd: \\"marker-end\\",
            markerMid: \\"marker-mid\\",
            markerStart: \\"marker-start\\",
            markerHeight: \\"markerHeight\\",
            markerUnits: \\"markerUnits\\",
            markerWidth: \\"markerWidth\\",
            mask: 0,
            maskContentUnits: \\"maskContentUnits\\",
            maskUnits: \\"maskUnits\\",
            mathematical: 0,
            mode: 0,
            numOctaves: \\"numOctaves\\",
            offset: 0,
            opacity: 0,
            operator: 0,
            order: 0,
            orient: 0,
            orientation: 0,
            origin: 0,
            overflow: 0,
            overlinePosition: \\"overline-position\\",
            overlineThickness: \\"overline-thickness\\",
            paintOrder: \\"paint-order\\",
            panose1: \\"panose-1\\",
            pathLength: \\"pathLength\\",
            patternContentUnits: \\"patternContentUnits\\",
            patternTransform: \\"patternTransform\\",
            patternUnits: \\"patternUnits\\",
            pointerEvents: \\"pointer-events\\",
            points: 0,
            pointsAtX: \\"pointsAtX\\",
            pointsAtY: \\"pointsAtY\\",
            pointsAtZ: \\"pointsAtZ\\",
            preserveAlpha: \\"preserveAlpha\\",
            preserveAspectRatio: \\"preserveAspectRatio\\",
            primitiveUnits: \\"primitiveUnits\\",
            r: 0,
            radius: 0,
            refX: \\"refX\\",
            refY: \\"refY\\",
            renderingIntent: \\"rendering-intent\\",
            repeatCount: \\"repeatCount\\",
            repeatDur: \\"repeatDur\\",
            requiredExtensions: \\"requiredExtensions\\",
            requiredFeatures: \\"requiredFeatures\\",
            restart: 0,
            result: 0,
            rotate: 0,
            rx: 0,
            ry: 0,
            scale: 0,
            seed: 0,
            shapeRendering: \\"shape-rendering\\",
            slope: 0,
            spacing: 0,
            specularConstant: \\"specularConstant\\",
            specularExponent: \\"specularExponent\\",
            speed: 0,
            spreadMethod: \\"spreadMethod\\",
            startOffset: \\"startOffset\\",
            stdDeviation: \\"stdDeviation\\",
            stemh: 0,
            stemv: 0,
            stitchTiles: \\"stitchTiles\\",
            stopColor: \\"stop-color\\",
            stopOpacity: \\"stop-opacity\\",
            strikethroughPosition: \\"strikethrough-position\\",
            strikethroughThickness: \\"strikethrough-thickness\\",
            string: 0,
            stroke: 0,
            strokeDasharray: \\"stroke-dasharray\\",
            strokeDashoffset: \\"stroke-dashoffset\\",
            strokeLinecap: \\"stroke-linecap\\",
            strokeLinejoin: \\"stroke-linejoin\\",
            strokeMiterlimit: \\"stroke-miterlimit\\",
            strokeOpacity: \\"stroke-opacity\\",
            strokeWidth: \\"stroke-width\\",
            surfaceScale: \\"surfaceScale\\",
            systemLanguage: \\"systemLanguage\\",
            tableValues: \\"tableValues\\",
            targetX: \\"targetX\\",
            targetY: \\"targetY\\",
            textAnchor: \\"text-anchor\\",
            textDecoration: \\"text-decoration\\",
            textRendering: \\"text-rendering\\",
            textLength: \\"textLength\\",
            to: 0,
            transform: 0,
            u1: 0,
            u2: 0,
            underlinePosition: \\"underline-position\\",
            underlineThickness: \\"underline-thickness\\",
            unicode: 0,
            unicodeBidi: \\"unicode-bidi\\",
            unicodeRange: \\"unicode-range\\",
            unitsPerEm: \\"units-per-em\\",
            vAlphabetic: \\"v-alphabetic\\",
            vHanging: \\"v-hanging\\",
            vIdeographic: \\"v-ideographic\\",
            vMathematical: \\"v-mathematical\\",
            values: 0,
            vectorEffect: \\"vector-effect\\",
            version: 0,
            vertAdvY: \\"vert-adv-y\\",
            vertOriginX: \\"vert-origin-x\\",
            vertOriginY: \\"vert-origin-y\\",
            viewBox: \\"viewBox\\",
            viewTarget: \\"viewTarget\\",
            visibility: 0,
            widths: 0,
            wordSpacing: \\"word-spacing\\",
            writingMode: \\"writing-mode\\",
            x: 0,
            xHeight: \\"x-height\\",
            x1: 0,
            x2: 0,
            xChannelSelector: \\"xChannelSelector\\",
            xlinkActuate: \\"xlink:actuate\\",
            xlinkArcrole: \\"xlink:arcrole\\",
            xlinkHref: \\"xlink:href\\",
            xlinkRole: \\"xlink:role\\",
            xlinkShow: \\"xlink:show\\",
            xlinkTitle: \\"xlink:title\\",
            xlinkType: \\"xlink:type\\",
            xmlBase: \\"xml:base\\",
            xmlId: \\"xml:id\\",
            xmlns: 0,
            xmlnsXlink: \\"xmlns:xlink\\",
            xmlLang: \\"xml:lang\\",
            xmlSpace: \\"xml:space\\",
            y: 0,
            y1: 0,
            y2: 0,
            yChannelSelector: \\"yChannelSelector\\",
            z: 0,
            zoomAndPan: \\"zoomAndPan\\"
        };
        var SVGPropertyConfig = {
            Properties: {},
            DOMAttributeNamespaces: {
                \\"ev:event\\": NS.ev,
                \\"xlink:actuate\\": NS.xlink,
                \\"xlink:arcrole\\": NS.xlink,
                \\"xlink:href\\": NS.xlink,
                \\"xlink:role\\": NS.xlink,
                \\"xlink:show\\": NS.xlink,
                \\"xlink:title\\": NS.xlink,
                \\"xlink:type\\": NS.xlink,
                \\"xml:base\\": NS.xml,
                \\"xml:id\\": NS.xml,
                \\"xml:lang\\": NS.xml,
                \\"xml:space\\": NS.xml
            },
            DOMAttributeNames: {}
        };
        Object.keys(ATTRS).forEach((function(key) {
            SVGPropertyConfig.Properties[key] = 0;
            if (ATTRS[key]) {
                SVGPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
            }
        }));
        function patch(lastVnode, nextVnode, parentNode, context, isSvg) {
            var lastDom = lastVnode.dom;
            var newDom;
            var lastVnodeIsArray = isArray(lastVnode);
            var nextVnodeisArray = isArray(nextVnode);
            if (isSameVNode(lastVnode, nextVnode)) {
                var vtype = nextVnode.vtype;
                if (vtype & 2) {
                    isSvg = isNullOrUndef(isSvg) ? lastVnode.isSvg : isSvg;
                    if (isSvg) {
                        nextVnode.isSvg = isSvg;
                    }
                    patchProps(lastDom, nextVnode.props, lastVnode.props, lastVnode, isSvg);
                    patchChildren(lastDom, lastVnode.children, nextVnode.children, context, isSvg);
                    if (nextVnode.ref !== null) {
                        Ref.update(lastVnode, nextVnode, lastDom);
                    }
                    newDom = lastDom;
                } else if ((vtype & 4) > 0) {
                    newDom = nextVnode.update(lastVnode, nextVnode, context);
                } else if (vtype & 1) {
                    return patchVText(lastVnode, nextVnode);
                } else if (vtype & 32) {
                    patchChildren(lastVnode.type, lastVnode.children, nextVnode.children, context, isSvg);
                }
                nextVnode.dom = newDom || lastDom;
            } else if (isArray(lastVnode) && isArray(nextVnode)) {
                patchArrayChildren(lastDom, lastVnode, nextVnode, context, false);
            } else if (lastVnodeIsArray && !nextVnodeisArray) {
                patchArrayChildren(parentNode, lastVnode, [ nextVnode ], context, false);
            } else if (!lastVnodeIsArray && nextVnodeisArray) {
                newDom = createElement(nextVnode, isSvg, context);
                insertElement(newDom, parentNode, lastDom);
                parentNode.removeChild(lastDom);
            } else {
                unmount(lastVnode);
                newDom = createElement(nextVnode, isSvg, context);
                if (nextVnode !== null) {
                    nextVnode.dom = newDom;
                }
                var newDomIsArray = isArray(newDom);
                var lastDomIsArray = isArray(lastDom);
                if (newDomIsArray) {
                    insertElement(newDom, parentNode, lastDom);
                    parentNode.removeChild(lastDom);
                } else if (lastDomIsArray) {
                    parentNode = lastDom[0].parentNode;
                    parentNode.insertBefore(newDom, lastDom[0]);
                    for (var i = 0; i < lastDom.length; i++) {
                        parentNode.removeChild(lastDom[i]);
                    }
                } else if (parentNode !== null) {
                    parentNode.replaceChild(newDom, lastDom);
                }
            }
            return newDom;
        }
        function patchArrayChildren(parentDom, lastChildren, nextChildren, context, isSvg) {
            var lastLength = lastChildren.length;
            var nextLength = nextChildren.length;
            if (lastLength === 0) {
                if (nextLength > 0) {
                    for (var i = 0; i < nextLength; i++) {
                        mountChild(nextChildren[i], parentDom, context, isSvg);
                    }
                }
            } else if (nextLength === 0) {
                unmountChildren(lastChildren);
                parentDom.textContent = \\"\\";
            } else {
                if (isKeyed(lastChildren, nextChildren)) {
                    patchKeyedChildren(lastChildren, nextChildren, parentDom, context, isSvg, lastLength, nextLength);
                } else {
                    patchNonKeyedChildren(parentDom, lastChildren, nextChildren, context, isSvg, lastLength, nextLength);
                }
            }
        }
        function patchChildren(parentDom, lastChildren, nextChildren, context, isSvg) {
            var lastChildrenIsArray = isArray(lastChildren);
            var nextChildrenIsArray = isArray(nextChildren);
            if (lastChildrenIsArray && nextChildrenIsArray) {
                patchArrayChildren(parentDom, lastChildren, nextChildren, context, isSvg);
            } else if (!lastChildrenIsArray && !nextChildrenIsArray) {
                patch(lastChildren, nextChildren, parentDom, context, isSvg);
            } else if (lastChildrenIsArray && !nextChildrenIsArray) {
                patchArrayChildren(parentDom, lastChildren, [ nextChildren ], context, isSvg);
            } else if (!lastChildrenIsArray && nextChildrenIsArray) {
                patchArrayChildren(parentDom, [ lastChildren ], nextChildren, context, isSvg);
            }
        }
        function patchNonKeyedChildren(parentDom, lastChildren, nextChildren, context, isSvg, lastLength, nextLength) {
            var minLength = Math.min(lastLength, nextLength);
            var i = 0;
            while (i < minLength) {
                patch(lastChildren[i], nextChildren[i], parentDom, context, isSvg);
                i++;
            }
            if (lastLength < nextLength) {
                for (i = minLength; i < nextLength; i++) {
                    if (parentDom !== null) {
                        var refVnode = lastChildren[i - 1];
                        mountElement(createElement(nextChildren[i], isSvg, context), parentDom, isValidElement(refVnode) && refVnode.dom != null ? refVnode.dom.nextSibling : null);
                    }
                }
            } else if (lastLength > nextLength) {
                for (i = minLength; i < lastLength; i++) {
                    unmount(lastChildren[i], parentDom);
                }
            }
        }
        function patchKeyedChildren(a, b, dom, context, isSvg, aLength, bLength) {
            var aEnd = aLength - 1;
            var bEnd = bLength - 1;
            var aStart = 0;
            var bStart = 0;
            var i;
            var j;
            var aNode;
            var bNode;
            var nextNode;
            var nextPos;
            var node;
            var aStartNode = a[aStart];
            var bStartNode = b[bStart];
            var aEndNode = a[aEnd];
            var bEndNode = b[bEnd];
            outer: {
                while (aStartNode.key === bStartNode.key) {
                    patch(aStartNode, bStartNode, dom, context, isSvg);
                    aStart++;
                    bStart++;
                    if (aStart > aEnd || bStart > bEnd) {
                        break outer;
                    }
                    aStartNode = a[aStart];
                    bStartNode = b[bStart];
                }
                while (aEndNode.key === bEndNode.key) {
                    patch(aEndNode, bEndNode, dom, context, isSvg);
                    aEnd--;
                    bEnd--;
                    if (aStart > aEnd || bStart > bEnd) {
                        break outer;
                    }
                    aEndNode = a[aEnd];
                    bEndNode = b[bEnd];
                }
            }
            if (aStart > aEnd) {
                if (bStart <= bEnd) {
                    nextPos = bEnd + 1;
                    nextNode = nextPos < bLength ? b[nextPos].dom : null;
                    while (bStart <= bEnd) {
                        node = b[bStart];
                        bStart++;
                        attachNewNode(dom, createElement(node, isSvg, context), nextNode);
                    }
                }
            } else if (bStart > bEnd) {
                while (aStart <= aEnd) {
                    unmount(a[aStart++], dom);
                }
            } else {
                var aLeft = aEnd - aStart + 1;
                var bLeft = bEnd - bStart + 1;
                var sources = new Array(bLeft);
                for (i = 0; i < bLeft; i++) {
                    sources[i] = -1;
                }
                var moved = false;
                var pos = 0;
                var patched = 0;
                if (bLeft <= 4 || aLeft * bLeft <= 16) {
                    for (i = aStart; i <= aEnd; i++) {
                        aNode = a[i];
                        if (patched < bLeft) {
                            for (j = bStart; j <= bEnd; j++) {
                                bNode = b[j];
                                if (aNode.key === bNode.key) {
                                    sources[j - bStart] = i;
                                    if (pos > j) {
                                        moved = true;
                                    } else {
                                        pos = j;
                                    }
                                    patch(aNode, bNode, dom, context, isSvg);
                                    patched++;
                                    a[i] = null;
                                    break;
                                }
                            }
                        }
                    }
                } else {
                    var keyIndex = new MapClass;
                    for (i = bStart; i <= bEnd; i++) {
                        keyIndex.set(b[i].key, i);
                    }
                    for (i = aStart; i <= aEnd; i++) {
                        aNode = a[i];
                        if (patched < bLeft) {
                            j = keyIndex.get(aNode.key);
                            if (j !== undefined) {
                                bNode = b[j];
                                sources[j - bStart] = i;
                                if (pos > j) {
                                    moved = true;
                                } else {
                                    pos = j;
                                }
                                patch(aNode, bNode, dom, context, isSvg);
                                patched++;
                                a[i] = null;
                            }
                        }
                    }
                }
                if (aLeft === aLength && patched === 0) {
                    unmountChildren(a);
                    dom.textContent = \\"\\";
                    while (bStart < bLeft) {
                        node = b[bStart];
                        bStart++;
                        attachNewNode(dom, createElement(node, isSvg, context), null);
                    }
                } else {
                    i = aLeft - patched;
                    while (i > 0) {
                        aNode = a[aStart++];
                        if (aNode !== null) {
                            unmount(aNode, dom);
                            i--;
                        }
                    }
                    if (moved) {
                        var seq = lis(sources);
                        j = seq.length - 1;
                        for (i = bLeft - 1; i >= 0; i--) {
                            if (sources[i] === -1) {
                                pos = i + bStart;
                                node = b[pos];
                                nextPos = pos + 1;
                                attachNewNode(dom, createElement(node, isSvg, context), nextPos < bLength ? b[nextPos].dom : null);
                            } else {
                                if (j < 0 || i !== seq[j]) {
                                    pos = i + bStart;
                                    node = b[pos];
                                    nextPos = pos + 1;
                                    attachNewNode(dom, node.dom, nextPos < bLength ? b[nextPos].dom : null);
                                } else {
                                    j--;
                                }
                            }
                        }
                    } else if (patched !== bLeft) {
                        for (i = bLeft - 1; i >= 0; i--) {
                            if (sources[i] === -1) {
                                pos = i + bStart;
                                node = b[pos];
                                nextPos = pos + 1;
                                attachNewNode(dom, createElement(node, isSvg, context), nextPos < bLength ? b[nextPos].dom : null);
                            }
                        }
                    }
                }
            }
        }
        function attachNewNode(parentDom, newNode, nextNode) {
            if (isNullOrUndef(nextNode)) {
                parentDom.appendChild(newNode);
            } else {
                parentDom.insertBefore(newNode, nextNode);
            }
        }
        function lis(a) {
            var p = a.slice();
            var result = [];
            result.push(0);
            var u;
            var v;
            for (var i = 0, il = a.length; i < il; ++i) {
                if (a[i] === -1) {
                    continue;
                }
                var j = result[result.length - 1];
                if (a[j] < a[i]) {
                    p[i] = j;
                    result.push(i);
                    continue;
                }
                u = 0;
                v = result.length - 1;
                while (u < v) {
                    var c = (u + v) / 2 | 0;
                    if (a[result[c]] < a[i]) {
                        u = c + 1;
                    } else {
                        v = c;
                    }
                }
                if (a[i] < a[result[u]]) {
                    if (u > 0) {
                        p[i] = result[u - 1];
                    }
                    result[u] = i;
                }
            }
            u = result.length;
            v = result[u - 1];
            while (u-- > 0) {
                result[u] = v;
                v = p[v];
            }
            return result;
        }
        function isKeyed(lastChildren, nextChildren) {
            return nextChildren.length > 0 && !isNullOrUndef(nextChildren[0]) && !isNullOrUndef(nextChildren[0].key) && lastChildren.length > 0 && !isNullOrUndef(lastChildren[0]) && !isNullOrUndef(lastChildren[0].key);
        }
        function isSameVNode(a, b) {
            if (isInvalid(a) || isInvalid(b) || isArray(a) || isArray(b)) {
                return false;
            }
            return a.type === b.type && a.vtype === b.vtype && a.key === b.key;
        }
        function patchVText(lastVNode, nextVNode) {
            var dom = lastVNode.dom;
            if (dom === null) {
                return;
            }
            var nextText = nextVNode.text;
            nextVNode.dom = dom;
            if (lastVNode.text !== nextText) {
                dom.nodeValue = nextText;
            }
            return dom;
        }
        var skipProps = {
            children: 1,
            key: 1,
            ref: 1,
            owner: 1
        };
        var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
        function setStyle(domStyle, style, value) {
            if (isNullOrUndef(value) || isNumber(value) && isNaN(value)) {
                domStyle[style] = \\"\\";
                return;
            }
            if (style === \\"float\\") {
                domStyle[\\"cssFloat\\"] = value;
                domStyle[\\"styleFloat\\"] = value;
                return;
            }
            domStyle[style] = !isNumber(value) || IS_NON_DIMENSIONAL.test(style) ? value : value + \\"px\\";
        }
        function patchEvent(eventName, lastEvent, nextEvent, domNode) {
            if (lastEvent !== nextEvent) {
                if (isFunction(lastEvent)) {
                    detachEvent(domNode, eventName, lastEvent);
                }
                attachEvent(domNode, eventName, nextEvent);
            }
        }
        function patchStyle(lastAttrValue, nextAttrValue, dom) {
            var domStyle = dom.style;
            var style;
            var value;
            if (isString(nextAttrValue)) {
                domStyle.cssText = nextAttrValue;
                return;
            }
            if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {
                for (style in nextAttrValue) {
                    value = nextAttrValue[style];
                    if (value !== lastAttrValue[style]) {
                        setStyle(domStyle, style, value);
                    }
                }
                for (style in lastAttrValue) {
                    if (isNullOrUndef(nextAttrValue[style])) {
                        domStyle[style] = \\"\\";
                    }
                }
            } else {
                for (style in nextAttrValue) {
                    value = nextAttrValue[style];
                    setStyle(domStyle, style, value);
                }
            }
        }
        function patchProp(domNode, prop, lastValue, nextValue, lastVnode, isSvg) {
            if (lastValue !== nextValue || prop === \\"value\\") {
                if (prop === \\"className\\") {
                    prop = \\"class\\";
                }
                if (skipProps[prop] === 1) {
                    return;
                } else if (prop === \\"class\\" && !isSvg) {
                    domNode.className = nextValue;
                } else if (prop === \\"dangerouslySetInnerHTML\\") {
                    var lastHtml = lastValue && lastValue.__html;
                    var nextHtml = nextValue && nextValue.__html;
                    if (lastHtml !== nextHtml) {
                        if (!isNullOrUndef(nextHtml)) {
                            if (isValidElement(lastVnode) && lastVnode.children !== EMPTY_CHILDREN) {
                                unmountChildren(lastVnode.children);
                                lastVnode.children = [];
                            }
                            domNode.innerHTML = nextHtml;
                        }
                    }
                } else if (isAttrAnEvent(prop)) {
                    patchEvent(prop, lastValue, nextValue, domNode);
                } else if (prop === \\"style\\") {
                    patchStyle(lastValue, nextValue, domNode);
                } else if (prop !== \\"list\\" && prop !== \\"type\\" && !isSvg && prop in domNode) {
                    setProperty(domNode, prop, nextValue == null ? \\"\\" : nextValue);
                    if (nextValue == null || nextValue === false) {
                        domNode.removeAttribute(prop);
                    }
                } else if (isNullOrUndef(nextValue) || nextValue === false) {
                    domNode.removeAttribute(prop);
                } else {
                    var namespace = SVGPropertyConfig.DOMAttributeNamespaces[prop];
                    if (isSvg && namespace) {
                        if (nextValue) {
                            domNode.setAttributeNS(namespace, prop, nextValue);
                        } else {
                            var colonPosition = prop.indexOf(\\":\\");
                            var localName = colonPosition > -1 ? prop.substr(colonPosition + 1) : prop;
                            domNode.removeAttributeNS(namespace, localName);
                        }
                    } else {
                        if (!isFunction(nextValue)) {
                            domNode.setAttribute(prop, nextValue);
                        }
                    }
                }
            }
        }
        function setProperty(node, name, value) {
            try {
                node[name] = value;
            } catch (e) {}
        }
        function patchProps(domNode, nextProps, previousProps, lastVnode, isSvg) {
            for (var propName in previousProps) {
                var value = previousProps[propName];
                if (isNullOrUndef(nextProps[propName]) && !isNullOrUndef(value)) {
                    if (isAttrAnEvent(propName)) {
                        detachEvent(domNode, propName, value);
                    } else if (propName === \\"dangerouslySetInnerHTML\\") {
                        domNode.textContent = \\"\\";
                    } else if (propName === \\"className\\") {
                        domNode.removeAttribute(\\"class\\");
                    } else {
                        domNode.removeAttribute(propName);
                    }
                }
            }
            for (var propName$1 in nextProps) {
                patchProp(domNode, propName$1, previousProps[propName$1], nextProps[propName$1], lastVnode, isSvg);
            }
        }
        var SVG_NAMESPACE = \\"http://www.w3.org/2000/svg\\";
        function createElement(vnode, isSvg, parentContext, parentComponent) {
            var domNode;
            if (isValidElement(vnode)) {
                var vtype = vnode.vtype;
                if (vtype & 4) {
                    domNode = vnode.init(parentContext, parentComponent);
                } else if (vtype & 1) {
                    domNode = doc.createTextNode(vnode.text);
                    vnode.dom = domNode;
                } else if (vtype & 2) {
                    domNode = mountVNode$1(vnode, isSvg, parentContext, parentComponent);
                } else if (vtype & 16) {
                    domNode = vnode.dom = doc.createTextNode(\\"\\");
                } else if (isPortal(vtype, vnode)) {
                    vnode.type.appendChild(createElement(vnode.children, isSvg, parentContext, parentComponent));
                    domNode = doc.createTextNode(\\"\\");
                }
            } else if (isString(vnode) || isNumber(vnode)) {
                domNode = doc.createTextNode(vnode);
            } else if (isNullOrUndef(vnode) || isBoolean(vnode)) {
                domNode = doc.createTextNode(\\"\\");
            } else if (isArray(vnode)) {
                domNode = vnode.map((function(child) {
                    return createElement(child, isSvg, parentContext, parentComponent);
                }));
            } else {
                throw new Error(\\"Unsupported VNode.\\");
            }
            return domNode;
        }
        function mountVNode$1(vnode, isSvg, parentContext, parentComponent) {
            if (vnode.isSvg) {
                isSvg = true;
            } else if (vnode.type === \\"svg\\") {
                isSvg = true;
            } else if (!isSupportSVG) {
                isSvg = false;
            }
            if (isSvg) {
                vnode.namespace = SVG_NAMESPACE;
                vnode.isSvg = isSvg;
            }
            var domNode = !isSvg ? doc.createElement(vnode.type) : doc.createElementNS(vnode.namespace, vnode.type);
            setProps(domNode, vnode, isSvg);
            if (vnode.type === \\"foreignObject\\") {
                isSvg = false;
            }
            var children = vnode.children;
            if (isArray(children)) {
                for (var i = 0, len = children.length; i < len; i++) {
                    mountChild(children[i], domNode, parentContext, isSvg, parentComponent);
                }
            } else {
                mountChild(children, domNode, parentContext, isSvg, parentComponent);
            }
            vnode.dom = domNode;
            if (vnode.ref !== null) {
                Ref.attach(vnode, vnode.ref, domNode);
            }
            return domNode;
        }
        function mountChild(child, domNode, parentContext, isSvg, parentComponent) {
            child.parentContext = parentContext || EMPTY_OBJ;
            var childNode = createElement(child, isSvg, parentContext, parentComponent);
            mountElement(childNode, domNode);
        }
        function mountElement(element, parentNode, refChild) {
            if (isArray(element)) {
                for (var i = 0; i < element.length; i++) {
                    var el = element[i];
                    mountElement(el, parentNode);
                }
            } else {
                refChild != null ? parentNode.insertBefore(element, refChild) : parentNode.appendChild(element);
            }
        }
        function insertElement(element, parentNode, lastDom) {
            if (isArray(element)) {
                for (var i = 0; i < element.length; i++) {
                    var el = element[i];
                    insertElement(el, parentNode, lastDom);
                }
            } else {
                parentNode.insertBefore(element, lastDom);
            }
        }
        function setProps(domNode, vnode, isSvg) {
            var props = vnode.props;
            for (var p in props) {
                patchProp(domNode, p, null, props[p], null, isSvg);
            }
        }
        function createVText(text) {
            return {
                text: text,
                vtype: 1,
                dom: null
            };
        }
        function createVoid() {
            return {
                dom: null,
                vtype: 16
            };
        }
        function getHooks(index) {
            if (Current.current === null) {
                throw new Error(\\"invalid hooks call: hooks can only be called in a stateless component.\\");
            }
            var hooks = Current.current.hooks;
            if (index >= hooks.length) {
                hooks.push({});
            }
            return hooks[index];
        }
        function useState(initialState) {
            if (isFunction(initialState)) {
                initialState = initialState();
            }
            var hook = getHooks(Current.index++);
            if (!hook.state) {
                hook.component = Current.current;
                hook.state = [ initialState, function(action) {
                    hook.state[0] = isFunction(action) ? action(hook.state[0]) : action;
                    hook.component._disable = false;
                    hook.component.setState({});
                } ];
            }
            return hook.state;
        }
        function useReducer(reducer, initialState, initializer) {
            if (isFunction(initialState)) {
                initialState = initialState();
            }
            var hook = getHooks(Current.index++);
            if (!hook.state) {
                hook.component = Current.current;
                hook.state = [ isUndefined(initializer) ? initialState : initializer(initialState), function(action) {
                    hook.state[0] = reducer(hook.state[0], action);
                    hook.component._disable = false;
                    hook.component.setState({});
                } ];
            }
            return hook.state;
        }
        function areDepsChanged(prevDeps, deps) {
            if (isNullOrUndef(prevDeps) || isNullOrUndef(deps)) {
                return true;
            }
            return deps.some((function(d, i) {
                return !objectIs(d, prevDeps[i]);
            }));
        }
        function invokeEffects(component, delay) {
            if (delay === void 0) delay = false;
            var effects = delay ? component.effects : component.layoutEffects;
            effects.forEach((function(hook) {
                if (isFunction(hook.cleanup)) {
                    hook.cleanup();
                }
                var result = hook.effect();
                if (isFunction(result)) {
                    hook.cleanup = result;
                }
            }));
            if (delay) {
                component.effects = [];
            } else {
                component.layoutEffects = [];
            }
        }
        var scheduleEffectComponents = [];
        function invokeScheduleEffects(component) {
            if (!component._afterScheduleEffect) {
                component._afterScheduleEffect = true;
                scheduleEffectComponents.push(component);
                if (scheduleEffectComponents.length === 1) {
                    nextTick((function() {
                        setTimeout((function() {
                            scheduleEffectComponents.forEach((function(c) {
                                c._afterScheduleEffect = false;
                                invokeEffects(c, true);
                            }));
                            scheduleEffectComponents = [];
                        }), 0);
                    }));
                }
            }
        }
        function useEffectImpl(effect, deps, delay) {
            if (delay === void 0) delay = false;
            var hook = getHooks(Current.index++);
            if (areDepsChanged(hook.deps, deps)) {
                hook.effect = effect;
                hook.deps = deps;
                if (delay) {
                    Current.current.effects = Current.current.effects.concat(hook);
                    invokeScheduleEffects(Current.current);
                } else {
                    Current.current.layoutEffects = Current.current.layoutEffects.concat(hook);
                }
            }
        }
        function useEffect(effect, deps) {
            useEffectImpl(effect, deps, true);
        }
        function useLayoutEffect(effect, deps) {
            useEffectImpl(effect, deps);
        }
        function useRef(initialValue) {
            var hook = getHooks(Current.index++);
            if (!hook.ref) {
                hook.ref = {
                    current: initialValue
                };
            }
            return hook.ref;
        }
        function useMemo(factory, deps) {
            var hook = getHooks(Current.index++);
            if (areDepsChanged(hook.deps, deps)) {
                hook.deps = deps;
                hook.callback = factory;
                hook.value = factory();
            }
            return hook.value;
        }
        function useCallback(callback, deps) {
            return useMemo((function() {
                return callback;
            }), deps);
        }
        function useContext(context) {
            var provider = Current.current.context[context._id];
            if (isUndefined(provider)) {
                return context._defaultValue;
            }
            var hook = getHooks(Current.index++);
            if (isUndefined(hook.context)) {
                hook.context = true;
                var c = Current.current;
                provider.on((function() {
                    return enqueueRender(c);
                }));
            }
            return provider.value;
        }
        function useImperativeHandle(ref, init, deps) {
            useLayoutEffect((function() {
                if (isFunction(ref)) {
                    ref(init());
                    return function() {
                        return ref(null);
                    };
                } else if (!isUndefined(ref)) {
                    ref.current = init();
                    return function() {
                        delete ref.current;
                    };
                }
            }), isArray(deps) ? deps.concat([ ref ]) : undefined);
        }
        var readyComponents = [];
        function errorCatcher(fn, component) {
            try {
                return fn();
            } catch (error) {
                errorHandler(component, error);
            }
        }
        function errorHandler(component, error) {
            var boundary;
            while (true) {
                var ref = component.constructor;
                var getDerivedStateFromError = ref.getDerivedStateFromError;
                if (isFunction(getDerivedStateFromError) || isFunction(component.componentDidCatch)) {
                    boundary = component;
                    break;
                } else if (component._parentComponent) {
                    component = component._parentComponent;
                } else {
                    break;
                }
            }
            if (boundary) {
                var ref$1 = boundary.constructor;
                var getDerivedStateFromError$1 = ref$1.getDerivedStateFromError;
                var _disable = boundary._disable;
                boundary._disable = false;
                if (isFunction(getDerivedStateFromError$1)) {
                    component.setState(getDerivedStateFromError$1(error));
                } else if (isFunction(component.componentDidCatch)) {
                    boundary.componentDidCatch(error);
                }
                boundary._disable = _disable;
            } else {
                throw error;
            }
        }
        function ensureVirtualNode(rendered) {
            if (isNumber(rendered) || isString(rendered)) {
                return createVText(rendered);
            } else if (isInvalid(rendered)) {
                return createVoid();
            } else if (isArray(rendered)) {
                rendered = rendered.length === 0 ? createVoid() : rendered.map(ensureVirtualNode);
            }
            return rendered;
        }
        function mountVNode(vnode, parentContext, parentComponent) {
            return createElement(vnode, false, parentContext, parentComponent);
        }
        function getContextByContextType(vnode, parentContext) {
            var contextType = vnode.type.contextType;
            var hasContextType = !isUndefined(contextType);
            var provider = hasContextType ? parentContext[contextType._id] : null;
            var context = hasContextType ? !isNullOrUndef(provider) ? provider.value : contextType._defaultValue : parentContext;
            return context;
        }
        function mountComponent(vnode, parentContext, parentComponent) {
            var ref = vnode.ref;
            if (vnode.type.prototype && vnode.type.prototype.render) {
                var context = getContextByContextType(vnode, parentContext);
                vnode.component = new vnode.type(vnode.props, context);
            } else {
                var c = new Component(vnode.props, parentContext);
                c.render = function() {
                    return vnode.type.call(c, c.props, c.context);
                };
                vnode.component = c;
            }
            var component = vnode.component;
            component.vnode = vnode;
            if (isComponent(parentComponent)) {
                component._parentComponent = parentComponent;
            }
            var newState = callGetDerivedStateFromProps(vnode.props, component.state, component);
            if (!isUndefined(newState)) {
                component.state = newState;
            }
            if (!hasNewLifecycle(component) && isFunction(component.componentWillMount)) {
                errorCatcher((function() {
                    component.componentWillMount();
                }), component);
                component.state = component.getState();
                component.clearCallBacks();
            }
            component._dirty = false;
            var rendered = renderComponent(component);
            rendered.parentVNode = vnode;
            component._rendered = rendered;
            if (!isNullOrUndef(ref)) {
                Ref.attach(vnode, ref, vnode.dom);
            }
            var dom = vnode.dom = mountVNode(rendered, getChildContext(component, parentContext), component);
            invokeEffects(component);
            if (isFunction(component.componentDidMount)) {
                readyComponents.push(component);
            }
            component._disable = false;
            return dom;
        }
        function getChildContext(component, context) {
            if (context === void 0) context = EMPTY_OBJ;
            if (isFunction(component.getChildContext)) {
                return extend(clone(context), component.getChildContext());
            }
            return clone(context);
        }
        function renderComponent(component) {
            Current.current = component;
            Current.index = 0;
            invokeEffects(component, true);
            var rendered;
            errorCatcher((function() {
                rendered = component.render();
            }), component);
            rendered = ensureVirtualNode(rendered);
            Current.current = null;
            return rendered;
        }
        function flushMount() {
            if (!readyComponents.length) {
                return;
            }
            var queue = readyComponents.slice(0);
            readyComponents.length = 0;
            queue.forEach((function(item) {
                if (isFunction(item)) {
                    item();
                } else if (item.componentDidMount) {
                    errorCatcher((function() {
                        item.componentDidMount();
                    }), item);
                }
            }));
        }
        function getFragmentHostNode(children) {
            var child = children[0];
            if (isArray(child)) {
                return getFragmentHostNode(child);
            } else if (isComposite(child) && child.dom == null) {
                return getFragmentHostNode(child.component._rendered);
            }
            return child.dom;
        }
        function reRenderComponent(prev, current) {
            var component = current.component = prev.component;
            var nextProps = current.props;
            var nextContext = current.context;
            component._disable = true;
            if (!hasNewLifecycle(component) && isFunction(component.componentWillReceiveProps)) {
                errorCatcher((function() {
                    component.componentWillReceiveProps(nextProps, nextContext);
                }), component);
            }
            component._disable = false;
            component.prevProps = component.props;
            component.prevState = component.state;
            component.prevContext = component.context;
            component.props = nextProps;
            component.context = nextContext;
            if (!isNullOrUndef(current.ref)) {
                Ref.update(prev, current);
            }
            return updateComponent(component);
        }
        function callShouldComponentUpdate(props, state, context, component) {
            var shouldUpdate = true;
            errorCatcher((function() {
                shouldUpdate = component.shouldComponentUpdate(props, state, context);
            }), component);
            return shouldUpdate;
        }
        function updateComponent(component, isForce) {
            if (isForce === void 0) isForce = false;
            var vnode = component.vnode;
            var dom = vnode.dom;
            var props = component.props;
            var state = component.getState();
            var context = component.context;
            var prevProps = component.prevProps || props;
            var prevState = component.prevState || component.state;
            var prevContext = component.prevContext || context;
            var stateFromProps = callGetDerivedStateFromProps(props, state, component);
            if (!isUndefined(stateFromProps)) {
                state = stateFromProps;
            }
            component.props = prevProps;
            component.context = prevContext;
            var skip = false;
            var onSCU = props.onShouldComponentUpdate;
            if (!isForce && (isFunction(component.shouldComponentUpdate) && callShouldComponentUpdate(props, state, context, component) === false || isFunction(onSCU) && onSCU(prevProps, props) === false)) {
                skip = true;
            } else if (!hasNewLifecycle(component) && isFunction(component.componentWillUpdate)) {
                errorCatcher((function() {
                    component.componentWillUpdate(props, state, context);
                }), component);
            }
            if (!isUndefined(stateFromProps)) {
                component.state = stateFromProps;
            }
            component.props = props;
            component.state = state;
            component.context = context;
            component._dirty = false;
            if (!skip) {
                var lastRendered = component._rendered;
                var rendered = renderComponent(component);
                rendered.parentVNode = vnode;
                var childContext = getChildContext(component, context);
                var snapshot = callGetSnapshotBeforeUpdate(prevProps, prevState, component);
                var parentDom = lastRendered.dom && lastRendered.dom.parentNode;
                if (isArray(lastRendered)) {
                    var hostNode = getFragmentHostNode(lastRendered);
                    if (hostNode) {
                        parentDom = lastRendered.dom = hostNode.parentNode;
                    }
                }
                dom = vnode.dom = patch(lastRendered, rendered, parentDom || null, childContext);
                component._rendered = rendered;
                if (isFunction(component.componentDidUpdate)) {
                    errorCatcher((function() {
                        component.componentDidUpdate(prevProps, prevState, snapshot);
                    }), component);
                }
                while (vnode = vnode.parentVNode) {
                    if ((vnode.vtype & 4) > 0) {
                        vnode.dom = dom;
                    }
                }
            }
            component.prevProps = component.props;
            component.prevState = component.state;
            component.prevContext = component.context;
            component.clearCallBacks();
            flushMount();
            invokeEffects(component);
            return dom;
        }
        function unmountComponent(vnode) {
            var component = vnode.component;
            component.hooks.forEach((function(hook) {
                if (isFunction(hook.cleanup)) {
                    hook.cleanup();
                }
            }));
            if (isFunction(component.componentWillUnmount)) {
                errorCatcher((function() {
                    component.componentWillUnmount();
                }), component);
            }
            component._disable = true;
            unmount(component._rendered);
            if (!isNullOrUndef(vnode.ref)) {
                Ref.detach(vnode, vnode.ref, vnode.dom);
            }
        }
        function callGetDerivedStateFromProps(props, state, inst) {
            var ref = inst.constructor;
            var getDerivedStateFromProps = ref.getDerivedStateFromProps;
            var newState;
            errorCatcher((function() {
                if (isFunction(getDerivedStateFromProps)) {
                    var partialState = getDerivedStateFromProps.call(null, props, state);
                    if (!isUndefined(partialState)) {
                        newState = extend(clone(state), partialState);
                    }
                }
            }), inst);
            return newState;
        }
        function callGetSnapshotBeforeUpdate(props, state, inst) {
            var getSnapshotBeforeUpdate = inst.getSnapshotBeforeUpdate;
            var snapshot;
            errorCatcher((function() {
                if (isFunction(getSnapshotBeforeUpdate)) {
                    snapshot = getSnapshotBeforeUpdate.call(inst, props, state);
                }
            }), inst);
            return snapshot;
        }
        function hasNewLifecycle(component) {
            if (isFunction(component.constructor.getDerivedStateFromProps)) {
                return true;
            }
            return false;
        }
        var items = [];
        function enqueueRender(component) {
            if (!component._dirty && (component._dirty = true) && items.push(component) === 1) {
                nextTick(rerender);
            }
        }
        function rerender(isForce) {
            if (isForce === void 0) isForce = false;
            var p;
            var list = items;
            items = [];
            while (p = list.pop()) {
                if (p._dirty) {
                    updateComponent(p, isForce);
                }
            }
        }
        var Component = function Component(props, context) {
            this._dirty = true;
            this._disable = true;
            this._pendingStates = [];
            this._pendingCallbacks = [];
            this._afterScheduleEffect = false;
            this.hooks = [];
            this.effects = EMPTY_CHILDREN;
            this.layoutEffects = EMPTY_CHILDREN;
            if (!this.state) {
                this.state = {};
            }
            this.props = props || {};
            this.context = context || EMPTY_OBJ;
            this.refs = {};
        };
        Component.prototype.setState = function setState(state, callback) {
            if (state) {
                this._pendingStates.push(state);
            }
            if (isFunction(callback)) {
                this._pendingCallbacks.push(callback);
            }
            if (!this._disable) {
                enqueueRender(this);
            }
        };
        Component.prototype.getState = function getState() {
            var this$1 = this;
            var ref = this;
            var _pendingStates = ref._pendingStates;
            var state = ref.state;
            var props = ref.props;
            if (!_pendingStates.length) {
                return state;
            }
            var stateClone = clone(state);
            var queue = _pendingStates.concat();
            this._pendingStates.length = 0;
            queue.forEach((function(nextState) {
                if (isFunction(nextState)) {
                    nextState = nextState.call(this$1, state, props);
                }
                extend(stateClone, nextState);
            }));
            return stateClone;
        };
        Component.prototype.clearCallBacks = function clearCallBacks() {
            var this$1 = this;
            var len = this._pendingCallbacks.length;
            while (this._dirty ? this._pendingCallbacks.length : len) {
                var cb = this$1._pendingCallbacks.shift();
                cb.call(this$1);
                len--;
            }
        };
        Component.prototype.forceUpdate = function forceUpdate(callback) {
            if (isFunction(callback)) {
                this._pendingCallbacks.push(callback);
            }
            updateComponent(this, true);
        };
        Component.prototype.render = function render(nextProps, nextState, nextContext) {};
        Component.prototype.isReactComponent = EMPTY_OBJ;
        var PureComponent = function(Component$$1) {
            function PureComponent() {
                Component$$1.apply(this, arguments);
                this.isPureComponent = true;
            }
            if (Component$$1) PureComponent.__proto__ = Component$$1;
            PureComponent.prototype = Object.create(Component$$1 && Component$$1.prototype);
            PureComponent.prototype.constructor = PureComponent;
            PureComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
                return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);
            };
            return PureComponent;
        }(Component);
        var options = {
            afterMount: noop$1,
            afterUpdate: noop$1,
            beforeUpdate: noop$1,
            beforeUnmount: noop$1,
            beforeRender: noop$1,
            beforeMount: noop$1,
            afterCreate: noop$1,
            roots: [],
            debug: false
        };
        function render(vnode, container, callback) {
            if (!container) {
                throw new Error(container + \\" should be a DOM Element\\");
            }
            var lastVnode = container._component;
            var dom;
            options.roots.push(vnode);
            if (lastVnode !== undefined) {
                options.roots = options.roots.filter((function(item) {
                    return item !== lastVnode;
                }));
                dom = patch(lastVnode, vnode, container, {});
            } else {
                dom = mountVNode(vnode, {});
                mountElement(dom, container);
            }
            if (container) {
                container._component = vnode;
            }
            flushMount();
            if (callback) {
                callback();
            }
            return isComposite(vnode) ? vnode.component : dom;
        }
        function createVNode(type, props, children, key, namespace, owner, ref) {
            return {
                type: type,
                key: key || null,
                vtype: 2,
                props: props || EMPTY_OBJ,
                children: children,
                namespace: namespace || null,
                _owner: owner,
                dom: null,
                ref: ref || null
            };
        }
        function h(type, props, children) {
            var childNodes;
            if (props.children) {
                if (!children) {
                    children = props.children;
                }
            }
            if (isArray(children)) {
                childNodes = [];
                addChildren(childNodes, children, type);
            } else if (isString(children) || isNumber(children)) {
                children = createVText(String(children));
            } else if (!isValidElement(children)) {
                children = EMPTY_CHILDREN;
            }
            props.children = childNodes !== undefined ? childNodes : children;
            return createVNode(type, props, props.children, props.key, props.namespace, props.owner, props.ref);
        }
        function addChildren(childNodes, children, type) {
            if (isString(children) || isNumber(children)) {
                childNodes.push(createVText(String(children)));
            } else if (isValidElement(children)) {
                childNodes.push(children);
            } else if (isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                    addChildren(childNodes, children[i], type);
                }
            } else {
                childNodes.push(createVoid());
            }
        }
        var ComponentWrapper = function ComponentWrapper(type, props) {
            this.vtype = 4;
            this.type = type;
            this.name = type.name;
            if (isUndefined(this.name)) {
                var names = type.toString().match(/^function\\\\s*([^\\\\s(]+)/);
                this.name = isArray(names) ? names[0] : \\"Component\\";
            }
            type.displayName = this.name;
            this._owner = props.owner;
            delete props.owner;
            if (this.ref = props.ref) {
                delete props.ref;
            }
            if (type._forwarded) {
                if (!isUndefined(this.ref)) {
                    props.ref = this.ref;
                }
                delete this.ref;
            }
            this.props = props;
            this.key = props.key || null;
            this.dom = null;
            options.afterCreate(this);
        };
        ComponentWrapper.prototype.init = function init(parentContext, parentComponent) {
            options.beforeMount(this);
            var dom = mountComponent(this, parentContext, parentComponent);
            options.afterMount(this);
            return dom;
        };
        ComponentWrapper.prototype.update = function update(previous, current, parentContext, domNode) {
            this.context = getContextByContextType(this, parentContext);
            options.beforeUpdate(this);
            var dom = reRenderComponent(previous, this);
            options.afterUpdate(this);
            return dom;
        };
        ComponentWrapper.prototype.destroy = function destroy() {
            options.beforeUnmount(this);
            unmountComponent(this);
        };
        function transformPropsForRealTag(type, props) {
            var newProps = {};
            for (var propName in props) {
                var propValue = props[propName];
                if (propName === \\"defaultValue\\") {
                    newProps.value = props.value || props.defaultValue;
                    continue;
                }
                var svgPropName = SVGPropertyConfig.DOMAttributeNames[propName];
                if (svgPropName && svgPropName !== propName) {
                    newProps[svgPropName] = propValue;
                    continue;
                }
                newProps[propName] = propValue;
            }
            return newProps;
        }
        function transformPropsForComponent(props, defaultProps) {
            var newProps = {};
            for (var propName in props) {
                var propValue = props[propName];
                newProps[propName] = propValue;
            }
            if (defaultProps) {
                for (var propName$1 in defaultProps) {
                    if (isUndefined(newProps[propName$1])) {
                        newProps[propName$1] = defaultProps[propName$1];
                    }
                }
            }
            return newProps;
        }
        function createElement$2(type, properties) {
            var _children = [], len = arguments.length - 2;
            while (len-- > 0) {
                _children[len] = arguments[len + 2];
            }
            var children = _children;
            if (_children) {
                if (_children.length === 1) {
                    children = _children[0];
                } else if (_children.length === 0) {
                    children = undefined;
                }
            }
            var props;
            if (isString(type)) {
                props = transformPropsForRealTag(type, properties);
                props.owner = Current.current;
                return h(type, props, children);
            } else if (isFunction(type)) {
                props = transformPropsForComponent(properties, type.defaultProps);
                if (!props.children || props.children === EMPTY_CHILDREN) {
                    props.children = children || children === 0 ? children : EMPTY_CHILDREN;
                }
                props.owner = Current.current;
                return new ComponentWrapper(type, props);
            }
            return type;
        }
        function cloneElement(vnode, props) {
            var children = [], len = arguments.length - 2;
            while (len-- > 0) {
                children[len] = arguments[len + 2];
            }
            if (isVText(vnode)) {
                return createVText(vnode.text);
            }
            if (isString(vnode) || isNumber(vnode)) {
                return createVText(vnode);
            }
            if (isInvalid(vnode) || !isInvalid(vnode) && isPortal(vnode.vtype, vnode) || vnode && vnode.vtype & 16) {
                return createVoid();
            }
            var properties = clone(extend(clone(vnode.props), props));
            if (vnode.namespace) {
                properties.namespace = vnode.namespace;
            }
            if (vnode.vtype & 4 && !isNullOrUndef(vnode.ref)) {
                properties.ref = vnode.ref;
            }
            var childrenTmp = (arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children || properties.children) || [];
            if (childrenTmp.length) {
                if (childrenTmp.length === 1) {
                    childrenTmp = children[0];
                }
            }
            if (isArray(vnode)) {
                return vnode.map((function(item) {
                    return cloneElement(item);
                }));
            }
            var newVNode = createElement$2(vnode.type, properties);
            if (isArray(childrenTmp)) {
                var _children = childrenTmp.map((function(child) {
                    return cloneElement(child, child.props);
                }));
                if (_children.length === 0) {
                    _children = EMPTY_CHILDREN;
                }
                if (isVNode(newVNode)) {
                    newVNode.children = _children;
                }
                newVNode.props.children = _children;
            } else if (childrenTmp) {
                if (isVNode(newVNode)) {
                    newVNode.children = cloneElement(childrenTmp);
                }
                newVNode.props.children = cloneElement(childrenTmp, childrenTmp.props);
            }
            return newVNode;
        }
        var Children = {
            map: function map(children, fn, ctx) {
                if (isNullOrUndef(children)) {
                    return children;
                }
                children = Children.toArray(children);
                if (ctx && ctx !== children) {
                    fn = fn.bind(ctx);
                }
                return children.map(fn);
            },
            forEach: function forEach(children, fn, ctx) {
                if (isNullOrUndef(children)) {
                    return;
                }
                children = Children.toArray(children);
                if (ctx && ctx !== children) {
                    fn = fn.bind(ctx);
                }
                for (var i = 0, len = children.length; i < len; i++) {
                    var child = isInvalid(children[i]) ? null : children[i];
                    fn(child, i, children);
                }
            },
            count: function count(children) {
                children = Children.toArray(children);
                return children.length;
            },
            only: function only(children) {
                children = Children.toArray(children);
                if (children.length !== 1) {
                    throw new Error(\\"Children.only() expects only one child.\\");
                }
                return children[0];
            },
            toArray: function toArray(children) {
                if (isNullOrUndef(children)) {
                    return [];
                }
                if (isArray(children)) {
                    var result = [];
                    flatten(children, result);
                    return result;
                }
                return EMPTY_CHILDREN.concat(children);
            }
        };
        function flatten(arr, result) {
            for (var i = 0, len = arr.length; i < len; i++) {
                var value = arr[i];
                if (isArray(value)) {
                    flatten(value, result);
                } else {
                    result.push(value);
                }
            }
            return result;
        }
        function hydrate(vnode, container, callback) {
            if (container !== null) {
                var dom = container.lastChild;
                while (dom) {
                    var next = dom.previousSibling;
                    container.removeChild(dom);
                    dom = next;
                }
                return render(vnode, container, callback);
            }
        }
        function createPortal(children, container) {
            return {
                type: container,
                vtype: 32,
                children: children,
                dom: null
            };
        }
        var version = \\"15.4.2\\";
        function unmountComponentAtNode(dom) {
            var component = dom._component;
            if (isValidElement(component)) {
                unmount(component, dom);
                delete dom._component;
                return true;
            }
            return false;
        }
        function findDOMNode(component) {
            if (isInvalid(component)) {
                return null;
            }
            return isComponent(component) ? component.vnode.dom : isValidElement(component) ? component.dom : component;
        }
        function createFactory(type) {
            return createElement$2.bind(null, type);
        }
        var WrapperComponent = function(Component$$1) {
            function WrapperComponent() {
                Component$$1.apply(this, arguments);
            }
            if (Component$$1) WrapperComponent.__proto__ = Component$$1;
            WrapperComponent.prototype = Object.create(Component$$1 && Component$$1.prototype);
            WrapperComponent.prototype.constructor = WrapperComponent;
            WrapperComponent.prototype.getChildContext = function getChildContext$$1() {
                return this.props.context;
            };
            WrapperComponent.prototype.render = function render$$1() {
                return this.props.children;
            };
            return WrapperComponent;
        }(Component);
        function unstable_renderSubtreeIntoContainer(parentComponent, vnode, container, callback) {
            var wrapper = createElement$2(WrapperComponent, {
                context: getChildContext(parentComponent, parentComponent.context)
            }, vnode);
            var rendered = render(wrapper, container);
            if (callback) {
                callback.call(rendered);
            }
            return rendered;
        }
        function isValidElement$1(element) {
            return isValidElement(element) && (element.vtype & (4 | 2)) > 0;
        }
        var unstable_batchedUpdates = nextTick;
        var shim = noop$1;
        shim.isRequired = noop$1;
        function getShim() {
            return shim;
        }
        var PropTypes = {
            array: shim,
            bool: shim,
            func: shim,
            number: shim,
            object: shim,
            string: shim,
            any: shim,
            arrayOf: getShim,
            element: shim,
            instanceOf: getShim,
            node: shim,
            objectOf: getShim,
            oneOf: getShim,
            oneOfType: getShim,
            shape: getShim,
            exact: getShim,
            PropTypes: {},
            checkPropTypes: noop$1
        };
        PropTypes.PropTypes = PropTypes;
        function createRef() {
            return {};
        }
        function forwardRef(cb) {
            var fn = function fn(props) {
                var ref = props.ref;
                delete props.ref;
                return cb(props, ref);
            };
            fn._forwarded = true;
            return fn;
        }
        function memo(component, propsAreEqual) {
            function shouldComponentUpdate(nextProps) {
                var prevRef = this.props.ref;
                var nextRef = nextProps.ref;
                if (prevRef !== nextRef) {
                    Ref.detach(this.vnode, prevRef, this.dom);
                    Ref.attach(this.vnode, nextRef, this.dom);
                    return true;
                }
                return isFunction(propsAreEqual) ? !propsAreEqual(this.props, nextProps) : !shallowEqual(this.props, nextProps);
            }
            function Memoed(props) {
                this.shouldComponentUpdate = shouldComponentUpdate;
                return createElement$2(component, Object.assign({}, props));
            }
            Memoed._forwarded = true;
            Memoed.isMemo = true;
            return Memoed;
        }
        var Emiter = function Emiter(value) {
            this.handlers = [];
            this.value = value;
        };
        Emiter.prototype.on = function on(handler) {
            this.handlers.push(handler);
        };
        Emiter.prototype.off = function off(handler) {
            this.handlers = this.handlers.filter((function(h) {
                return h !== handler;
            }));
        };
        Emiter.prototype.set = function set(value) {
            var this$1 = this;
            this.value = value;
            this.handlers.forEach((function(h) {
                return h(this$1.value);
            }));
        };
        var uid = 0;
        function onlyChild(children) {
            return Array.isArray(children) ? children[0] : children;
        }
        function createContext(defaultValue) {
            var contextProp = \\"__context_\\" + uid++ + \\"__\\";
            var Provider = function(Component$$1) {
                function Provider() {
                    Component$$1.apply(this, arguments);
                    this.emiter = new Emiter(this.props.value);
                }
                if (Component$$1) Provider.__proto__ = Component$$1;
                Provider.prototype = Object.create(Component$$1 && Component$$1.prototype);
                Provider.prototype.constructor = Provider;
                Provider.prototype.getChildContext = function getChildContext() {
                    return obj = {}, obj[contextProp] = this.emiter, obj;
                    var obj;
                };
                Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
                    if (!objectIs(this.props.value, nextProps.value)) {
                        this.emiter.set(nextProps.value);
                    }
                };
                Provider.prototype.render = function render() {
                    return this.props.children;
                };
                return Provider;
            }(Component);
            Provider.isContextProvider = true;
            var Consumer = function(Component$$1) {
                function Consumer() {
                    var this$1 = this;
                    Component$$1.apply(this, arguments);
                    this.state = {
                        value: this.getContextValue()
                    };
                    this.onUpdate = function(value) {
                        if (!objectIs(value, this$1.state.value)) {
                            this$1.setState({
                                value: this$1.getContextValue()
                            });
                        }
                    };
                }
                if (Component$$1) Consumer.__proto__ = Component$$1;
                Consumer.prototype = Object.create(Component$$1 && Component$$1.prototype);
                Consumer.prototype.constructor = Consumer;
                Consumer.prototype.componentWillMount = function componentWillMount() {
                    var emiter = this.context[contextProp];
                    if (emiter) {
                        emiter.off(this.onUpdate);
                    }
                };
                Consumer.prototype.componentDidMount = function componentDidMount() {
                    var emiter = this.context[contextProp];
                    if (emiter) {
                        emiter.on(this.onUpdate);
                    }
                };
                Consumer.prototype.getContextValue = function getContextValue() {
                    var emiter = this.context[contextProp];
                    return isUndefined(emiter) ? defaultValue : emiter.value;
                };
                Consumer.prototype.render = function render() {
                    return onlyChild(this.props.children)(this.state.value);
                };
                return Consumer;
            }(Component);
            Consumer.isContextConsumer = true;
            return {
                Provider: Provider,
                Consumer: Consumer,
                _id: contextProp,
                _defaultValue: defaultValue
            };
        }
        function Fragment(props) {
            return props.children;
        }
        var index = {
            Children: Children,
            Component: Component,
            PureComponent: PureComponent,
            createElement: createElement$2,
            cloneElement: cloneElement,
            render: render,
            nextTick: nextTick,
            options: options,
            findDOMNode: findDOMNode,
            isValidElement: isValidElement$1,
            unmountComponentAtNode: unmountComponentAtNode,
            createPortal: createPortal,
            unstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,
            hydrate: hydrate,
            createFactory: createFactory,
            unstable_batchedUpdates: unstable_batchedUpdates,
            version: version,
            PropTypes: PropTypes,
            createRef: createRef,
            forwardRef: forwardRef,
            memo: memo,
            createContext: createContext,
            renderComponent: renderComponent,
            getHooks: getHooks,
            Current: Current,
            useEffect: useEffect,
            useLayoutEffect: useLayoutEffect,
            useReducer: useReducer,
            useState: useState,
            useRef: useRef,
            useCallback: useCallback,
            useMemo: useMemo,
            useImperativeHandle: useImperativeHandle,
            useContext: useContext,
            Fragment: Fragment
        };
        __webpack_exports__[\\"b\\"] = index;
    }).call(this, __webpack_require__(3)[\\"window\\"], __webpack_require__(3)[\\"document\\"], __webpack_require__(3)[\\"requestAnimationFrame\\"]);
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _defineProperty;
    }));
    function _defineProperty(obj, key, value) {
        if (key in obj) {
            Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            obj[key] = value;
        }
        return obj;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _arrayLikeToArray;
    }));
    function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
        }
        return arr2;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _assertThisInitialized;
    }));
    function _assertThisInitialized(self) {
        if (self === void 0) {
            throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\");
        }
        return self;
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _unsupportedIterableToArray;
    }));
    var _arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
    function _unsupportedIterableToArray(o, minLen) {
        if (!o) return;
        if (typeof o === \\"string\\") return Object(_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[\\"a\\"])(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === \\"Object\\" && o.constructor) n = o.constructor.name;
        if (n === \\"Map\\" || n === \\"Set\\") return Array.from(o);
        if (n === \\"Arguments\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[\\"a\\"])(o, minLen);
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _typeof;
    }));
    function _typeof(obj) {
        \\"@babel/helpers - typeof\\";
        if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
            _typeof = function _typeof(obj) {
                return typeof obj;
            };
        } else {
            _typeof = function _typeof(obj) {
                return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj;
            };
        }
        return _typeof(obj);
    }
}, , function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _slicedToArray;
    }));
    function _arrayWithHoles(arr) {
        if (Array.isArray(arr)) return arr;
    }
    function _iterableToArrayLimit(arr, i) {
        if (typeof Symbol === \\"undefined\\" || !(Symbol.iterator in Object(arr))) return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;
        try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally {
            try {
                if (!_n && _i[\\"return\\"] != null) _i[\\"return\\"]();
            } finally {
                if (_d) throw _e;
            }
        }
        return _arr;
    }
    var unsupportedIterableToArray = __webpack_require__(10);
    function _nonIterableRest() {
        throw new TypeError(\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\");
    }
    function _slicedToArray(arr, i) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray[\\"a\\"])(arr, i) || _nonIterableRest();
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _toConsumableArray;
    }));
    var arrayLikeToArray = __webpack_require__(8);
    function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) return Object(arrayLikeToArray[\\"a\\"])(arr);
    }
    function _iterableToArray(iter) {
        if (typeof Symbol !== \\"undefined\\" && Symbol.iterator in Object(iter)) return Array.from(iter);
    }
    var unsupportedIterableToArray = __webpack_require__(10);
    function _nonIterableSpread() {
        throw new TypeError(\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\");
    }
    function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || Object(unsupportedIterableToArray[\\"a\\"])(arr) || _nonIterableSpread();
    }
}, function(module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.d(__webpack_exports__, \\"a\\", (function() {
        return _set;
    }));
    var getPrototypeOf = __webpack_require__(2);
    function _superPropBase(object, property) {
        while (!Object.prototype.hasOwnProperty.call(object, property)) {
            object = Object(getPrototypeOf[\\"a\\"])(object);
            if (object === null) break;
        }
        return object;
    }
    var defineProperty = __webpack_require__(7);
    function set_set(target, property, value, receiver) {
        if (typeof Reflect !== \\"undefined\\" && Reflect.set) {
            set_set = Reflect.set;
        } else {
            set_set = function set(target, property, value, receiver) {
                var base = _superPropBase(target, property);
                var desc;
                if (base) {
                    desc = Object.getOwnPropertyDescriptor(base, property);
                    if (desc.set) {
                        desc.set.call(receiver, value);
                        return true;
                    } else if (!desc.writable) {
                        return false;
                    }
                }
                desc = Object.getOwnPropertyDescriptor(receiver, property);
                if (desc) {
                    if (!desc.writable) {
                        return false;
                    }
                    desc.value = value;
                    Object.defineProperty(receiver, property, desc);
                } else {
                    Object(defineProperty[\\"a\\"])(receiver, property, value);
                }
                return true;
            };
        }
        return set_set(target, property, value, receiver);
    }
    function _set(target, property, value, receiver, isStrict) {
        var s = set_set(target, property, value, receiver || target);
        if (!s && isStrict) {
            throw new Error(\\"failed to set property\\");
        }
        return value;
    }
} ] ]);
"
`;
